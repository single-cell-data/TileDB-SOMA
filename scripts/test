#!/usr/bin/env bash

# A script to build and run the C++ library tests

COVERAGE=${1:-""} # default to no coverage report

set -eu -o pipefail

# cd to the top level directory of the repo
cd $(git rev-parse --show-toplevel)

# Set env for pybind11 cmake
export pybind11_DIR=$(python -m pybind11 --cmakedir)

if [ $(uname) = "Darwin" ]; then
    nproc=$(sysctl -n hw.ncpu)
else
    nproc=$(nproc)
fi

# Build the tests
cmake --build build/libtiledbsoma --target build_tests -j $nproc

# Run unit tests
cd build/libtiledbsoma
ctest -C Release --verbose

# Run python tests
cd -
pytest -v --durations=0 libtiledbsoma

# Generate coverage report
if [[ -n $COVERAGE ]]; then
  echo "Generating coverage report"

  LCOV_INFO=coverage/lcov.info
  LCOV_HTML=coverage

  mkdir -p coverage

  lcov --capture --directory build/libtiledbsoma --output-file ${LCOV_INFO}.all >& /dev/null
  lcov --remove ${LCOV_INFO}.all \
    '/usr/include/*' \
    '*/catch2/*' \
    '*/pybind11/*' \
    '*/spdlog/*' \
    '*/tiledb/*' \
    '*/thread_pool/*' \
    '*/logger.cc' \
    -o ${LCOV_INFO} >& /dev/null

  genhtml ${LCOV_INFO} --output-directory ${LCOV_HTML}

  path=$(realpath ${LCOV_HTML}/index.html)
  echo "Coverage report: file://${path}"
fi
