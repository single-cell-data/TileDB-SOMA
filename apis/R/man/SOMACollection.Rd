% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMACollection.R
\name{SOMACollection}
\alias{SOMACollection}
\title{SOMA Collection}
\description{
Class for representing a \code{SOMACollection}, which may contain of one or more
\code{\link{SOMA}}s.
}
\section{Super classes}{
\code{\link[tiledbsc:TileDBObject]{tiledbsc::TileDBObject}} -> \code{\link[tiledbsc:TileDBGroup]{tiledbsc::TileDBGroup}} -> \code{SOMACollection}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{uns}}{Named list of unstructured objects.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{somas}}{Retrieve \code{\link{SOMA}} members.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMACollection-new}{\code{SOMACollection$new()}}
\item \href{#method-SOMACollection-set_query}{\code{SOMACollection$set_query()}}
\item \href{#method-SOMACollection-reset_query}{\code{SOMACollection$reset_query()}}
\item \href{#method-SOMACollection-from_seurat}{\code{SOMACollection$from_seurat()}}
\item \href{#method-SOMACollection-to_seurat}{\code{SOMACollection$to_seurat()}}
\item \href{#method-SOMACollection-soma_uris}{\code{SOMACollection$soma_uris()}}
\item \href{#method-SOMACollection-clone}{\code{SOMACollection$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBObject" data-id="class"><a href='../../tiledbsc/html/TileDBObject.html#method-TileDBObject-class'><code>tiledbsc::TileDBObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBObject" data-id="exists"><a href='../../tiledbsc/html/TileDBObject.html#method-TileDBObject-exists'><code>tiledbsc::TileDBObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="add_member"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-add_member'><code>tiledbsc::TileDBGroup$add_member()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="add_metadata"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-add_metadata'><code>tiledbsc::TileDBGroup$add_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="count_members"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-count_members'><code>tiledbsc::TileDBGroup$count_members()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="get_member"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-get_member'><code>tiledbsc::TileDBGroup$get_member()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="get_members"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-get_members'><code>tiledbsc::TileDBGroup$get_members()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="get_metadata"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-get_metadata'><code>tiledbsc::TileDBGroup$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="group_exists"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-group_exists'><code>tiledbsc::TileDBGroup$group_exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="list_member_uris"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-list_member_uris'><code>tiledbsc::TileDBGroup$list_member_uris()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="list_members"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-list_members'><code>tiledbsc::TileDBGroup$list_members()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="list_object_uris"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-list_object_uris'><code>tiledbsc::TileDBGroup$list_object_uris()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="list_objects"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-list_objects'><code>tiledbsc::TileDBGroup$list_objects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="print"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-print'><code>tiledbsc::TileDBGroup$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="remove_member"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-remove_member'><code>tiledbsc::TileDBGroup$remove_member()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsc" data-topic="TileDBGroup" data-id="tiledb_group"><a href='../../tiledbsc/html/TileDBGroup.html#method-TileDBGroup-tiledb_group'><code>tiledbsc::TileDBGroup$tiledb_group()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-new"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{SOMACollection}. The existing TileDB group is
opened at the specified array \code{uri} if one is present, otherwise a new
array group is created. The \code{members} field is populated with
\code{SOMA} objects for each URI passed explicitly to \code{soma_uris}, as
well \code{SOMA} objects discovered within the \code{SOMACollection} object's
TileDB group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$new(uri, verbose = TRUE, config = NULL, ctx = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{uri}}{URI of the TileDB group}

\item{\code{verbose}}{Print status messages}

\item{\code{config}}{optional configuration}

\item{\code{ctx}}{optional tiledb context}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-set_query"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-set_query}{}}}
\subsection{Method \code{set_query()}}{
Set query parameters to slice by dimension values or filter
by attribute values that are applied to all SOMAs within the collection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$set_query(
  obs_ids = NULL,
  var_ids = NULL,
  obs_attr_filter = NULL,
  var_attr_filter = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obs_ids, var_ids}}{character vector containing observation- or
variable-identifiers.}

\item{\code{obs_attr_filter, var_attr_filter}}{a TileDB query condition for
attribute filtering pushdown.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
See \code{SOMA$set_query()} for more information about querying mechanics.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-reset_query"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-reset_query}{}}}
\subsection{Method \code{reset_query()}}{
Reset query dimensions and attribute filters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$reset_query()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-from_seurat"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-from_seurat}{}}}
\subsection{Method \code{from_seurat()}}{
Convert a Seurat object to a TileDB-backed \code{SOMACollection}.
\subsection{Assays}{

Each \verb{[SeuratObject::Assay}] is converted to a \code{\link{SOMA}} and written to
a nested TileDB group with a URI of \verb{./soma_<assay>} where \verb{<assay>}
is the name of the Seurat assay.
}

\subsection{Identities}{

Cell identities in the \code{\link[SeuratObject:Seurat-class]{SeuratObject::Seurat}} are maintained by
creating an \code{active_ident} attribute in \code{obs} that stores the factor
levels as a character vector.
}

\subsection{Dimensionality Reductions}{

Dimensionality reduction results are stored as \code{obsm} and \code{varm} arrays
within an \code{SOMA}. The \code{\link[SeuratObject:DimReduc-class]{SeuratObject::DimReduc}} object's \code{key} slot is
used to determine which \code{SOMA} to store the results in. The array names
are \verb{(obsm|varm)_dimreduction_<name>}, where \verb{<name>} is the name of the
dimensionality reduction method (e.g., \code{"pca"}).
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$from_seurat(object)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{A \code{\link[SeuratObject:Seurat-class]{SeuratObject::Seurat}} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-to_seurat"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-to_seurat}{}}}
\subsection{Method \code{to_seurat()}}{
Convert to a \link[SeuratObject:Seurat-class]{SeuratObject::Seurat} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$to_seurat(project = "SeuratProject", batch_mode = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project}}{\code{\link[SeuratObject:Project]{SeuratObject::Project}} name for the \code{Seurat} object}

\item{\code{batch_mode}}{logical, if \code{TRUE}, batch query mode is enabled for
retrieving \code{X} layers. See
\code{\link[=AssayMatrix]{AssayMatrix$to_dataframe()}} for more information.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-soma_uris"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-soma_uris}{}}}
\subsection{Method \code{soma_uris()}}{
List the \code{\link{SOMA}} URIs in the collection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$soma_uris()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of URIs for each \code{\link{SOMA}} in the collection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollection-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollection-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
