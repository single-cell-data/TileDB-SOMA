% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMAArrayBase.R
\name{SOMAArrayBase}
\alias{SOMAArrayBase}
\title{SOMA Array Base Class}
\description{
SOMA Array Base Class

SOMA Array Base Class
}
\details{
Virtual base class to add array-specific functionality to the
\code{\link{SOMAObject}} class (lifecycle: maturing).
}
\seealso{
Derived classes: \code{\link{SOMADataFrame}},
\code{\link{SOMANDArrayBase}}
}
\keyword{internal}
\section{Super class}{
\code{\link[tiledbsoma:SOMAObject]{tiledbsoma::SOMAObject}} -> \code{SOMAArrayBase}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMAArrayBase-open}{\code{SOMAArrayBase$open()}}
\item \href{#method-SOMAArrayBase-close}{\code{SOMAArrayBase$close()}}
\item \href{#method-SOMAArrayBase-allows_duplicates}{\code{SOMAArrayBase$allows_duplicates()}}
\item \href{#method-SOMAArrayBase-is_sparse}{\code{SOMAArrayBase$is_sparse()}}
\item \href{#method-SOMAArrayBase-schema}{\code{SOMAArrayBase$schema()}}
\item \href{#method-SOMAArrayBase-attributes}{\code{SOMAArrayBase$attributes()}}
\item \href{#method-SOMAArrayBase-attrnames}{\code{SOMAArrayBase$attrnames()}}
\item \href{#method-SOMAArrayBase-dimensions}{\code{SOMAArrayBase$dimensions()}}
\item \href{#method-SOMAArrayBase-dimnames}{\code{SOMAArrayBase$dimnames()}}
\item \href{#method-SOMAArrayBase-colnames}{\code{SOMAArrayBase$colnames()}}
\item \href{#method-SOMAArrayBase-index_column_names}{\code{SOMAArrayBase$index_column_names()}}
\item \href{#method-SOMAArrayBase-shape}{\code{SOMAArrayBase$shape()}}
\item \href{#method-SOMAArrayBase-maxshape}{\code{SOMAArrayBase$maxshape()}}
\item \href{#method-SOMAArrayBase-non_empty_domain}{\code{SOMAArrayBase$non_empty_domain()}}
\item \href{#method-SOMAArrayBase-ndim}{\code{SOMAArrayBase$ndim()}}
\item \href{#method-SOMAArrayBase-print}{\code{SOMAArrayBase$print()}}
\item \href{#method-SOMAArrayBase-clone}{\code{SOMAArrayBase$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="class"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-class'><code>tiledbsoma::SOMAObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="exists"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-exists'><code>tiledbsoma::SOMAObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="get_metadata"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-get_metadata'><code>tiledbsoma::SOMAObject$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="initialize"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-initialize'><code>tiledbsoma::SOMAObject$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="is_open"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-is_open'><code>tiledbsoma::SOMAObject$is_open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="mode"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-mode'><code>tiledbsoma::SOMAObject$mode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="reopen"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-reopen'><code>tiledbsoma::SOMAObject$reopen()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="set_metadata"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-set_metadata'><code>tiledbsoma::SOMAObject$set_metadata()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-open"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-open}{}}}
\subsection{Method \code{open()}}{
Open the SOMA object for read or write.\cr
\cr
\strong{Note}: \code{open()} is considered internal and should not be
called directly; use factory functions
(eg. \code{\link{SOMASparseNDArrayOpen}()}) instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$open(mode = c("READ", "WRITE", "DELETE"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mode}}{Mode to open the object in.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Return s\code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-close"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-close}{}}}
\subsection{Method \code{close()}}{
Close the SOMA array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$close()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-allows_duplicates"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-allows_duplicates}{}}}
\subsection{Method \code{allows_duplicates()}}{
Does an array allow duplicates?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$allows_duplicates()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the underlying TileDB array allows duplicates;
otherwise \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-is_sparse"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-is_sparse}{}}}
\subsection{Method \code{is_sparse()}}{
Is an array sparse?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$is_sparse()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the underlying TileDB array is sparse;
otherwise \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-schema"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-schema}{}}}
\subsection{Method \code{schema()}}{
Retrieve the array schema as an Arrow schema
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$schema()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An Arrow \code{\link[arrow:Schema]{Schema}} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-attributes"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-attributes}{}}}
\subsection{Method \code{attributes()}}{
Retrieve the array attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$attributes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list of array attributes; each entry contains the
following named entries:
\itemize{
\item \dQuote{\code{name}}: name of the attribute.
\item \dQuote{\code{type}}: datatype of the attribute.
\item \dQuote{\code{ncells}}: number of values per dimension cell.
\item \dQuote{\code{nullable}}: is the attribute nullable.
\item \dQuote{\code{filter_list}}: a list with filter information; this
list contains the following entries:
\itemize{
\item \dQuote{\code{filter_type}}
\item \dQuote{\code{compression_level}}
\item \dQuote{\code{bit_width}}
\item \dQuote{\code{positive_delta}}
\item \dQuote{\code{float_bytewidth}}
\item \dQuote{\code{float_factor}}
\item \dQuote{\code{float_offset}}
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-attrnames"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-attrnames}{}}}
\subsection{Method \code{attrnames()}}{
Retrieve attribute names (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$attrnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector with the array's attribute names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-dimensions"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-dimensions}{}}}
\subsection{Method \code{dimensions()}}{
Retrieve the array dimensions (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$dimensions()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list of array dimensions; each entry contains the
following named entries:
\itemize{
\item \dQuote{\code{name}}: name of the dimension.
\item \dQuote{\code{type}}: datatype of the dimension.
\item \dQuote{\code{ncells}}: number of values per dimension cell.
\item \dQuote{\code{domain}}: domain of the dimension.
\item \dQuote{\code{tile}}: tile of the dimension.
\item \dQuote{\code{filter_list}}: a list with filter information; this
list contains the following entries:
\itemize{
\item \dQuote{\code{filter_type}}
\item \dQuote{\code{compression_level}}
\item \dQuote{\code{bit_width}}
\item \dQuote{\code{positive_delta}}
\item \dQuote{\code{float_bytewidth}}
\item \dQuote{\code{float_factor}}
\item \dQuote{\code{float_offset}}
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-dimnames"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-dimnames}{}}}
\subsection{Method \code{dimnames()}}{
Retrieve dimension names (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$dimnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector with the array's dimension names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-colnames"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-colnames}{}}}
\subsection{Method \code{colnames()}}{
Retrieve the names of all columns, including dimensions and
attributes (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector with the array's column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-index_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-index_column_names}{}}}
\subsection{Method \code{index_column_names()}}{
Retrieve names of index (dimension) columns (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$index_column_names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector with the array index (dimension) names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-shape"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-shape}{}}}
\subsection{Method \code{shape()}}{
Retrieve the shape, i.e. the capacity of each dimension
Attempted reads and writes outside the \code{shape} will result in a
run-time error: this is the purpose of \code{shape}. This will not
necessarily match the bounds of occupied cells within the array.
Using \code{$resize()}, this may be increased up to the hard limit which
\code{maxshape()} reports (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$shape()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named vector of dimension length and of the same type as
the dimension.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-maxshape"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-maxshape}{}}}
\subsection{Method \code{maxshape()}}{
Retrieve the hard limit up to which the array may be resized
using the \code{$resize()} method (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$maxshape()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named vector of dimension length and of the same type as
the dimension.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-non_empty_domain"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-non_empty_domain}{}}}
\subsection{Method \code{non_empty_domain()}}{
Returns a named list of minimum/maximum pairs, one per index
column, which are the smallest and largest values written on that
index column.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$non_empty_domain(index1 = FALSE, max_only = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index1}}{Return the non-empty domain with 1-based indices}

\item{\code{max_only}}{Return only the max value per dimension, and return
this as a vector. Names are dropped (lifecycle: maturing).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Named list of minimum/maximum values, or integer vector
of maximum values.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-ndim"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-ndim}{}}}
\subsection{Method \code{ndim()}}{
Retrieve number of dimensions (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$ndim()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A scalar with the number of dimensions.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-print"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-print}{}}}
\subsection{Method \code{print()}}{
Print-friendly representation of the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMAArrayBase-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMAArrayBase-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMAArrayBase$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
