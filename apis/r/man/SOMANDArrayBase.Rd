% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMANDArrayBase.R
\name{SOMANDArrayBase}
\alias{SOMANDArrayBase}
\title{SOMA ND-Array Base Class}
\description{
Virtual base class to add ND-array-specific functionality to the
\code{\link{SOMAArrayBase}} class (lifecycle: maturing).
}
\seealso{
Derived classes: \code{\link{SOMADenseNDArray}},
\code{\link{SOMASparseNDArray}}
}
\keyword{internal}
\section{Super classes}{
\code{\link[tiledbsoma:SOMAObject]{tiledbsoma::SOMAObject}} -> \code{\link[tiledbsoma:SOMAArrayBase]{tiledbsoma::SOMAArrayBase}} -> \code{SOMANDArrayBase}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMANDArrayBase-create}{\code{SOMANDArrayBase$create()}}
\item \href{#method-SOMANDArrayBase-set_data_type}{\code{SOMANDArrayBase$set_data_type()}}
\item \href{#method-SOMANDArrayBase-tiledbsoma_has_upgraded_shape}{\code{SOMANDArrayBase$tiledbsoma_has_upgraded_shape()}}
\item \href{#method-SOMANDArrayBase-resize}{\code{SOMANDArrayBase$resize()}}
\item \href{#method-SOMANDArrayBase-tiledbsoma_upgrade_shape}{\code{SOMANDArrayBase$tiledbsoma_upgrade_shape()}}
\item \href{#method-SOMANDArrayBase-clone}{\code{SOMANDArrayBase$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="class"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-class'><code>tiledbsoma::SOMAObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="exists"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-exists'><code>tiledbsoma::SOMAObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="get_metadata"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-get_metadata'><code>tiledbsoma::SOMAObject$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="initialize"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-initialize'><code>tiledbsoma::SOMAObject$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="is_open"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-is_open'><code>tiledbsoma::SOMAObject$is_open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="mode"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-mode'><code>tiledbsoma::SOMAObject$mode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="reopen"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-reopen'><code>tiledbsoma::SOMAObject$reopen()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="set_metadata"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-set_metadata'><code>tiledbsoma::SOMAObject$set_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="allows_duplicates"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-allows_duplicates'><code>tiledbsoma::SOMAArrayBase$allows_duplicates()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="attributes"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-attributes'><code>tiledbsoma::SOMAArrayBase$attributes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="attrnames"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-attrnames'><code>tiledbsoma::SOMAArrayBase$attrnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="close"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-close'><code>tiledbsoma::SOMAArrayBase$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="colnames"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-colnames'><code>tiledbsoma::SOMAArrayBase$colnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="dimensions"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-dimensions'><code>tiledbsoma::SOMAArrayBase$dimensions()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="dimnames"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-dimnames'><code>tiledbsoma::SOMAArrayBase$dimnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="index_column_names"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-index_column_names'><code>tiledbsoma::SOMAArrayBase$index_column_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="is_sparse"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-is_sparse'><code>tiledbsoma::SOMAArrayBase$is_sparse()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="maxshape"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-maxshape'><code>tiledbsoma::SOMAArrayBase$maxshape()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="ndim"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-ndim'><code>tiledbsoma::SOMAArrayBase$ndim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="non_empty_domain"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-non_empty_domain'><code>tiledbsoma::SOMAArrayBase$non_empty_domain()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="open"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-open'><code>tiledbsoma::SOMAArrayBase$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="print"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-print'><code>tiledbsoma::SOMAArrayBase$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="schema"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-schema'><code>tiledbsoma::SOMAArrayBase$schema()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAArrayBase" data-id="shape"><a href='../../tiledbsoma/html/SOMAArrayBase.html#method-SOMAArrayBase-shape'><code>tiledbsoma::SOMAArrayBase$shape()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-create"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-create}{}}}
\subsection{Method \code{create()}}{
Create a SOMA NDArray named with the URI
(lifecycle: maturing).\cr
\cr
\strong{Note}: \code{$create()} is considered internal and should not be
called directly; use factory functions
(eg. \code{\link{SOMASparseNDArrayCreate}()}) instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$create(type, shape, platform_config = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{An \link[arrow:data-type]{Arrow type} defining the type
of each element in the array.}

\item{\code{shape}}{a vector of integers defining the shape of the array.}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-set_data_type"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-set_data_type}{}}}
\subsection{Method \code{set_data_type()}}{
Sets a cache value for the datatype (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$set_data_type(type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{A character value describing the TileDB data type.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-tiledbsoma_has_upgraded_shape"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-tiledbsoma_has_upgraded_shape}{}}}
\subsection{Method \code{tiledbsoma_has_upgraded_shape()}}{
Test if the array has the upgraded resizeable shape feature
from TileDB-SOMA 1.15, the array was created with this support, or it has
had \code{$upgrade_domain()} applied to it (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$tiledbsoma_has_upgraded_shape()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns \code{TRUE} if the array has the upgraded resizable
shape feature; otherwise, returns \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-resize"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-resize}{}}}
\subsection{Method \code{resize()}}{
Increases the shape of the array as specified, up to the hard
limit which is \code{maxshape}. Raises an error if the new shape is less
than the current shape or exceeds \code{maxshape} in any dimension. Also
raises an error if the array doesn't already have a shape; in that case
please call \code{$tiledbsoma_upgrade_shape()} (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$resize(new_shape, check_only = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_shape}}{An integerish vector of the same length as the array's
\code{$ndim()}.}

\item{\code{check_only}}{If true, does not apply the operation, but only reports
whether it would have succeeded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If \code{check_only}, returns the empty string if no error is
detected, else a description of the error. Otherwise, invisibly returns
\code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-tiledbsoma_upgrade_shape"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-tiledbsoma_upgrade_shape}{}}}
\subsection{Method \code{tiledbsoma_upgrade_shape()}}{
Allows the array to have a resizeable shape as described in
the TileDB-SOMA 1.15 release notes. Raises an error if the shape exceeds
\code{maxshape} in any dimension, or if the array already has a shape.
The methods \code{$tiledbsoma_upgrade_shape()} and \code{$resize()} are
very similar: the former must be called on a pre-1.15 array the first
time a shape is set on it; the latter must be used for subsequent resizes
on any array which already has upgraded shape (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$tiledbsoma_upgrade_shape(shape, check_only = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{shape}}{An integerish vector of the same length as the array's
\code{$ndim()}.}

\item{\code{check_only}}{If true, does not apply the operation, but only reports
whether it would have succeeded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If \code{check_only}, returns the empty string if no error is
detected, else a description of the error. Otherwise, invisibly returns
\code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMANDArrayBase-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMANDArrayBase-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMANDArrayBase$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
