% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BlockwiseIter.R
\name{BlockwiseReadIterBase}
\alias{BlockwiseReadIterBase}
\title{SOMA Blockwise Read Iterator Base Class}
\description{
Class that allows for blockwise read iteration of SOMA reads
}
\keyword{internal}
\section{Super class}{
\code{\link[tiledbsoma:ReadIter]{tiledbsoma::ReadIter}} -> \code{BlockwiseReadIterBase}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{array}}{The underlying SOMA array}

\item{\code{axis}}{The axis to iterate over in a blockwise fashion}

\item{\code{coords}}{A list of \code{\link{CoordsStrider}} objects}

\item{\code{coords_axis}}{The \code{\link{CoordsStrider}} for \code{axis}}

\item{\code{reindex_disable_on_axis}}{Additional axes that will not be re-indexed}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BlockwiseReadIterBase-new}{\code{BlockwiseReadIterBase$new()}}
\item \href{#method-BlockwiseReadIterBase-read_complete}{\code{BlockwiseReadIterBase$read_complete()}}
\item \href{#method-BlockwiseReadIterBase-read_next}{\code{BlockwiseReadIterBase$read_next()}}
\item \href{#method-BlockwiseReadIterBase-clone}{\code{BlockwiseReadIterBase$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="ReadIter" data-id="concat"><a href='../../tiledbsoma/html/ReadIter.html#method-ReadIter-concat'><code>tiledbsoma::ReadIter$concat()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseReadIterBase-new"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseReadIterBase-new}{}}}
\subsection{Method \code{new()}}{
Create
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseReadIterBase$new(
  sr,
  array,
  coords,
  axis,
  ...,
  reindex_disable_on_axis = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sr}}{SOMA read pointer}

\item{\code{array}}{Underlying \code{\link{SOMASparseNDArray}}}

\item{\code{coords}}{Named list of \code{\link{CoordsStrider}} objects; must be
named after \code{array$dimnames()}}

\item{\code{axis}}{Axis to iterate over in a blockwise manner}

\item{\code{...}}{Ignored}

\item{\code{reindex_disable_on_axis}}{Additional axes that will not be re-indexed;
currently not yet implemented}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseReadIterBase-read_complete"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseReadIterBase-read_complete}{}}}
\subsection{Method \code{read_complete()}}{
Check if the iterated read is complete or not
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseReadIterBase$read_complete()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if read is complete, otherwise \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseReadIterBase-read_next"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseReadIterBase-read_next}{}}}
\subsection{Method \code{read_next()}}{
Read the next chunk of the iterated read. If read
is complete, throws an \code{iterationCompleteWarning} warning and
returns \code{NULL}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseReadIterBase$read_next()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} or the next blockwise chunk of the iterated read
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseReadIterBase-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseReadIterBase-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseReadIterBase$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
