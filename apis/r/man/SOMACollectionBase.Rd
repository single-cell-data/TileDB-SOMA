% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMACollectionBase.R
\name{SOMACollectionBase}
\alias{SOMACollectionBase}
\title{SOMA Collection Base Class}
\description{
Base class for objects containing persistent collection of SOMA
objects, mapping string keys to any SOMA object (lifecycle: maturing).
}
\seealso{
Derived classes: \code{\link{SOMACollection}},
\code{\link{SOMAMeasurement}},
\code{\link{SOMAExperiment}}
}
\keyword{internal}
\section{Super class}{
\code{\link[tiledbsoma:SOMAObject]{tiledbsoma::SOMAObject}} -> \code{SOMACollectionBase}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{members}}{A list with the members of this collection.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMACollectionBase-create}{\code{SOMACollectionBase$create()}}
\item \href{#method-SOMACollectionBase-open}{\code{SOMACollectionBase$open()}}
\item \href{#method-SOMACollectionBase-close}{\code{SOMACollectionBase$close()}}
\item \href{#method-SOMACollectionBase-set}{\code{SOMACollectionBase$set()}}
\item \href{#method-SOMACollectionBase-get}{\code{SOMACollectionBase$get()}}
\item \href{#method-SOMACollectionBase-remove}{\code{SOMACollectionBase$remove()}}
\item \href{#method-SOMACollectionBase-length}{\code{SOMACollectionBase$length()}}
\item \href{#method-SOMACollectionBase-names}{\code{SOMACollectionBase$names()}}
\item \href{#method-SOMACollectionBase-set_metadata}{\code{SOMACollectionBase$set_metadata()}}
\item \href{#method-SOMACollectionBase-add_new_collection}{\code{SOMACollectionBase$add_new_collection()}}
\item \href{#method-SOMACollectionBase-add_new_dataframe}{\code{SOMACollectionBase$add_new_dataframe()}}
\item \href{#method-SOMACollectionBase-add_new_dense_ndarray}{\code{SOMACollectionBase$add_new_dense_ndarray()}}
\item \href{#method-SOMACollectionBase-add_new_sparse_ndarray}{\code{SOMACollectionBase$add_new_sparse_ndarray()}}
\item \href{#method-SOMACollectionBase-print}{\code{SOMACollectionBase$print()}}
\item \href{#method-SOMACollectionBase-clone}{\code{SOMACollectionBase$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="class"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-class'><code>tiledbsoma::SOMAObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="exists"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-exists'><code>tiledbsoma::SOMAObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="get_metadata"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-get_metadata'><code>tiledbsoma::SOMAObject$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="initialize"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-initialize'><code>tiledbsoma::SOMAObject$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="is_open"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-is_open'><code>tiledbsoma::SOMAObject$is_open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="mode"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-mode'><code>tiledbsoma::SOMAObject$mode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMAObject" data-id="reopen"><a href='../../tiledbsoma/html/SOMAObject.html#method-SOMAObject-reopen'><code>tiledbsoma::SOMAObject$reopen()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-create"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-create}{}}}
\subsection{Method \code{create()}}{
Create a SOMA collection (lifecycle: maturing).\cr
\cr
\strong{Note}: \code{$create()} is considered internal and should not be
called directly; use factory functions
(eg. \code{\link{SOMACollectionCreate}()}) instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$create()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-open"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-open}{}}}
\subsection{Method \code{open()}}{
Open the SOMA collection for read or write.\cr
\cr
\strong{Note}: \code{$open()} is considered internal and should not be
called#' directly; use factory functions
(eg. \code{\link{SOMACollectionOpen}()}) instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$open(mode = c("READ", "WRITE"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mode}}{Mode to open the object in.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-close"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-close}{}}}
\subsection{Method \code{close()}}{
Close the SOMA collection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$close()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-set"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-set}{}}}
\subsection{Method \code{set()}}{
Add a new SOMA object to the collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$set(object, name = NULL, relative = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{SOMA object.}

\item{\code{name}}{The name to use for the object; defaults to the basename of
\code{object$uri}.}

\item{\code{relative}}{An optional logical value indicating whether the new
object's URI is relative to the collection's URI. If \code{NULL} (the
default), the object's URI is assumed to be relative unless it is a
\code{tiledb://} URI.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-get"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-get}{}}}
\subsection{Method \code{get()}}{
Retrieve a SOMA object by name. (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$get(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the object to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The SOMA object stored as \code{name}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-remove"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-remove}{}}}
\subsection{Method \code{remove()}}{
Remove member. (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$remove(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the member to remove.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-length"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-length}{}}}
\subsection{Method \code{length()}}{
Get the number of members in this collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$length()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The number of members in this collection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-names"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-names}{}}}
\subsection{Method \code{names()}}{
Retrieve the names of members (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of member names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-set_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-set_metadata}{}}}
\subsection{Method \code{set_metadata()}}{
Add list of metadata (lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$set_metadata(metadata)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metadata}}{Named list of metadata to add.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-add_new_collection"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-add_new_collection}{}}}
\subsection{Method \code{add_new_collection()}}{
Add a new SOMA collection to this collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$add_new_collection(object, key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{SOMA collection object.}

\item{\code{key}}{The key to be added.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns \code{object}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-add_new_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-add_new_dataframe}{}}}
\subsection{Method \code{add_new_dataframe()}}{
Add a new SOMA data frame to this collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$add_new_dataframe(
  key,
  schema,
  index_column_names,
  domain,
  platform_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The key to be added.}

\item{\code{schema}}{Arrow schema argument passed on to
\code{SOMADataFrame$create()}.}

\item{\code{index_column_names}}{Index column names passed on to
\code{SOMADataFrame$create()}.}

\item{\code{domain}}{As in \code{\link{SOMADataFrameCreate}}.}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the newly created data frame stored at \code{key}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-add_new_dense_ndarray"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-add_new_dense_ndarray}{}}}
\subsection{Method \code{add_new_dense_ndarray()}}{
Add a new SOMA DenseNdArray to this collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$add_new_dense_ndarray(
  key,
  type,
  shape,
  platform_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The key to be added.}

\item{\code{type}}{An \link[arrow:data-type]{Arrow type} defining the
type of each element in the array.}

\item{\code{shape}}{a vector of integers defining the shape of the array.}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the newly-created array stored at \code{key}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-add_new_sparse_ndarray"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-add_new_sparse_ndarray}{}}}
\subsection{Method \code{add_new_sparse_ndarray()}}{
Add a new SOMA SparseNdArray to this collection
(lifecycle: maturing).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$add_new_sparse_ndarray(
  key,
  type,
  shape,
  platform_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The key to be added.}

\item{\code{type}}{An \link[arrow:data-type]{Arrow type} defining the
type of each element in the array.}

\item{\code{shape}}{a vector of integers defining the shape of the array.}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}

\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the newly-created array stored at \code{key}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-print"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-print}{}}}
\subsection{Method \code{print()}}{
Print-friendly representation of the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMACollectionBase-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMACollectionBase-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMACollectionBase$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
