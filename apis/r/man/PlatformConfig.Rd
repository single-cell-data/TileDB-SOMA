% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlatformConfig.R
\name{PlatformConfig}
\alias{PlatformConfig}
\title{Platform Configuration}
\description{
An R6 mapping type for configuring various \dQuote{parameters} for multiple
\dQuote{platforms}, essentially serves a multi-nested map where the inner
map is a \code{\link{ScalarMap}} contained within a \code{\link{ConfigList}}
(middle map):
\code{\{platform: \{param: \{key: value\}\}\}}
}
\section{Super class}{
\code{tiledbsoma::MappingBase} -> \code{PlatformConfig}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PlatformConfig-platforms}{\code{PlatformConfig$platforms()}}
\item \href{#method-PlatformConfig-params}{\code{PlatformConfig$params()}}
\item \href{#method-PlatformConfig-get}{\code{PlatformConfig$get()}}
\item \href{#method-PlatformConfig-get_params}{\code{PlatformConfig$get_params()}}
\item \href{#method-PlatformConfig-set}{\code{PlatformConfig$set()}}
\item \href{#method-PlatformConfig-setv}{\code{PlatformConfig$setv()}}
\item \href{#method-PlatformConfig-clone}{\code{PlatformConfig$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="initialize"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-initialize'><code>tiledbsoma::MappingBase$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="items"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-items'><code>tiledbsoma::MappingBase$items()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="keys"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-keys'><code>tiledbsoma::MappingBase$keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="length"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-length'><code>tiledbsoma::MappingBase$length()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="print"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-print'><code>tiledbsoma::MappingBase$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="remove"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-remove'><code>tiledbsoma::MappingBase$remove()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="to_list"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-to_list'><code>tiledbsoma::MappingBase$to_list()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="update"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-update'><code>tiledbsoma::MappingBase$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="values"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-values'><code>tiledbsoma::MappingBase$values()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-platforms"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-platforms}{}}}
\subsection{Method \code{platforms()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$platforms()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The names of the \dQuote{platforms} (outer keys)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-params"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-params}{}}}
\subsection{Method \code{params()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$params(platform = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{platform}}{The \dQuote{platform} to pull parameter names
(middle keys)
for; pass \code{TRUE} to return all possible parameter names}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The parameter names (middle keys) for \code{platform}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-get"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-get}{}}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$get(
  platform,
  param = NULL,
  key = NULL,
  default = quote(expr = )
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{platform}}{The name of the \dQuote{platform} (outer key) to fetch}

\item{\code{param}}{The name of the \dQuote{paramters} of \code{platform}
to fetch; if \code{NULL}, returns the
\link[tiledbsoma:ConfigList]{configuration} for \code{platform}}

\item{\code{key}}{The \dQuote{key} (inner key) for \code{param} in
\code{platform} to fetch; if \code{NULL} and \code{param} is passed,
returns the \link[tiledbsoma:ScalarMap]{map} for \code{param}
in \code{platform}}

\item{\code{default}}{Default value to fetch if \code{key} is not found;
defaults to \code{null}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of \code{key} for \code{param} in \code{platform} in the
map, or \code{default} if \code{key} is not found
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-get_params"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-get_params}{}}}
\subsection{Method \code{get_params()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$get_params(platform)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{platform}}{The name of the \dQuote{platform} (outer key) to fetch}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{\link{ConfigList}} for \code{platform}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-set"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-set}{}}}
\subsection{Method \code{set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$set(platform, param, key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{platform}}{The name of the \dQuote{platform} (outer key) to set}

\item{\code{param}}{Name of the \dQuote{parameter} (middle key) in
\code{platform} to set}

\item{\code{key}}{Inner key to set}

\item{\code{value}}{Value to add for \code{key}, or \code{NULL} to remove the
entry for \code{key}; optionally provide only \code{platfomr},
\code{param}, and \code{value} as a \code{\link{ScalarMap}} to
update  \code{param} for \code{platform} with the keys and values
from \code{value}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\[chainable\] Invisibly returns \code{self} with \code{value}
added for \code{key} in \code{param} for \code{platform}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-setv"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-setv}{}}}
\subsection{Method \code{setv()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$setv(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Ignored}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing; \code{setv()} is disabled for
\code{PlatformConfig} objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PlatformConfig-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PlatformConfig-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlatformConfig$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
