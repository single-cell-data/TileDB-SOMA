% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BlockwiseIter.R
\name{BlockwiseSparseReadIter}
\alias{BlockwiseSparseReadIter}
\title{SOMA Blockwise Read Iterator for Sparse Matrices}
\description{
Class that allows for blockwise read iteration of SOMA reads
as sparse matrices
}
\keyword{internal}
\section{Super classes}{
\code{\link[tiledbsoma:ReadIter]{tiledbsoma::ReadIter}} -> \code{\link[tiledbsoma:BlockwiseReadIterBase]{tiledbsoma::BlockwiseReadIterBase}} -> \code{BlockwiseSparseReadIter}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{repr}}{Representation of the sparse matrix to return}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BlockwiseSparseReadIter-new}{\code{BlockwiseSparseReadIter$new()}}
\item \href{#method-BlockwiseSparseReadIter-concat}{\code{BlockwiseSparseReadIter$concat()}}
\item \href{#method-BlockwiseSparseReadIter-clone}{\code{BlockwiseSparseReadIter$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="BlockwiseReadIterBase" data-id="read_complete"><a href='../../tiledbsoma/html/BlockwiseReadIterBase.html#method-BlockwiseReadIterBase-read_complete'><code>tiledbsoma::BlockwiseReadIterBase$read_complete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="BlockwiseReadIterBase" data-id="read_next"><a href='../../tiledbsoma/html/BlockwiseReadIterBase.html#method-BlockwiseReadIterBase-read_next'><code>tiledbsoma::BlockwiseReadIterBase$read_next()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseSparseReadIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseSparseReadIter-new}{}}}
\subsection{Method \code{new()}}{
Create
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseSparseReadIter$new(
  sr,
  array,
  coords,
  axis,
  ...,
  repr = "T",
  reindex_disable_on_axis = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sr}}{SOMA read pointer}

\item{\code{array}}{Underlying \code{\link{SOMASparseNDArray}}}

\item{\code{coords}}{Named list of \code{\link{CoordsStrider}} objects; must be
named after \code{array$dimnames()}}

\item{\code{axis}}{Axis to iterate over in a blockwise manner}

\item{\code{...}}{Ignored}

\item{\code{repr}}{Representation of the sparse matrix to return; choose from:
\itemize{
\item \dQuote{\code{T}}: returns a
\code{\link[Matrix:TsparseMatrix-class]{TsparseMatrix}}
\item \dQuote{\code{R}}: returns an
\code{\link[Matrix:RsparseMatrix-class]{RsparseMatrix}}
\item \dQuote{\code{C}}: returns a
\code{\link[Matrix:CsparseMatrix-class]{CsparseMatrix}}
}
\strong{Note}: passing \code{repr} of \dQuote{\code{R}} or \dQuote{\code{C}}
are only available if re-indexing is enabled on axes \code{0} or \code{1},
respectively}

\item{\code{reindex_disable_on_axis}}{Additional axes that will not be re-indexed;
the following values may be used as shorthands for common settings:
\itemize{
\item \dQuote{\code{TRUE}}: disable re-indexing on all axes
\item \dQuote{\code{NA}}: re-index only on \code{axis}, disable
re-indexing on all others
\item \dQuote{\code{FALSE}}: re-index on \emph{all} axes, do \strong{not}
disable re-indexing
}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseSparseReadIter-concat"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseSparseReadIter-concat}{}}}
\subsection{Method \code{concat()}}{
Concatenate the remainder of the blockwise iterator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseSparseReadIter$concat()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A sparse matrix (determined by \code{self$repr}) with
the remainder of the iterator
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlockwiseSparseReadIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BlockwiseSparseReadIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlockwiseSparseReadIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
