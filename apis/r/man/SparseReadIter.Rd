% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SparseReadIter.R
\name{SparseReadIter}
\alias{SparseReadIter}
\title{SparseReadIter}
\description{
\code{SparseReadIter} is a class that allows for iteration over
a reads on \link{SOMASparseNDArray}.
Iteration chunks are retrieved as 0-based Views \link{matrixZeroBasedView} of Matrix::\link[Matrix]{SparseMatrix}.
}
\section{Super class}{
\code{\link[tiledbsoma:ReadIter]{tiledbsoma::ReadIter}} -> \code{SparseReadIter}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SparseReadIter-new}{\code{SparseReadIter$new()}}
\item \href{#method-SparseReadIter-concat}{\code{SparseReadIter$concat()}}
\item \href{#method-SparseReadIter-clone}{\code{SparseReadIter$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="ReadIter" data-id="read_complete"><a href='../../tiledbsoma/html/ReadIter.html#method-ReadIter-read_complete'><code>tiledbsoma::ReadIter$read_complete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="ReadIter" data-id="read_next"><a href='../../tiledbsoma/html/ReadIter.html#method-ReadIter-read_next'><code>tiledbsoma::ReadIter$read_next()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SparseReadIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-SparseReadIter-new}{}}}
\subsection{Method \code{new()}}{
Create (lifecycle: experimental)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparseReadIter$new(
  uri,
  config,
  colnames = NULL,
  qc = NULL,
  dim_points = NULL,
  loglevel = "auto",
  repr = c("C", "T", "R")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{uri}}{Character value with URI path to a SOMADataFrame or SOMASparseNDArray}

\item{\code{config}}{character vector containing TileDB config.}

\item{\code{colnames}}{Optional vector of character value with the name of the columns to retrieve}

\item{\code{qc}}{Optional external Pointer object to TileDB Query Condition, defaults to \sQuote{NULL} i.e.
no query condition}

\item{\code{dim_points}}{Optional named list with vector of data points to select on the given
dimension(s). Each dimension can be one entry in the list.}

\item{\code{loglevel}}{Character value with the desired logging level, defaults to \sQuote{auto}}

\item{\code{repr}}{Optional one-character code for sparse matrix representation type
which lets prior setting prevail, any other value is set as new logging level.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SparseReadIter-concat"></a>}}
\if{latex}{\out{\hypertarget{method-SparseReadIter-concat}{}}}
\subsection{Method \code{concat()}}{
Concatenate remainder of iterator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparseReadIter$concat()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\link{matrixZeroBasedView} of Matrix::\link[Matrix]{SparseMatrix}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SparseReadIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SparseReadIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparseReadIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
