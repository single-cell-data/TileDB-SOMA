% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMADenseNDArray.R
\name{SOMADenseNDArray}
\alias{SOMADenseNDArray}
\title{SOMADenseNDArray}
\description{
\code{SOMADenseNDArray} is a dense, N-dimensional array of \code{primitive} type, with
offset (zero-based) \code{int64} integer indexing on each dimension with domain
\verb{[0, maxInt64)}. The \code{SOMADenseNDArray} has a user-defined schema, which
includes:
\itemize{
\item \strong{type}: a \code{primitive} type, expressed as an Arrow type (e.g., \code{int64},
\code{float32}, etc), indicating the type of data contained within the array
\item \strong{shape}: the shape of the array, i.e., number and length of each
dimension
}

All dimensions must have a positive, non-zero length, and there must be 1 or
more dimensions.

The default "fill" value for \code{SOMADenseNDArray} is the zero or null value of
the array type (e.g., Arrow.float32 defaults to 0.0).

The \code{write} method is currently limited to writing from 2-d matrices.
(lifecycle: maturing)
}
\section{Super classes}{
\code{\link[tiledbsoma:TileDBObject]{tiledbsoma::TileDBObject}} -> \code{\link[tiledbsoma:TileDBArray]{tiledbsoma::TileDBArray}} -> \code{\link[tiledbsoma:SOMAArrayBase]{tiledbsoma::SOMAArrayBase}} -> \code{\link[tiledbsoma:SOMANDArrayBase]{tiledbsoma::SOMANDArrayBase}} -> \code{SOMADenseNDArray}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMADenseNDArray-read_arrow_table}{\code{SOMADenseNDArray$read_arrow_table()}}
\item \href{#method-SOMADenseNDArray-read_dense_matrix}{\code{SOMADenseNDArray$read_dense_matrix()}}
\item \href{#method-SOMADenseNDArray-write}{\code{SOMADenseNDArray$write()}}
\item \href{#method-SOMADenseNDArray-clone}{\code{SOMADenseNDArray$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="class"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-class'><code>tiledbsoma::TileDBObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="exists"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-exists'><code>tiledbsoma::TileDBObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="initialize"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-initialize'><code>tiledbsoma::TileDBObject$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="is_open"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-is_open'><code>tiledbsoma::TileDBObject$is_open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="mode"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-mode'><code>tiledbsoma::TileDBObject$mode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="reopen"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-reopen'><code>tiledbsoma::TileDBObject$reopen()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="attributes"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-attributes'><code>tiledbsoma::TileDBArray$attributes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="attrnames"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-attrnames'><code>tiledbsoma::TileDBArray$attrnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="close"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-close'><code>tiledbsoma::TileDBArray$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="colnames"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-colnames'><code>tiledbsoma::TileDBArray$colnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="dimensions"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-dimensions'><code>tiledbsoma::TileDBArray$dimensions()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="dimnames"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-dimnames'><code>tiledbsoma::TileDBArray$dimnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="fragment_count"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-fragment_count'><code>tiledbsoma::TileDBArray$fragment_count()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="get_metadata"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-get_metadata'><code>tiledbsoma::TileDBArray$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="index_column_names"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-index_column_names'><code>tiledbsoma::TileDBArray$index_column_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="ndim"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-ndim'><code>tiledbsoma::TileDBArray$ndim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="non_empty_domain"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-non_empty_domain'><code>tiledbsoma::TileDBArray$non_empty_domain()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="open"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-open'><code>tiledbsoma::TileDBArray$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="print"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-print'><code>tiledbsoma::TileDBArray$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="schema"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-schema'><code>tiledbsoma::TileDBArray$schema()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="set_metadata"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-set_metadata'><code>tiledbsoma::TileDBArray$set_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="shape"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-shape'><code>tiledbsoma::TileDBArray$shape()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="tiledb_array"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-tiledb_array'><code>tiledbsoma::TileDBArray$tiledb_array()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="tiledb_schema"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-tiledb_schema'><code>tiledbsoma::TileDBArray$tiledb_schema()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="used_shape"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-used_shape'><code>tiledbsoma::TileDBArray$used_shape()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="SOMANDArrayBase" data-id="create"><a href='../../tiledbsoma/html/SOMANDArrayBase.html#method-SOMANDArrayBase-create'><code>tiledbsoma::SOMANDArrayBase$create()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNDArray-read_arrow_table"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNDArray-read_arrow_table}{}}}
\subsection{Method \code{read_arrow_table()}}{
Read as an 'arrow::Table' (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNDArray$read_arrow_table(
  coords = NULL,
  result_order = "auto",
  log_level = "warn"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coords}}{Optional \code{list} of integer vectors, one for each dimension, with a
length equal to the number of values to read. If \code{NULL}, all values are
read. List elements can be named when specifying a subset of dimensions.}

\item{\code{result_order}}{Optional order of read results. This can be one of either
\verb{"ROW_MAJOR, }"COL_MAJOR"\verb{, or }"auto"` (default).}

\item{\code{result_order}}{Optional order of read results. This can be one of either
\verb{"ROW_MAJOR, }"COL_MAJOR"\verb{, or }"auto"` (default).}

\item{\code{log_level}}{Optional logging level with default value of \code{"warn"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{\link[arrow:Table-class]{arrow::Table}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNDArray-read_dense_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNDArray-read_dense_matrix}{}}}
\subsection{Method \code{read_dense_matrix()}}{
Read as a dense matrix (lifecycle: maturing)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNDArray$read_dense_matrix(
  coords = NULL,
  result_order = "ROW_MAJOR",
  log_level = "warn"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coords}}{Optional \code{list} of integer vectors, one for each dimension, with a
length equal to the number of values to read. If \code{NULL}, all values are
read. List elements can be named when specifying a subset of dimensions.}

\item{\code{result_order}}{Optional order of read results. This can be one of either
\verb{"ROW_MAJOR, }"COL_MAJOR"\verb{, or }"auto"` (default).}

\item{\code{result_order}}{Optional order of read results. This can be one of either
\verb{"ROW_MAJOR, }"COL_MAJOR"\verb{, or }"auto"` (default).}

\item{\code{log_level}}{Optional logging level with default value of \code{"warn"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{matrix} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNDArray-write"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNDArray-write}{}}}
\subsection{Method \code{write()}}{
Write matrix data to the array. (lifecycle: maturing)

More general write methods for higher-dimensional array could be added.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNDArray$write(values, coords = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{values}}{A \code{matrix}. Character dimension names are ignored because
\code{SOMANDArray}'s use integer indexing.}

\item{\code{coords}}{A \code{list} of integer vectors, one for each dimension, with a
length equal to the number of values to write. If \code{NULL}, the default,
the values are taken from the row and column names of \code{values}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNDArray-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNDArray-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNDArray$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
