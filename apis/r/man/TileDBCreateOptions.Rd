% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TileDBCreateOptions.R
\name{TileDBCreateOptions}
\alias{TileDBCreateOptions}
\title{TileDBCreateOptions}
\description{
Provides strongly-typed access and default values for
\code{platform_config} options stored under the \dQuote{tiledb}
\eqn{\rightarrow} \dQuote{create} mapping keys.

Intended for internal use only.
}
\examples{

## ------------------------------------------------
## Method `TileDBCreateOptions$dim_tile`
## ------------------------------------------------

cfg <- PlatformConfig$new()
cfg$set(
  platform = 'tiledb',
  param = 'create',
  key = 'dims',
  value = list(soma_dim_0 = list(tile = 999))
)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$dim_tile("soma_dim_0")
tdco$dim_tile("soma_dim_1")


## ------------------------------------------------
## Method `TileDBCreateOptions$dim_filters`
## ------------------------------------------------

filters <- list(
  soma_dim_0 = list(tile = 100, filters = list("RLE")),
  soma_dim_1 = list(tile = 200, filters = list("RLE", list(name = "ZSTD", COMPRESSION_LEVEL = 9)))
)
cfg <- PlatformConfig$new()
cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$dim_filters("soma_dim_0")
tdco$dim_filters("non-existant")


## ------------------------------------------------
## Method `TileDBCreateOptions$attr_filters`
## ------------------------------------------------

filters <- list(
  soma_data_a = list(filters = list("RLE")),
  soma_data_b = list(filters = list("RLE", list(name = "ZSTD", COMPRESSION_LEVEL = 9)))
)
cfg <- PlatformConfig$new()
cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$attr_filters("soma_data_b")
tdco$attr_filters("non-existant")

}
\keyword{internal}
\section{Super class}{
\code{\link[tiledbsoma:MappingBase]{tiledbsoma::MappingBase}} -> \code{TileDBCreateOptions}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TileDBCreateOptions-new}{\code{TileDBCreateOptions$new()}}
\item \href{#method-TileDBCreateOptions-cell_tile_orders}{\code{TileDBCreateOptions$cell_tile_orders()}}
\item \href{#method-TileDBCreateOptions-dim_tile}{\code{TileDBCreateOptions$dim_tile()}}
\item \href{#method-TileDBCreateOptions-capacity}{\code{TileDBCreateOptions$capacity()}}
\item \href{#method-TileDBCreateOptions-allows_duplicates}{\code{TileDBCreateOptions$allows_duplicates()}}
\item \href{#method-TileDBCreateOptions-dataframe_dim_zstd_level}{\code{TileDBCreateOptions$dataframe_dim_zstd_level()}}
\item \href{#method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level}{\code{TileDBCreateOptions$sparse_nd_array_dim_zstd_level()}}
\item \href{#method-TileDBCreateOptions-dense_nd_array_dim_zstd_level}{\code{TileDBCreateOptions$dense_nd_array_dim_zstd_level()}}
\item \href{#method-TileDBCreateOptions-offsets_filters}{\code{TileDBCreateOptions$offsets_filters()}}
\item \href{#method-TileDBCreateOptions-validity_filters}{\code{TileDBCreateOptions$validity_filters()}}
\item \href{#method-TileDBCreateOptions-dim_filters}{\code{TileDBCreateOptions$dim_filters()}}
\item \href{#method-TileDBCreateOptions-attr_filters}{\code{TileDBCreateOptions$attr_filters()}}
\item \href{#method-TileDBCreateOptions-write_X_chunked}{\code{TileDBCreateOptions$write_X_chunked()}}
\item \href{#method-TileDBCreateOptions-goal_chunk_nnz}{\code{TileDBCreateOptions$goal_chunk_nnz()}}
\item \href{#method-TileDBCreateOptions-to_list}{\code{TileDBCreateOptions$to_list()}}
\item \href{#method-TileDBCreateOptions-clone}{\code{TileDBCreateOptions$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="get"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-get'><code>tiledbsoma::MappingBase$get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="items"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-items'><code>tiledbsoma::MappingBase$items()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="keys"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-keys'><code>tiledbsoma::MappingBase$keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="length"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-length'><code>tiledbsoma::MappingBase$length()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="print"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-print'><code>tiledbsoma::MappingBase$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="remove"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-remove'><code>tiledbsoma::MappingBase$remove()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="set"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-set'><code>tiledbsoma::MappingBase$set()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="setv"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-setv'><code>tiledbsoma::MappingBase$setv()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="update"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-update'><code>tiledbsoma::MappingBase$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="values"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-values'><code>tiledbsoma::MappingBase$values()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-new"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-new}{}}}
\subsection{Method \code{new()}}{
Create a \code{TileDBCreateOptions} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$new(platform_config = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{platform_config}}{A \link[tiledbsoma:PlatformConfig]{platform configuration}
object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-cell_tile_orders"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-cell_tile_orders}{}}}
\subsection{Method \code{cell_tile_orders()}}{
Returns the cell and tile orders that should be used.
If neither \code{cell_order} nor \code{tile_order} is present, only in this
case will we use the default values provided.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$cell_tile_orders()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A two-length character vector with names of
\dQuote{\code{cell_order}} and \dQuote{\code{tile_order}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dim_tile"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dim_tile}{}}}
\subsection{Method \code{dim_tile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dim_tile(dim_name, default = 2048)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dim_name}}{Name of dimension to get tiling for}

\item{\code{default}}{Default tiling if \code{dim_name} is not set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
int
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{cfg <- PlatformConfig$new()
cfg$set(
  platform = 'tiledb',
  param = 'create',
  key = 'dims',
  value = list(soma_dim_0 = list(tile = 999))
)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$dim_tile("soma_dim_0")
tdco$dim_tile("soma_dim_1")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-capacity"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-capacity}{}}}
\subsection{Method \code{capacity()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$capacity()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-allows_duplicates"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-allows_duplicates}{}}}
\subsection{Method \code{allows_duplicates()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$allows_duplicates()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
bool
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dataframe_dim_zstd_level"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dataframe_dim_zstd_level}{}}}
\subsection{Method \code{dataframe_dim_zstd_level()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dataframe_dim_zstd_level()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level}{}}}
\subsection{Method \code{sparse_nd_array_dim_zstd_level()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$sparse_nd_array_dim_zstd_level()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dense_nd_array_dim_zstd_level"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dense_nd_array_dim_zstd_level}{}}}
\subsection{Method \code{dense_nd_array_dim_zstd_level()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dense_nd_array_dim_zstd_level()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-offsets_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-offsets_filters}{}}}
\subsection{Method \code{offsets_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$offsets_filters(default = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{default}}{Default offset filters to use if not currently set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of
\code{\link[tiledb:tiledb_filter-class]{tiledb_filter}} objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-validity_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-validity_filters}{}}}
\subsection{Method \code{validity_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$validity_filters(default = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{default}}{Default validity filters to use if not currently set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of
\code{\link[tiledb:tiledb_filter-class]{tiledb_filter}} objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dim_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dim_filters}{}}}
\subsection{Method \code{dim_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dim_filters(dim_name, default = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dim_name}}{Name of dimension to get filters for}

\item{\code{default}}{Default filters to use for if not currently set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of
\code{\link[tiledb:tiledb_filter-class]{tiledb_filter}} objects
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{filters <- list(
  soma_dim_0 = list(tile = 100, filters = list("RLE")),
  soma_dim_1 = list(tile = 200, filters = list("RLE", list(name = "ZSTD", COMPRESSION_LEVEL = 9)))
)
cfg <- PlatformConfig$new()
cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$dim_filters("soma_dim_0")
tdco$dim_filters("non-existant")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-attr_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-attr_filters}{}}}
\subsection{Method \code{attr_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$attr_filters(attr_name, default = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{attr_name}}{Name of attribute}

\item{\code{default}}{Default filters to use if not currently set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of
\code{\link[tiledb:tiledb_filter-class]{tiledb_filter}} objects
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{filters <- list(
  soma_data_a = list(filters = list("RLE")),
  soma_data_b = list(filters = list("RLE", list(name = "ZSTD", COMPRESSION_LEVEL = 9)))
)
cfg <- PlatformConfig$new()
cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters)
(tdco <- TileDBCreateOptions$new(cfg))
tdco$attr_filters("soma_data_b")
tdco$attr_filters("non-existant")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-write_X_chunked"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-write_X_chunked}{}}}
\subsection{Method \code{write_X_chunked()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$write_X_chunked()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
bool
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-goal_chunk_nnz"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-goal_chunk_nnz}{}}}
\subsection{Method \code{goal_chunk_nnz()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$goal_chunk_nnz()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-to_list}{}}}
\subsection{Method \code{to_list()}}{
...
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$to_list(build_filters = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{build_filters}}{Build filters into
\code{\link[tiledb:tiledb_filter-class]{tiledb_filter}} objects. If set to
\code{FALSE}, JSON strings are created instead of filter objects.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The 'create options' as a list
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
