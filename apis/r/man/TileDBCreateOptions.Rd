% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TileDBCreateOptions.R
\name{TileDBCreateOptions}
\alias{TileDBCreateOptions}
\title{TileDBCreateOptions}
\description{
Provides strongly-typed access and default values for `platform_config` options stored under the
"tiledb"->"create" mapping keys.
}
\details{
Intended for internal use only.
}
\section{Super class}{
\code{tiledbsoma::MappingBase} -> \code{TileDBCreateOptions}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TileDBCreateOptions-new}{\code{TileDBCreateOptions$new()}}
\item \href{#method-TileDBCreateOptions-cell_tile_orders}{\code{TileDBCreateOptions$cell_tile_orders()}}
\item \href{#method-TileDBCreateOptions-dim_tile}{\code{TileDBCreateOptions$dim_tile()}}
\item \href{#method-TileDBCreateOptions-capacity}{\code{TileDBCreateOptions$capacity()}}
\item \href{#method-TileDBCreateOptions-allows_duplicates}{\code{TileDBCreateOptions$allows_duplicates()}}
\item \href{#method-TileDBCreateOptions-dataframe_dim_zstd_level}{\code{TileDBCreateOptions$dataframe_dim_zstd_level()}}
\item \href{#method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level}{\code{TileDBCreateOptions$sparse_nd_array_dim_zstd_level()}}
\item \href{#method-TileDBCreateOptions-offsets_filters}{\code{TileDBCreateOptions$offsets_filters()}}
\item \href{#method-TileDBCreateOptions-validity_filters}{\code{TileDBCreateOptions$validity_filters()}}
\item \href{#method-TileDBCreateOptions-dim_filters}{\code{TileDBCreateOptions$dim_filters()}}
\item \href{#method-TileDBCreateOptions-attr_filters}{\code{TileDBCreateOptions$attr_filters()}}
\item \href{#method-TileDBCreateOptions-write_X_chunked}{\code{TileDBCreateOptions$write_X_chunked()}}
\item \href{#method-TileDBCreateOptions-goal_chunk_nnz}{\code{TileDBCreateOptions$goal_chunk_nnz()}}
\item \href{#method-TileDBCreateOptions-.dim}{\code{TileDBCreateOptions$.dim()}}
\item \href{#method-TileDBCreateOptions-.attr}{\code{TileDBCreateOptions$.attr()}}
\item \href{#method-TileDBCreateOptions-.build_filters}{\code{TileDBCreateOptions$.build_filters()}}
\item \href{#method-TileDBCreateOptions-.build_filter}{\code{TileDBCreateOptions$.build_filter()}}
\item \href{#method-TileDBCreateOptions-clone}{\code{TileDBCreateOptions$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="get"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-get'><code>tiledbsoma::MappingBase$get()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="items"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-items'><code>tiledbsoma::MappingBase$items()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="keys"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-keys'><code>tiledbsoma::MappingBase$keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="length"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-length'><code>tiledbsoma::MappingBase$length()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="print"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-print'><code>tiledbsoma::MappingBase$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="remove"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-remove'><code>tiledbsoma::MappingBase$remove()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="set"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-set'><code>tiledbsoma::MappingBase$set()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="setv"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-setv'><code>tiledbsoma::MappingBase$setv()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="to_list"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-to_list'><code>tiledbsoma::MappingBase$to_list()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="update"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-update'><code>tiledbsoma::MappingBase$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="MappingBase" data-id="values"><a href='../../tiledbsoma/html/MappingBase.html#method-MappingBase-values'><code>tiledbsoma::MappingBase$values()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-new"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$new(platform_config)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-cell_tile_orders"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-cell_tile_orders}{}}}
\subsection{Method \code{cell_tile_orders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$cell_tile_orders()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a list keyed by `"cell_order"` and `"tile_order"`, where either
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dim_tile"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dim_tile}{}}}
\subsection{Method \code{dim_tile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dim_tile(dim_name, default = .default_tile_extent())}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-capacity"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-capacity}{}}}
\subsection{Method \code{capacity()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$capacity()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-allows_duplicates"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-allows_duplicates}{}}}
\subsection{Method \code{allows_duplicates()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$allows_duplicates()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
bool
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dataframe_dim_zstd_level"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dataframe_dim_zstd_level}{}}}
\subsection{Method \code{dataframe_dim_zstd_level()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dataframe_dim_zstd_level()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-sparse_nd_array_dim_zstd_level}{}}}
\subsection{Method \code{sparse_nd_array_dim_zstd_level()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$sparse_nd_array_dim_zstd_level()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-offsets_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-offsets_filters}{}}}
\subsection{Method \code{offsets_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$offsets_filters(default = .default_offsets_filters())}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list of tiledb.Filter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-validity_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-validity_filters}{}}}
\subsection{Method \code{validity_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$validity_filters(default = .default_validity_filters())}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list of tiledb.Filter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-dim_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-dim_filters}{}}}
\subsection{Method \code{dim_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$dim_filters(dim_name, default = list())}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list of tiledb.Filter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-attr_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-attr_filters}{}}}
\subsection{Method \code{attr_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$attr_filters(attr_name, default = list())}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list of tiledb.Filter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-write_X_chunked"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-write_X_chunked}{}}}
\subsection{Method \code{write_X_chunked()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$write_X_chunked()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
bool
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-goal_chunk_nnz"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-goal_chunk_nnz}{}}}
\subsection{Method \code{goal_chunk_nnz()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$goal_chunk_nnz()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
int
return Named list of character
return Named list of character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-.dim"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-.dim}{}}}
\subsection{Method \code{.dim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$.dim(dim_name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-.attr"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-.attr}{}}}
\subsection{Method \code{.attr()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$.attr(attr_name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-.build_filters"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-.build_filters}{}}}
\subsection{Method \code{.build_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$.build_filters(items)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-.build_filter"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-.build_filter}{}}}
\subsection{Method \code{.build_filter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$.build_filter(item)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TileDBCreateOptions-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TileDBCreateOptions-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TileDBCreateOptions$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
