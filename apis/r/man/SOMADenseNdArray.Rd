% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOMADenseNdArray.R
\name{SOMADenseNdArray}
\alias{SOMADenseNdArray}
\title{SOMADenseNdArray}
\description{
\code{SOMADenseNdArray} is a dense, N-dimensional array of \code{primitive} type, with
offset (zero-based) \code{int64} integer indexing on each dimension with domain
\verb{[0, maxInt64)}. The \code{SOMADenseNdArray} has a user-defined schema, which
includes:
\itemize{
\item \strong{type}: a \code{primitive} type, expressed as an Arrow type (e.g., \code{int64},
\code{float32}, etc), indicating the type of data contained within the array
\item \strong{shape}: the shape of the array, i.e., number and length of each
dimension
}

All dimensions must have a positive, non-zero length, and there must be 1 or
more dimensions.

The default "fill" value for \code{SOMADenseNdArray} is the zero or null value of
the array type (e.g., Arrow.float32 defaults to 0.0).
}
\section{Super classes}{
\code{\link[tiledbsoma:TileDBObject]{tiledbsoma::TileDBObject}} -> \code{\link[tiledbsoma:TileDBArray]{tiledbsoma::TileDBArray}} -> \code{SOMADenseNdArray}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SOMADenseNdArray-create}{\code{SOMADenseNdArray$create()}}
\item \href{#method-SOMADenseNdArray-read_arrow_table}{\code{SOMADenseNdArray$read_arrow_table()}}
\item \href{#method-SOMADenseNdArray-write}{\code{SOMADenseNdArray$write()}}
\item \href{#method-SOMADenseNdArray-clone}{\code{SOMADenseNdArray$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="class"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-class'><code>tiledbsoma::TileDBObject$class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="exists"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-exists'><code>tiledbsoma::TileDBObject$exists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBObject" data-id="initialize"><a href='../../tiledbsoma/html/TileDBObject.html#method-TileDBObject-initialize'><code>tiledbsoma::TileDBObject$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="add_metadata"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-add_metadata'><code>tiledbsoma::TileDBArray$add_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="attributes"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-attributes'><code>tiledbsoma::TileDBArray$attributes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="attrnames"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-attrnames'><code>tiledbsoma::TileDBArray$attrnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="dimensions"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-dimensions'><code>tiledbsoma::TileDBArray$dimensions()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="dimnames"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-dimnames'><code>tiledbsoma::TileDBArray$dimnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="fragment_count"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-fragment_count'><code>tiledbsoma::TileDBArray$fragment_count()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="get_metadata"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-get_metadata'><code>tiledbsoma::TileDBArray$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="print"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-print'><code>tiledbsoma::TileDBArray$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="reset_query"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-reset_query'><code>tiledbsoma::TileDBArray$reset_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="schema"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-schema'><code>tiledbsoma::TileDBArray$schema()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="set_query"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-set_query'><code>tiledbsoma::TileDBArray$set_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tiledbsoma" data-topic="TileDBArray" data-id="tiledb_array"><a href='../../tiledbsoma/html/TileDBArray.html#method-TileDBArray-tiledb_array'><code>tiledbsoma::TileDBArray$tiledb_array()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNdArray-create"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNdArray-create}{}}}
\subsection{Method \code{create()}}{
Create a SOMADenseNdArray named with the URI.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNdArray$create(type, shape)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{an \link[arrow:data-type]{Arrow type} defining the type of each
element in the array.}

\item{\code{shape}}{a vector of integers defining the shape of the array.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNdArray-read_arrow_table"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNdArray-read_arrow_table}{}}}
\subsection{Method \code{read_arrow_table()}}{
Read as an 'arrow::Table'
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNdArray$read_arrow_table(coords = NULL, result_order = "ROW_MAJOR")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coords}}{A \code{list} of integer vectors, one for each dimension, with a
length equal to the number of values to read. If \code{NULL}, all values are
read. List elements can be named when specifying a subset of dimensions.}

\item{\code{result_order}}{Order of read results. This can be one of either
\verb{"ROW_MAJOR, }"COL_MAJOR"\verb{, }"GLOBAL_ORDER"\verb{, or }"UNORDERED"`.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{\link[arrow:Table]{arrow::Table}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNdArray-write"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNdArray-write}{}}}
\subsection{Method \code{write()}}{
Write matrix data to the array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNdArray$write(values, coords = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{values}}{A \code{matrix}. Character dimension names are ignored because
\code{SOMANdArray}'s use integer indexing.}

\item{\code{coords}}{A \code{list} of integer vectors, one for each dimension, with a
length equal to the number of values to write. If \code{NULL}, the default,
the values are taken from the row and column names of \code{values}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SOMADenseNdArray-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SOMADenseNdArray-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SOMADenseNdArray$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
