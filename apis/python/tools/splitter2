#!/usr/bin/env python

"""
Given one of the outputs from cartorapher.py, splits it into a few little pieces for quick-iteration purposes.
"""

import os
import shutil
import sys

import numpy as np

import tiledbsc
import tiledbsc.io


# ----------------------------------------------------------------
def write_subset(soma, indices, output_path):
    if os.path.exists(output_path):
        shutil.rmtree(output_path)
    subset_soma = tiledbsc.SOMA(output_path)
    subset_soma.create_unless_exists()

    obs_ids = list(soma.obs.df().index[indices])
    var_ids = list(soma.var.df().index[indices])

    subset_obs = soma.obs.df(obs_ids)
    subset_var = soma.var.df(var_ids)
    subset_X_data = soma.X.data.csr(obs_ids, var_ids)

    subset_obs["is_primary_data"] = np.asarray([True] * len(obs_ids))

    subset_soma.obs.from_dataframe(subset_obs, extent=2048)
    subset_soma.var.from_dataframe(subset_var, extent=2048)

    print("S OBS", subset_soma.obs.shape())
    print("S VAR", subset_soma.var.shape())
    print("S XDA", subset_X_data.shape)

    subset_soma.X.add_layer_from_matrix_and_dim_values(subset_X_data, obs_ids, var_ids)

    tiledbsc.io.to_h5ad(subset_soma, output_path + ".h5ad")


# ----------------------------------------------------------------
input_soma_uri = "atlas/4056cbab-2a32-4c9e-a55f-c930bc793fb6"
if len(sys.argv) == 2:
    input_soma_uri = sys.argv[1]
input_soma = tiledbsc.SOMA(input_soma_uri)

write_subset(input_soma, range(100, 200), "subset2-soma-01")
write_subset(input_soma, range(200, 300), "subset2-soma-02")
write_subset(input_soma, range(250, 350), "subset2-soma-03")
write_subset(input_soma, range(400, 500), "subset2-soma-04")
