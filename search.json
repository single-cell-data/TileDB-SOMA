[{"path":"/articles/UsingPlatformConfig.html","id":"advanced-schema-configuration","dir":"Articles","previous_headings":"","what":"Advanced schema configuration","title":"Using PlatformConfig","text":"Default schema-level TileDB parameters set useful users. particular needs use-cases, though, can use PlatformConfig options override default schema parameters. can passed SOMADataFrameCreate, SOMASparseNDArrayCreate, et al. Coming soon: advice connect from_seurat.","code":"platform_config <- PlatformConfig$new() platform_config$set('tiledb', 'create', 'dataframe_dim_zstd_level', 8) platform_config$set('tiledb', 'create', 'sparse_nd_array_dim_zstd_level', 9) platform_config$set('tiledb', 'create', 'tile_order', 'ROW_MAJOR') platform_config$set('tiledb', 'create', 'cell_order', 'ROW_MAJOR') platform_config$set('tiledb', 'create', 'dims', list(   soma_dim_0 = list(filters = list(list(name=\"ZSTD\", COMPRESSION_LEVEL=9)), tile=100000),   soma_dim_1 = list(filters = list(list(name=\"ZSTD\", COMPRESSION_LEVEL=9)), tile=100000), )) platform_config$set('tiledb', 'create', 'attrs', list(   soma_data_a = list(filters = list(\"RLE\")) )) tdco <- TileDBCreateOptions$new(platform_config)"},{"path":"/articles/soma-experiment-queries.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Querying a SOMA experiment","text":"notebook, ’ll take quick look query SOMAExperiment using SOMAExperimentAxisQuery class. allows easy selection data SOMAMeasurement filtering annotations stored axis data frame (.e., obs var).","code":"library(tiledbsoma)"},{"path":"/articles/soma-experiment-queries.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Querying a SOMA experiment","text":"Load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object.","code":"experiment <- load_dataset(\"soma-exp-pbmc-small\") experiment #> <SOMAExperiment> #>   uri: /tmp/Rtmpm1v3lZ/soma-exp-pbmc-small"},{"path":"/articles/soma-experiment-queries.html","id":"querying-basics","dir":"Articles","previous_headings":"","what":"Querying basics","title":"Querying a SOMA experiment","text":"perform query ’ll need initialize new SOMAExperimentAxisQuery object, specifying SOMAExperiment SOMAMeasurement within experiment want query. can see current experiment contains single measurement: \"RNA\". use larger (smaller) buffer sizes: Alternatively, can environment export TILEDB_SOMA_INIT_BUFFER_BYTES=2147483648 loading data. Now can construct query object. ’s created, can use query object inspect, select, extract filtered data experiment. example, can use n_obs n_vars determine number observations variables passed filtering criteria. Since didn’t specify filtering criteria, numbers match full size experiment. Number observations: Number variables: can also extract data component experiment. ’ll read obs data frame query using obs() returns iterator arrow::Table. iterator useful data large load memory allowing stream data chunks. applies var() well. load data memory can concatenate chunks iterator shown . reminder arrow:Table can easily cast tibble Alternatively, can use iterator, retrieves data chunks smaller soma.init_buffer_bytes context field. can use iterator’s method $read_next() load chunk memory. example full obs table relatively small fits one chunk. bigger SOMADataFrame can check iteration finished checking logical $read_complete(). demonstrate creating new iterator. can also access expression via X(). Similarly obs() var(), X() intended iteration, case access two different iterators, thus X() returns reader gives access iterator arrow::Table one Matrix::sparse_matrix. Let’s take look Arrow Table iterator: obs example data small enough fit one chunk. bigger data can user iterator$read_complete() check status iteration iterator$concat() concatenate rest chunks. iterator Matrix::sparse_matrix works way. Keep mind matrix format dgTMatrix memory-efficient format type can easily iterated. importantly, resulting object “view” full matrix original shape indexes data corresponding query coordinates filters (see section ).","code":"experiment$ms #> <SOMACollection> #>   uri: file:///tmp/Rtmpm1v3lZ/soma-exp-pbmc-small/ms ctx <- SOMATileDBContext$new(c(soma.init_buffer_bytes = as.character(2 * 1024**3))) experiment <- SOMAExperimentOpen(experiment$uri, tiledbsoma_ctx = ctx) query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\" ) query$n_obs #> [1] 80 query$n_vars #> [1] 230 iterator <- query$obs() obs <- iterator$concat() obs #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> obs$to_data_frame() #>    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 #> 1            0 SeuratProject         70           47               0 #> 2            1 SeuratProject         85           52               0 #> 3            2 SeuratProject         87           50               1 #> 4            3 SeuratProject        127           56               0 #> 5            4 SeuratProject        173           53               0 #> 6            5 SeuratProject         70           48               0 #> 7            6 SeuratProject         64           36               0 #> 8            7 SeuratProject         72           45               0 #> 9            8 SeuratProject         52           36               0 #> 10           9 SeuratProject        100           41               0 #> 11          10 SeuratProject         62           31               0 #> 12          11 SeuratProject        191           61               0 #> 13          12 SeuratProject        101           41               0 #> 14          13 SeuratProject         51           26               0 #> 15          14 SeuratProject         99           45               0 #> 16          15 SeuratProject        168           44               0 #> 17          16 SeuratProject         67           33               0 #> 18          17 SeuratProject        135           45               0 #> 19          18 SeuratProject         79           43               0 #> 20          19 SeuratProject        109           41               0 #> 21          20 SeuratProject        298           65               1 #> 22          21 SeuratProject        406           74               1 #> 23          22 SeuratProject        213           48               1 #> 24          23 SeuratProject        231           49               1 #> 25          24 SeuratProject        463           77               1 #> 26          25 SeuratProject         87           42               1 #> 27          26 SeuratProject        327           62               1 #> 28          27 SeuratProject        224           50               1 #> 29          28 SeuratProject        361           76               1 #> 30          29 SeuratProject        353           80               1 #> 31          30 SeuratProject        246           59               0 #> 32          31 SeuratProject        115           51               0 #> 33          32 SeuratProject        189           53               0 #> 34          33 SeuratProject        187           61               0 #> 35          34 SeuratProject        156           48               0 #> 36          35 SeuratProject        164           47               0 #> 37          36 SeuratProject        221           67               0 #> 38          37 SeuratProject        151           59               0 #> 39          38 SeuratProject        126           53               0 #> 40          39 SeuratProject        316           65               0 #> 41          40 SeuratProject        156           60               0 #> 42          41 SeuratProject        139           61               0 #> 43          42 SeuratProject        108           44               0 #> 44          43 SeuratProject         41           32               0 #> 45          44 SeuratProject        146           47               0 #> 46          45 SeuratProject        104           40               0 #> 47          46 SeuratProject        126           48               0 #> 48          47 SeuratProject         94           55               0 #> 49          48 SeuratProject        204           52               0 #> 50          49 SeuratProject         99           45               0 #> 51          50 SeuratProject        371           75               1 #> 52          51 SeuratProject        387           83               1 #> 53          52 SeuratProject        139           50               1 #> 54          53 SeuratProject         99           42               1 #> 55          54 SeuratProject        443           77               1 #> 56          55 SeuratProject        417           75               0 #> 57          56 SeuratProject        502           81               1 #> 58          57 SeuratProject        324           76               1 #> 59          58 SeuratProject        292           71               1 #> 60          59 SeuratProject        443           81               0 #> 61          60 SeuratProject        787           88               0 #> 62          61 SeuratProject        612           69               1 #> 63          62 SeuratProject        286           68               0 #> 64          63 SeuratProject        462           86               1 #> 65          64 SeuratProject        872           96               1 #> 66          65 SeuratProject        709           94               1 #> 67          66 SeuratProject        745           84               1 #> 68          67 SeuratProject        328           72               1 #> 69          68 SeuratProject        389           73               1 #> 70          69 SeuratProject        754           83               0 #> 71          70 SeuratProject        212           38               0 #> 72          71 SeuratProject        172           29               0 #> 73          72 SeuratProject        168           37               0 #> 74          73 SeuratProject        210           33               0 #> 75          74 SeuratProject        228           39               0 #> 76          75 SeuratProject        527           47               0 #> 77          76 SeuratProject        202           30               0 #> 78          77 SeuratProject        157           29               0 #> 79          78 SeuratProject        150           30               0 #> 80          79 SeuratProject        233           76               1 #>    letter.idents groups RNA_snn_res.1         obs_id #> 1              A     g2             0 ATGCCAGAACGACT #> 2              A     g1             0 CATGGCCTGTGCAT #> 3              B     g2             0 GAACCTGATGAACC #> 4              A     g2             0 TGACTGGATTCTCA #> 5              A     g2             0 AGTCAGACTGCACA #> 6              A     g1             0 TCTGATACACGTGT #> 7              A     g1             0 TGGTATCTAAACAG #> 8              A     g1             0 GCAGCTCTGTTTCT #> 9              A     g1             0 GATATAACACGCAT #> 10             A     g1             0 AATGTTGACAGTCA #> 11             A     g2             2 AGGTCATGAGTGTC #> 12             A     g1             2 AGAGATGATCTCGC #> 13             A     g2             2 GGGTAACTCTAGTG #> 14             A     g2             2 CATGAGACACGGGA #> 15             A     g2             2 TACGCCACTCCGAA #> 16             A     g1             2 CTAAACCTGTGCAT #> 17             A     g2             2 GTAAGCACTCATTC #> 18             A     g1             2 TTGGTACTGAATCC #> 19             A     g1             2 CATCATACGGAGCA #> 20             A     g2             2 TACATCACGCTAAC #> 21             B     g1             1 TTACCATGAATCGC #> 22             B     g1             1 ATAGGAGAAACAGA #> 23             B     g2             1 GCGCACGACTTTAC #> 24             B     g2             1 ACTCGCACGAAAGT #> 25             B     g1             1 ATTACCTGCCTTAT #> 26             B     g2             1 CCCAACTGCAATCG #> 27             B     g2             1 AAATTCGAATCACG #> 28             B     g2             1 CCATCCGATTCGCC #> 29             B     g2             1 TCCACTCTGAGCTT #> 30             B     g1             1 CATCAGGATGCACA #> 31             A     g1             0 CTAAACCTCTGACA #> 32             A     g1             2 GATAGAGAAGGGTG #> 33             A     g1             0 CTAACGGAACCGAT #> 34             A     g2             0 AGATATACCCGTAA #> 35             A     g1             0 TACTCTGAATCGAC #> 36             A     g1             0 GCGCATCTTGCTCC #> 37             A     g2             0 GTTGACGATATCGG #> 38             A     g1             0 ACAGGTACTGGTGT #> 39             A     g1             0 GGCATATGCTTATC #> 40             A     g2             0 CATTACACCAACTG #> 41             A     g1             0 TAGGGACTGAACTC #> 42             A     g2             2 GCTCCATGAGAAGT #> 43             A     g2             0 TACAATGATGCTAG #> 44             A     g2             0 CTTCATGACCGAAT #> 45             A     g1             2 CTGCCAACAGGAGC #> 46             A     g2             2 TTGCATTGAGCTAC #> 47             A     g1             0 AAGCAAGAGCTTAG #> 48             A     g2             0 CGGCACGAACTCAG #> 49             A     g1             0 GGTGGAGATTACTC #> 50             A     g2             0 GGCCGATGTACTCT #> 51             B     g1             1 CGTAGCCTGTATGC #> 52             B     g2             1 TGAGCTGAATGCTG #> 53             B     g2             2 CCTATAACGAGACG #> 54             B     g2             1 ATAAGTTGGTACGT #> 55             B     g1             1 AAGCGACTTTGACG #> 56             A     g1             1 ACCAGTGAATACCG #> 57             B     g1             1 ATTGCACTTGCTTT #> 58             B     g1             1 CTAGGTGATGGTTG #> 59             B     g2             1 GCACTAGACCTTTA #> 60             A     g1             0 CATGCGCTAGTCAC #> 61             A     g1             2 TTGAGGACTACGCA #> 62             B     g1             1 ATACCACTCTAAGC #> 63             A     g1             2 CATATAGACTAAGC #> 64             B     g1             1 TTTAGCTGTACTCT #> 65             B     g1             2 GACATTCTCCACCT #> 66             B     g2             1 ACGTGATGCCATGA #> 67             B     g2             1 ATTGTAGATTCCCG #> 68             B     g1             1 GATAGAGATCACGA #> 69             B     g1             1 AATGCGTGGACGGA #> 70             A     g1             2 GCGTAAACACGGTT #> 71             A     g2             0 ATTCAGCTCATTGG #> 72             A     g1             0 GGCATATGGGGAGT #> 73             A     g2             0 ATCATCTGACACCA #> 74             A     g2             0 GTCATACTTCGCCT #> 75             A     g1             0 TTACGTACGTTCAG #> 76             A     g1             0 GAGTTGTGGTAGCT #> 77             A     g2             0 GACGCTCTCTCTCG #> 78             A     g1             0 AGTCTTACTTCGGA #> 79             A     g2             0 GGAACACTTCAGAC #> 80             B     g1             1 CTTGATTGATCTTC iterator <- query$obs() iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator <- experiment$obs$read() iterator$read_complete() #> [1] FALSE iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator$read_complete() #> [1] TRUE reader <- query$X(layer_name = \"counts\") table_irerator <- reader$tables() table_irerator$read_next() #> Table #> 4456 rows x 3 columns #> $soma_dim_0 <int64 not null> #> $soma_dim_1 <int64 not null> #> $soma_data <double not null> reader <- query$X(layer_name = \"counts\") iterator <- reader$sparse_matrix() str(iterator$read_next()) #> Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:4456] 0 0 0 0 0 0 0 0 0 0 ... #>   ..@ j       : int [1:4456] 1 5 8 11 22 30 33 34 36 38 ... #>   ..@ Dim     : int [1:2] 80 230 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:4456] 1 1 3 1 1 4 1 5 1 1 ... #>   ..@ factors : list()"},{"path":"/articles/soma-experiment-queries.html","id":"adding-filters","dir":"Articles","previous_headings":"","what":"Adding filters","title":"Querying a SOMA experiment","text":"Adding filters requires creating SOMAAxisQuery object allows define coordinates, value filters, axis. ’ll create query obs slices first 40 rows, filters subset based nCount_RNA column. apply filter ’ll pass new SOMAExperimentAxisQuery object. Let’s see many observations query identified. , can load obs data frame memory now includes filtered observations. well X matrix two different formats: arrow::Table Matrix::sparse_matrix dgTMatrix format. re-indexed re-shaped sparse matrix see section .","code":"obs_query <- SOMAAxisQuery$new(   coords = list(soma_joinid = 0:39),   value_filter = \"nCount_RNA > 100\" ) query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\",   obs_query = obs_query ) query$n_obs #> [1] 26 obs <- query$obs(column_names = c(\"obs_id\", \"nCount_RNA\"))$concat() obs$to_data_frame() #>            obs_id nCount_RNA #> 1  TGACTGGATTCTCA        127 #> 2  AGTCAGACTGCACA        173 #> 3  AGAGATGATCTCGC        191 #> 4  GGGTAACTCTAGTG        101 #> 5  CTAAACCTGTGCAT        168 #> 6  TTGGTACTGAATCC        135 #> 7  TACATCACGCTAAC        109 #> 8  TTACCATGAATCGC        298 #> 9  ATAGGAGAAACAGA        406 #> 10 GCGCACGACTTTAC        213 #> 11 ACTCGCACGAAAGT        231 #> 12 ATTACCTGCCTTAT        463 #> 13 AAATTCGAATCACG        327 #> 14 CCATCCGATTCGCC        224 #> 15 TCCACTCTGAGCTT        361 #> 16 CATCAGGATGCACA        353 #> 17 CTAAACCTCTGACA        246 #> 18 GATAGAGAAGGGTG        115 #> 19 CTAACGGAACCGAT        189 #> 20 AGATATACCCGTAA        187 #> 21 TACTCTGAATCGAC        156 #> 22 GCGCATCTTGCTCC        164 #> 23 GTTGACGATATCGG        221 #> 24 ACAGGTACTGGTGT        151 #> 25 GGCATATGCTTATC        126 #> 26 CATTACACCAACTG        316 query$X(\"counts\")$tables()$concat() #> Table #> 1485 rows x 3 columns #> $soma_dim_0 <int64 not null> #> $soma_dim_1 <int64 not null> #> $soma_data <double not null> str(query$X(\"counts\")$sparse_matrix()$concat()) #> Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:1485] 3 3 3 3 3 3 3 3 3 3 ... #>   ..@ j       : int [1:1485] 8 11 22 30 31 32 33 34 37 38 ... #>   ..@ Dim     : int [1:2] 80 230 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:1485] 13 1 6 5 2 1 2 2 1 1 ... #>   ..@ factors : list()"},{"path":"/articles/soma-experiment-queries.html","id":"export-to-an-annotated-re-indexed-sparse-matrix","dir":"Articles","previous_headings":"","what":"Export to an annotated re-indexed sparse matrix","title":"Querying a SOMA experiment","text":"component queried SOMAExperiment can exported [sparse matrix][Matrix::sparseMatrix-class] using to_sparse_matrix() method. example, let’s create sparse matrix filtered expression data. ’ll create new query returns smaller subset data make output easier read. indicate want access \"counts\" layer \"X\" collection. default, dimensions named using soma_joinid values unique observation variable. However, dimension names can come column obs var arrays uniquely identifies record. expression matrix makes sense name dimensions using cell barcodes gene names, stored obs_id var_id columns, respectively. can use method SOMAExperiment’s collections. Let’s access t-SNE coordinates stored obsm collection’s X_tsne layer, populating row names cell barcodes.","code":"query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\",   obs_query = SOMAAxisQuery$new(coords = 0:9),   var_query = SOMAAxisQuery$new(coords = 0:9) ) query$to_sparse_matrix(   collection = \"X\",   layer = \"counts\" ) #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>   [[ suppressing 10 column names '0', '1', '2' ... ]] #>                        #> 0 . 1 . . . 1 . .  3 . #> 1 . . . 1 . . . .  7 . #> 2 . . . . . . . . 11 . #> 3 . . . . . . . . 13 . #> 4 . . . 1 . . . .  3 . #> 5 . . . 1 . . . .  4 . #> 6 . . . . . . . .  6 . #> 7 . . . 1 . . . .  4 . #> 8 . . . . . . . .  2 . #> 9 . 1 . . . . . . 21 . query$to_sparse_matrix(   collection = \"X\",   layer = \"counts\",   obs_index = \"obs_id\",   var_index = \"var_id\" ) #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>   [[ suppressing 10 column names 'MS4A1', 'CD79B', 'CD79A' ... ]] #>                                     #> ATGCCAGAACGACT . 1 . . . 1 . .  3 . #> CATGGCCTGTGCAT . . . 1 . . . .  7 . #> GAACCTGATGAACC . . . . . . . . 11 . #> TGACTGGATTCTCA . . . . . . . . 13 . #> AGTCAGACTGCACA . . . 1 . . . .  3 . #> TCTGATACACGTGT . . . 1 . . . .  4 . #> TGGTATCTAAACAG . . . . . . . .  6 . #> GCAGCTCTGTTTCT . . . 1 . . . .  4 . #> GATATAACACGCAT . . . . . . . .  2 . #> AATGTTGACAGTCA . 1 . . . . . . 21 . query$to_sparse_matrix(   collection = \"obsm\",   layer = \"X_tsne\",   obs_index = \"obs_id\" ) #> 10 x 2 sparse Matrix of class \"dgTMatrix\" #>                          0           1 #> ATGCCAGAACGACT   0.8675977  -8.1007483 #> CATGGCCTGTGCAT  -7.3925306  -8.7717451 #> GAACCTGATGAACC -28.2064258   0.2410102 #> TGACTGGATTCTCA  16.3480689 -11.1633255 #> AGTCAGACTGCACA   1.9113998 -11.1929311 #> TCTGATACACGTGT   3.1475998  -9.9369312 #> TGGTATCTAAACAG  17.8526863  -9.8978901 #> GCAGCTCTGTTTCT  -6.4912187  -8.3874434 #> GATATAACACGCAT   1.3305297  -9.6807936 #> AATGTTGACAGTCA  16.9642732  -9.4295980"},{"path":"/articles/soma-experiment-queries.html","id":"export-to-seurat","dir":"Articles","previous_headings":"","what":"Export to Seurat","title":"Querying a SOMA experiment","text":"query object also contains methods loading results Seurat object (Seurat’s component classes). to_sparse_matrix() method, can specify obs_index var_index use naming dimensions resulting object.","code":"query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\" )  query$to_seurat(   X_layers = c(counts = \"counts\", data = \"data\"),   obs_index = \"obs_id\",   var_index = \"var_id\" ) #> Warning: Adding a command log without an assay associated with it #> An object of class Seurat  #> 230 features across 80 samples within 1 assay  #> Active assay: RNA (230 features, 0 variable features) #>  2 layers present: counts, data #>  2 dimensional reductions calculated: pca, tsne"},{"path":"/articles/soma-objects.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"SOMA objects overview","text":"Extract bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return file path extracted dataset.","code":"uri <- extract_dataset(\"soma-exp-pbmc-small\") uri #> [1] \"/tmp/Rtmp3QbYVK/soma-exp-pbmc-small\""},{"path":"/articles/soma-objects.html","id":"somaexperiment","dir":"Articles","previous_headings":"","what":"SOMAExperiment","title":"SOMA objects overview","text":"SOMAExperiment class represents top-level container experiments include one measurements across set observations (e.g., cells biospecimens). always contains least two objects: obs: SOMADataFrame containing primary annotations observations. ms: SOMACollection individual measurements (.e., modalities). Open SOMAExperiment using file path inspect object: Note opening SOMAExperiment (SOMA object) returns pointer object disk. data actually read memory ’s requested. important full experiment may large fit memory. pre-defined fields within experiment can accessed using $ operator. example, access ms field: returns SOMACollection measurements. ’ll take closer look later. access obs field containing observation annotations:","code":"experiment <- SOMAExperimentOpen(uri) experiment #> <SOMAExperiment> #>   uri: /tmp/Rtmp3QbYVK/soma-exp-pbmc-small experiment$ms #> <SOMACollection> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/ms experiment$obs #> <SOMADataFrame> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, RNA_snn_res.0.8, letter.idents, groups,..."},{"path":"/articles/soma-objects.html","id":"somadataframe","dir":"Articles","previous_headings":"","what":"SOMADataFrame","title":"SOMA objects overview","text":"obs field contains SOMADataFrame, multi-column table user-defined schema. schema expressed Arrow Schema, defines column names value types. example, let’s inspect schema obs: Note soma_joinid field exists every SOMADataFrame acts join key objects dataset. , SOMA object accessed, pointer returned data read memory. load data memory, call read()$concat(), returns Arrow Table easily converted data frame appending $to_data_frame(). amount data can read determined soma.init_buffer_bytes configuration parameter, , default, set 16MB column. requested data larger value error thrown. system memory, can increase parameter larger value read data . Alternatively, can use iterated reader, retrieves data chunks smaller soma.init_buffer_bytes parameter. result list Arrow Tables. can also select subset rows SOMADataFrame using coords argument. retrieve required subset disk memory. example, select first 10 rows: NOTE: coords argument 0-based. TileDB columnar format, can also select subset columns: Finally, can use value_filter retrieve subset rows match certain condition. course, can combine arguments together get data need.","code":"experiment$obs$schema() #> Schema #> soma_joinid: int64 not null #> orig.ident: dictionary<values=string, indices=int8> #> nCount_RNA: double #> nFeature_RNA: int32 #> RNA_snn_res.0.8: dictionary<values=string, indices=int8> #> letter.idents: dictionary<values=string, indices=int8> #> groups: large_string #> RNA_snn_res.1: dictionary<values=string, indices=int8> #> obs_id: large_string experiment$obs$read()$concat() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator <- experiment$obs$read() iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> experiment$obs$read(coords = 0:9)$concat() #> Table #> 10 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> experiment$obs$read(0:9, column_names = c(\"obs_id\", \"nCount_RNA\"))$concat() #> Table #> 10 rows x 2 columns #> $obs_id <large_string> #> $nCount_RNA <double> experiment$obs$read(value_filter = \"nCount_RNA > 100\")$concat() #> Table #> 62 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string>"},{"path":"/articles/soma-objects.html","id":"somacollection","dir":"Articles","previous_headings":"","what":"SOMACollection","title":"SOMA objects overview","text":"SOMACollection persistent container named SOMA objects, stored mapping string keys SOMA object values. analogous named list R. ms member SOMAExperiment implemented SOMACollection. Let’s take look: case, one member: RNA, SOMAMeasurement. specific measurement can accessed name get() method:","code":"experiment$ms #> <SOMACollection> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/ms experiment$ms$get(\"RNA\") #> <SOMAMeasurement> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/ms/RNA"},{"path":"/articles/soma-objects.html","id":"somameasurement","dir":"Articles","previous_headings":"","what":"SOMAMeasurement","title":"SOMA objects overview","text":"SOMAMeasurement unimodal container particular data type (case, RNA). contains following pre-defined fields: var: SOMADataFrame containing primary annotatinos variables (.e., features genes). X: SOMACollection 2D matrices containing feature measurements across observations. matrix within X referred layer. obsm/varm: SOMACollection 2D matrices containing derived results observations/features. Typically used store dimensionality reduction results. obsp/varp: SOMACollection 2D pairwise matrices containing derived results observations/features. Typically used store graphs pairwise relationships.","code":""},{"path":"/articles/soma-objects.html","id":"somasparsendarray","dir":"Articles","previous_headings":"","what":"SOMASparseNDArray","title":"SOMA objects overview","text":"matrix-like data structures contained within SOMAMeasurement’s pre-defined fields represented SOMASparseNDArray objects. SOMASparseNDArray sparse, N-dimensional array, offset (zero-based) integer indexing dimension, user-defined schema, includes: element type, expressed Arrow type, indicating type data contained within array, shape array, .e., number dimensions length dimension. disk, sparse array encodes non-zero records. Elements explicitly stored assumed zeros. Let’s take look X data matrices within RNA measurement: collection contains 3 layers corresponding raw, normalized, scaled slots original Seurat object. X layers can accessed using get(): returns SOMASparseNDArray. , can inspect array’s schema: see two dimensions (soma_dim_0 soma_dim_1) soma_data attribute type double. Let’s look shape: can get number non-zero elements calling nnz(): Let’s load data sparse matrix memory: Note: reading full matrix memory subsetting first 5 rows 10 columns truncate output. uses zero-based underlying representation access accesses one-based view sparse matrix functionality package Matrix imposes . Similarly SOMADataFrames, read() method can define coordinates slice obtain subset matrix disk:","code":"X <- experiment$ms$get(\"RNA\")$X X #> <SOMACollection> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/ms/RNA/X X_data <- X$get(\"data\") X_data #> <SOMASparseNDArray> #>   uri: file:///tmp/Rtmp3QbYVK/soma-exp-pbmc-small/ms/RNA/X/data #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data X_data$schema() #> Schema #> soma_dim_0: int64 not null #> soma_dim_1: int64 not null #> soma_data: double not null X_data$shape() #> integer64 #> [1] 80  230 X_data$nnz() #> [1] 4456 X_data$read()$sparse_matrix()$concat()[1:5, 1:10] #> 5 x 10 sparse Matrix of class \"dgTMatrix\" #>                                                      #> [1,] . 4.968821 . .        . 4.968821 . . 6.062788 . #> [2,] . .        . 4.776153 . .        . . 6.714813 . #> [3,] . .        . .        . .        . . 7.143118 . #> [4,] . .        . .        . .        . . 6.932079 . #> [5,] . .        . 4.074201 . .        . . 5.161411 . X_data$read(coords = list(soma_dim_0 = 0:4, soma_dim_1 = 0:9))$sparse_matrix()$concat() #> 80 x 230 sparse Matrix of class \"dgTMatrix\" #>                                                                                 #>  [1,] . 4.968821 . .        . 4.968821 . . 6.062788 . . . . . . . . . . . . . . #>  [2,] . .        . 4.776153 . .        . . 6.714813 . . . . . . . . . . . . . . #>  [3,] . .        . .        . .        . . 7.143118 . . . . . . . . . . . . . . #>  [4,] . .        . .        . .        . . 6.932079 . . . . . . . . . . . . . . #>  [5,] . .        . 4.074201 . .        . . 5.161411 . . . . . . . . . . . . . . #>  [6,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [7,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [8,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [9,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [10,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [11,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [12,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [13,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [14,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [15,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [16,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [17,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [18,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [19,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [20,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [21,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [22,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [23,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [24,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [25,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [26,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [27,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [28,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [29,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [30,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [31,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [32,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [33,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [34,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [35,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [36,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [37,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [38,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [39,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [40,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [41,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [42,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [43,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [44,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [45,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [46,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [47,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [48,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [49,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [50,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [51,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [52,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [53,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [54,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [55,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [56,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [57,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [58,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [59,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [60,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [61,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [62,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [63,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [64,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [65,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [66,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [67,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [68,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [69,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [70,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [71,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [72,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [73,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [74,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [75,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [76,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [77,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [78,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [79,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [80,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                   #>  [1,] . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . ."},{"path":"/articles/soma-reading.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Reading from SOMA objects","text":"tutorial ’ll learn read data various SOMA objects. assume familiarity SOMA objects, recommended go vignette(\"soma-objects\") first. core feature SOMA ability read subsets data disk memory slices. SOMA uses Apache Arrow intermediate -memory storage. , slices can converted native R objects, like data frames matrices.","code":"library(tiledbsoma)"},{"path":"/articles/soma-reading.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Reading from SOMA objects","text":"Load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object. small dataset easily fits memory, ’ll focus operations can easily scale larger datasets well.","code":"experiment <- load_dataset(\"soma-exp-pbmc-small\")"},{"path":"/articles/soma-reading.html","id":"soma-dataframe","dir":"Articles","previous_headings":"","what":"SOMA DataFrame","title":"Reading from SOMA objects","text":"’ll start obs dataframe. Simply calling read()$concat() method load data memory Arrow Table. easily converted data.frame using Arrow’s methods:","code":"obs <- experiment$obs obs$read()$concat() ## Table ## 80 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read()$concat()$to_data_frame() ##    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## 1            0 SeuratProject         70           47               0 ## 2            1 SeuratProject         85           52               0 ## 3            2 SeuratProject         87           50               1 ## 4            3 SeuratProject        127           56               0 ## 5            4 SeuratProject        173           53               0 ## 6            5 SeuratProject         70           48               0 ## 7            6 SeuratProject         64           36               0 ## 8            7 SeuratProject         72           45               0 ## 9            8 SeuratProject         52           36               0 ## 10           9 SeuratProject        100           41               0 ## 11          10 SeuratProject         62           31               0 ## 12          11 SeuratProject        191           61               0 ## 13          12 SeuratProject        101           41               0 ## 14          13 SeuratProject         51           26               0 ## 15          14 SeuratProject         99           45               0 ## 16          15 SeuratProject        168           44               0 ## 17          16 SeuratProject         67           33               0 ## 18          17 SeuratProject        135           45               0 ## 19          18 SeuratProject         79           43               0 ## 20          19 SeuratProject        109           41               0 ## 21          20 SeuratProject        298           65               1 ## 22          21 SeuratProject        406           74               1 ## 23          22 SeuratProject        213           48               1 ## 24          23 SeuratProject        231           49               1 ## 25          24 SeuratProject        463           77               1 ## 26          25 SeuratProject         87           42               1 ## 27          26 SeuratProject        327           62               1 ## 28          27 SeuratProject        224           50               1 ## 29          28 SeuratProject        361           76               1 ## 30          29 SeuratProject        353           80               1 ## 31          30 SeuratProject        246           59               0 ## 32          31 SeuratProject        115           51               0 ## 33          32 SeuratProject        189           53               0 ## 34          33 SeuratProject        187           61               0 ## 35          34 SeuratProject        156           48               0 ## 36          35 SeuratProject        164           47               0 ## 37          36 SeuratProject        221           67               0 ## 38          37 SeuratProject        151           59               0 ## 39          38 SeuratProject        126           53               0 ## 40          39 SeuratProject        316           65               0 ## 41          40 SeuratProject        156           60               0 ## 42          41 SeuratProject        139           61               0 ## 43          42 SeuratProject        108           44               0 ## 44          43 SeuratProject         41           32               0 ## 45          44 SeuratProject        146           47               0 ## 46          45 SeuratProject        104           40               0 ## 47          46 SeuratProject        126           48               0 ## 48          47 SeuratProject         94           55               0 ## 49          48 SeuratProject        204           52               0 ## 50          49 SeuratProject         99           45               0 ## 51          50 SeuratProject        371           75               1 ## 52          51 SeuratProject        387           83               1 ## 53          52 SeuratProject        139           50               1 ## 54          53 SeuratProject         99           42               1 ## 55          54 SeuratProject        443           77               1 ## 56          55 SeuratProject        417           75               0 ## 57          56 SeuratProject        502           81               1 ## 58          57 SeuratProject        324           76               1 ## 59          58 SeuratProject        292           71               1 ## 60          59 SeuratProject        443           81               0 ## 61          60 SeuratProject        787           88               0 ## 62          61 SeuratProject        612           69               1 ## 63          62 SeuratProject        286           68               0 ## 64          63 SeuratProject        462           86               1 ## 65          64 SeuratProject        872           96               1 ## 66          65 SeuratProject        709           94               1 ## 67          66 SeuratProject        745           84               1 ## 68          67 SeuratProject        328           72               1 ## 69          68 SeuratProject        389           73               1 ## 70          69 SeuratProject        754           83               0 ## 71          70 SeuratProject        212           38               0 ## 72          71 SeuratProject        172           29               0 ## 73          72 SeuratProject        168           37               0 ## 74          73 SeuratProject        210           33               0 ## 75          74 SeuratProject        228           39               0 ## 76          75 SeuratProject        527           47               0 ## 77          76 SeuratProject        202           30               0 ## 78          77 SeuratProject        157           29               0 ## 79          78 SeuratProject        150           30               0 ## 80          79 SeuratProject        233           76               1 ##    letter.idents groups RNA_snn_res.1         obs_id ## 1              A     g2             0 ATGCCAGAACGACT ## 2              A     g1             0 CATGGCCTGTGCAT ## 3              B     g2             0 GAACCTGATGAACC ## 4              A     g2             0 TGACTGGATTCTCA ## 5              A     g2             0 AGTCAGACTGCACA ## 6              A     g1             0 TCTGATACACGTGT ## 7              A     g1             0 TGGTATCTAAACAG ## 8              A     g1             0 GCAGCTCTGTTTCT ## 9              A     g1             0 GATATAACACGCAT ## 10             A     g1             0 AATGTTGACAGTCA ## 11             A     g2             2 AGGTCATGAGTGTC ## 12             A     g1             2 AGAGATGATCTCGC ## 13             A     g2             2 GGGTAACTCTAGTG ## 14             A     g2             2 CATGAGACACGGGA ## 15             A     g2             2 TACGCCACTCCGAA ## 16             A     g1             2 CTAAACCTGTGCAT ## 17             A     g2             2 GTAAGCACTCATTC ## 18             A     g1             2 TTGGTACTGAATCC ## 19             A     g1             2 CATCATACGGAGCA ## 20             A     g2             2 TACATCACGCTAAC ## 21             B     g1             1 TTACCATGAATCGC ## 22             B     g1             1 ATAGGAGAAACAGA ## 23             B     g2             1 GCGCACGACTTTAC ## 24             B     g2             1 ACTCGCACGAAAGT ## 25             B     g1             1 ATTACCTGCCTTAT ## 26             B     g2             1 CCCAACTGCAATCG ## 27             B     g2             1 AAATTCGAATCACG ## 28             B     g2             1 CCATCCGATTCGCC ## 29             B     g2             1 TCCACTCTGAGCTT ## 30             B     g1             1 CATCAGGATGCACA ## 31             A     g1             0 CTAAACCTCTGACA ## 32             A     g1             2 GATAGAGAAGGGTG ## 33             A     g1             0 CTAACGGAACCGAT ## 34             A     g2             0 AGATATACCCGTAA ## 35             A     g1             0 TACTCTGAATCGAC ## 36             A     g1             0 GCGCATCTTGCTCC ## 37             A     g2             0 GTTGACGATATCGG ## 38             A     g1             0 ACAGGTACTGGTGT ## 39             A     g1             0 GGCATATGCTTATC ## 40             A     g2             0 CATTACACCAACTG ## 41             A     g1             0 TAGGGACTGAACTC ## 42             A     g2             2 GCTCCATGAGAAGT ## 43             A     g2             0 TACAATGATGCTAG ## 44             A     g2             0 CTTCATGACCGAAT ## 45             A     g1             2 CTGCCAACAGGAGC ## 46             A     g2             2 TTGCATTGAGCTAC ## 47             A     g1             0 AAGCAAGAGCTTAG ## 48             A     g2             0 CGGCACGAACTCAG ## 49             A     g1             0 GGTGGAGATTACTC ## 50             A     g2             0 GGCCGATGTACTCT ## 51             B     g1             1 CGTAGCCTGTATGC ## 52             B     g2             1 TGAGCTGAATGCTG ## 53             B     g2             2 CCTATAACGAGACG ## 54             B     g2             1 ATAAGTTGGTACGT ## 55             B     g1             1 AAGCGACTTTGACG ## 56             A     g1             1 ACCAGTGAATACCG ## 57             B     g1             1 ATTGCACTTGCTTT ## 58             B     g1             1 CTAGGTGATGGTTG ## 59             B     g2             1 GCACTAGACCTTTA ## 60             A     g1             0 CATGCGCTAGTCAC ## 61             A     g1             2 TTGAGGACTACGCA ## 62             B     g1             1 ATACCACTCTAAGC ## 63             A     g1             2 CATATAGACTAAGC ## 64             B     g1             1 TTTAGCTGTACTCT ## 65             B     g1             2 GACATTCTCCACCT ## 66             B     g2             1 ACGTGATGCCATGA ## 67             B     g2             1 ATTGTAGATTCCCG ## 68             B     g1             1 GATAGAGATCACGA ## 69             B     g1             1 AATGCGTGGACGGA ## 70             A     g1             2 GCGTAAACACGGTT ## 71             A     g2             0 ATTCAGCTCATTGG ## 72             A     g1             0 GGCATATGGGGAGT ## 73             A     g2             0 ATCATCTGACACCA ## 74             A     g2             0 GTCATACTTCGCCT ## 75             A     g1             0 TTACGTACGTTCAG ## 76             A     g1             0 GAGTTGTGGTAGCT ## 77             A     g2             0 GACGCTCTCTCTCG ## 78             A     g1             0 AGTCTTACTTCGGA ## 79             A     g2             0 GGAACACTTCAGAC ## 80             B     g1             1 CTTGATTGATCTTC"},{"path":"/articles/soma-reading.html","id":"slicing","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Slicing","title":"Reading from SOMA objects","text":"Slices data can read passing coordinates read() method. , let’s take look schema obs: SOMA object, can slice across indexed column (“dimension” TileDB parlance). can use dimnames() retrieve names SOMA object’s indexed dimensions: case, single dimension called soma_joinid. schema can see contains integers. Let’s look ways slice dataframe. Select single row: Select multiple, non-contiguous rows: Select multiple, contiguous rows:","code":"obs$schema() ## Schema ## soma_joinid: int64 not null ## orig.ident: dictionary<values=string, indices=int8> ## nCount_RNA: double ## nFeature_RNA: int32 ## RNA_snn_res.0.8: dictionary<values=string, indices=int8> ## letter.idents: dictionary<values=string, indices=int8> ## groups: large_string ## RNA_snn_res.1: dictionary<values=string, indices=int8> ## obs_id: large_string obs$dimnames() ## [1] \"soma_joinid\" obs$read(coords = 0)$concat() ## Table ## 1 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read(coords = c(0, 2))$concat() ## Table ## 2 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read(coords = 0:4)$concat() ## Table ## 5 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string>"},{"path":"/articles/soma-reading.html","id":"selecting-columns","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Selecting columns","title":"Reading from SOMA objects","text":"TileDB columnar format, possible select subset columns read using column_names argument:","code":"obs$read(coords = 0:4, column_names = c(\"obs_id\", \"groups\"))$concat() ## Table ## 5 rows x 2 columns ## $obs_id <large_string> ## $groups <large_string>"},{"path":"/articles/soma-reading.html","id":"filtering","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Filtering","title":"Reading from SOMA objects","text":"addition slicing coordinates can also apply filters data using value_filter argument. expressions pushed TileDB engine efficiently applied data disk. examples. Identify cells \"g1\" group: Identify cells \"g1\" \"g2\" group: Altenratively, can use %% operator: Identify cells \"g1\" group 60 features:","code":"obs$read(value_filter = \"groups == 'g1'\")$concat()$to_data_frame() ##    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## 1            1 SeuratProject         85           52               0 ## 2            5 SeuratProject         70           48               0 ## 3            6 SeuratProject         64           36               0 ## 4            7 SeuratProject         72           45               0 ## 5            8 SeuratProject         52           36               0 ## 6            9 SeuratProject        100           41               0 ## 7           11 SeuratProject        191           61               0 ## 8           15 SeuratProject        168           44               0 ## 9           17 SeuratProject        135           45               0 ## 10          18 SeuratProject         79           43               0 ## 11          20 SeuratProject        298           65               1 ## 12          21 SeuratProject        406           74               1 ## 13          24 SeuratProject        463           77               1 ## 14          29 SeuratProject        353           80               1 ## 15          30 SeuratProject        246           59               0 ## 16          31 SeuratProject        115           51               0 ## 17          32 SeuratProject        189           53               0 ## 18          34 SeuratProject        156           48               0 ## 19          35 SeuratProject        164           47               0 ## 20          37 SeuratProject        151           59               0 ## 21          38 SeuratProject        126           53               0 ## 22          40 SeuratProject        156           60               0 ## 23          44 SeuratProject        146           47               0 ## 24          46 SeuratProject        126           48               0 ## 25          48 SeuratProject        204           52               0 ## 26          50 SeuratProject        371           75               1 ## 27          54 SeuratProject        443           77               1 ## 28          55 SeuratProject        417           75               0 ## 29          56 SeuratProject        502           81               1 ## 30          57 SeuratProject        324           76               1 ## 31          59 SeuratProject        443           81               0 ## 32          60 SeuratProject        787           88               0 ## 33          61 SeuratProject        612           69               1 ## 34          62 SeuratProject        286           68               0 ## 35          63 SeuratProject        462           86               1 ## 36          64 SeuratProject        872           96               1 ## 37          67 SeuratProject        328           72               1 ## 38          68 SeuratProject        389           73               1 ## 39          69 SeuratProject        754           83               0 ## 40          71 SeuratProject        172           29               0 ## 41          74 SeuratProject        228           39               0 ## 42          75 SeuratProject        527           47               0 ## 43          77 SeuratProject        157           29               0 ## 44          79 SeuratProject        233           76               1 ##    letter.idents groups RNA_snn_res.1         obs_id ## 1              A     g1             0 CATGGCCTGTGCAT ## 2              A     g1             0 TCTGATACACGTGT ## 3              A     g1             0 TGGTATCTAAACAG ## 4              A     g1             0 GCAGCTCTGTTTCT ## 5              A     g1             0 GATATAACACGCAT ## 6              A     g1             0 AATGTTGACAGTCA ## 7              A     g1             2 AGAGATGATCTCGC ## 8              A     g1             2 CTAAACCTGTGCAT ## 9              A     g1             2 TTGGTACTGAATCC ## 10             A     g1             2 CATCATACGGAGCA ## 11             B     g1             1 TTACCATGAATCGC ## 12             B     g1             1 ATAGGAGAAACAGA ## 13             B     g1             1 ATTACCTGCCTTAT ## 14             B     g1             1 CATCAGGATGCACA ## 15             A     g1             0 CTAAACCTCTGACA ## 16             A     g1             2 GATAGAGAAGGGTG ## 17             A     g1             0 CTAACGGAACCGAT ## 18             A     g1             0 TACTCTGAATCGAC ## 19             A     g1             0 GCGCATCTTGCTCC ## 20             A     g1             0 ACAGGTACTGGTGT ## 21             A     g1             0 GGCATATGCTTATC ## 22             A     g1             0 TAGGGACTGAACTC ## 23             A     g1             2 CTGCCAACAGGAGC ## 24             A     g1             0 AAGCAAGAGCTTAG ## 25             A     g1             0 GGTGGAGATTACTC ## 26             B     g1             1 CGTAGCCTGTATGC ## 27             B     g1             1 AAGCGACTTTGACG ## 28             A     g1             1 ACCAGTGAATACCG ## 29             B     g1             1 ATTGCACTTGCTTT ## 30             B     g1             1 CTAGGTGATGGTTG ## 31             A     g1             0 CATGCGCTAGTCAC ## 32             A     g1             2 TTGAGGACTACGCA ## 33             B     g1             1 ATACCACTCTAAGC ## 34             A     g1             2 CATATAGACTAAGC ## 35             B     g1             1 TTTAGCTGTACTCT ## 36             B     g1             2 GACATTCTCCACCT ## 37             B     g1             1 GATAGAGATCACGA ## 38             B     g1             1 AATGCGTGGACGGA ## 39             A     g1             2 GCGTAAACACGGTT ## 40             A     g1             0 GGCATATGGGGAGT ## 41             A     g1             0 TTACGTACGTTCAG ## 42             A     g1             0 GAGTTGTGGTAGCT ## 43             A     g1             0 AGTCTTACTTCGGA ## 44             B     g1             1 CTTGATTGATCTTC obs$read(value_filter = \"groups == 'g1' | groups == 'g2'\")$concat()$to_data_frame() ##    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## 1            0 SeuratProject         70           47               0 ## 2            1 SeuratProject         85           52               0 ## 3            2 SeuratProject         87           50               1 ## 4            3 SeuratProject        127           56               0 ## 5            4 SeuratProject        173           53               0 ## 6            5 SeuratProject         70           48               0 ## 7            6 SeuratProject         64           36               0 ## 8            7 SeuratProject         72           45               0 ## 9            8 SeuratProject         52           36               0 ## 10           9 SeuratProject        100           41               0 ## 11          10 SeuratProject         62           31               0 ## 12          11 SeuratProject        191           61               0 ## 13          12 SeuratProject        101           41               0 ## 14          13 SeuratProject         51           26               0 ## 15          14 SeuratProject         99           45               0 ## 16          15 SeuratProject        168           44               0 ## 17          16 SeuratProject         67           33               0 ## 18          17 SeuratProject        135           45               0 ## 19          18 SeuratProject         79           43               0 ## 20          19 SeuratProject        109           41               0 ## 21          20 SeuratProject        298           65               1 ## 22          21 SeuratProject        406           74               1 ## 23          22 SeuratProject        213           48               1 ## 24          23 SeuratProject        231           49               1 ## 25          24 SeuratProject        463           77               1 ## 26          25 SeuratProject         87           42               1 ## 27          26 SeuratProject        327           62               1 ## 28          27 SeuratProject        224           50               1 ## 29          28 SeuratProject        361           76               1 ## 30          29 SeuratProject        353           80               1 ## 31          30 SeuratProject        246           59               0 ## 32          31 SeuratProject        115           51               0 ## 33          32 SeuratProject        189           53               0 ## 34          33 SeuratProject        187           61               0 ## 35          34 SeuratProject        156           48               0 ## 36          35 SeuratProject        164           47               0 ## 37          36 SeuratProject        221           67               0 ## 38          37 SeuratProject        151           59               0 ## 39          38 SeuratProject        126           53               0 ## 40          39 SeuratProject        316           65               0 ## 41          40 SeuratProject        156           60               0 ## 42          41 SeuratProject        139           61               0 ## 43          42 SeuratProject        108           44               0 ## 44          43 SeuratProject         41           32               0 ## 45          44 SeuratProject        146           47               0 ## 46          45 SeuratProject        104           40               0 ## 47          46 SeuratProject        126           48               0 ## 48          47 SeuratProject         94           55               0 ## 49          48 SeuratProject        204           52               0 ## 50          49 SeuratProject         99           45               0 ## 51          50 SeuratProject        371           75               1 ## 52          51 SeuratProject        387           83               1 ## 53          52 SeuratProject        139           50               1 ## 54          53 SeuratProject         99           42               1 ## 55          54 SeuratProject        443           77               1 ## 56          55 SeuratProject        417           75               0 ## 57          56 SeuratProject        502           81               1 ## 58          57 SeuratProject        324           76               1 ## 59          58 SeuratProject        292           71               1 ## 60          59 SeuratProject        443           81               0 ## 61          60 SeuratProject        787           88               0 ## 62          61 SeuratProject        612           69               1 ## 63          62 SeuratProject        286           68               0 ## 64          63 SeuratProject        462           86               1 ## 65          64 SeuratProject        872           96               1 ## 66          65 SeuratProject        709           94               1 ## 67          66 SeuratProject        745           84               1 ## 68          67 SeuratProject        328           72               1 ## 69          68 SeuratProject        389           73               1 ## 70          69 SeuratProject        754           83               0 ## 71          70 SeuratProject        212           38               0 ## 72          71 SeuratProject        172           29               0 ## 73          72 SeuratProject        168           37               0 ## 74          73 SeuratProject        210           33               0 ## 75          74 SeuratProject        228           39               0 ## 76          75 SeuratProject        527           47               0 ## 77          76 SeuratProject        202           30               0 ## 78          77 SeuratProject        157           29               0 ## 79          78 SeuratProject        150           30               0 ## 80          79 SeuratProject        233           76               1 ##    letter.idents groups RNA_snn_res.1         obs_id ## 1              A     g2             0 ATGCCAGAACGACT ## 2              A     g1             0 CATGGCCTGTGCAT ## 3              B     g2             0 GAACCTGATGAACC ## 4              A     g2             0 TGACTGGATTCTCA ## 5              A     g2             0 AGTCAGACTGCACA ## 6              A     g1             0 TCTGATACACGTGT ## 7              A     g1             0 TGGTATCTAAACAG ## 8              A     g1             0 GCAGCTCTGTTTCT ## 9              A     g1             0 GATATAACACGCAT ## 10             A     g1             0 AATGTTGACAGTCA ## 11             A     g2             2 AGGTCATGAGTGTC ## 12             A     g1             2 AGAGATGATCTCGC ## 13             A     g2             2 GGGTAACTCTAGTG ## 14             A     g2             2 CATGAGACACGGGA ## 15             A     g2             2 TACGCCACTCCGAA ## 16             A     g1             2 CTAAACCTGTGCAT ## 17             A     g2             2 GTAAGCACTCATTC ## 18             A     g1             2 TTGGTACTGAATCC ## 19             A     g1             2 CATCATACGGAGCA ## 20             A     g2             2 TACATCACGCTAAC ## 21             B     g1             1 TTACCATGAATCGC ## 22             B     g1             1 ATAGGAGAAACAGA ## 23             B     g2             1 GCGCACGACTTTAC ## 24             B     g2             1 ACTCGCACGAAAGT ## 25             B     g1             1 ATTACCTGCCTTAT ## 26             B     g2             1 CCCAACTGCAATCG ## 27             B     g2             1 AAATTCGAATCACG ## 28             B     g2             1 CCATCCGATTCGCC ## 29             B     g2             1 TCCACTCTGAGCTT ## 30             B     g1             1 CATCAGGATGCACA ## 31             A     g1             0 CTAAACCTCTGACA ## 32             A     g1             2 GATAGAGAAGGGTG ## 33             A     g1             0 CTAACGGAACCGAT ## 34             A     g2             0 AGATATACCCGTAA ## 35             A     g1             0 TACTCTGAATCGAC ## 36             A     g1             0 GCGCATCTTGCTCC ## 37             A     g2             0 GTTGACGATATCGG ## 38             A     g1             0 ACAGGTACTGGTGT ## 39             A     g1             0 GGCATATGCTTATC ## 40             A     g2             0 CATTACACCAACTG ## 41             A     g1             0 TAGGGACTGAACTC ## 42             A     g2             2 GCTCCATGAGAAGT ## 43             A     g2             0 TACAATGATGCTAG ## 44             A     g2             0 CTTCATGACCGAAT ## 45             A     g1             2 CTGCCAACAGGAGC ## 46             A     g2             2 TTGCATTGAGCTAC ## 47             A     g1             0 AAGCAAGAGCTTAG ## 48             A     g2             0 CGGCACGAACTCAG ## 49             A     g1             0 GGTGGAGATTACTC ## 50             A     g2             0 GGCCGATGTACTCT ## 51             B     g1             1 CGTAGCCTGTATGC ## 52             B     g2             1 TGAGCTGAATGCTG ## 53             B     g2             2 CCTATAACGAGACG ## 54             B     g2             1 ATAAGTTGGTACGT ## 55             B     g1             1 AAGCGACTTTGACG ## 56             A     g1             1 ACCAGTGAATACCG ## 57             B     g1             1 ATTGCACTTGCTTT ## 58             B     g1             1 CTAGGTGATGGTTG ## 59             B     g2             1 GCACTAGACCTTTA ## 60             A     g1             0 CATGCGCTAGTCAC ## 61             A     g1             2 TTGAGGACTACGCA ## 62             B     g1             1 ATACCACTCTAAGC ## 63             A     g1             2 CATATAGACTAAGC ## 64             B     g1             1 TTTAGCTGTACTCT ## 65             B     g1             2 GACATTCTCCACCT ## 66             B     g2             1 ACGTGATGCCATGA ## 67             B     g2             1 ATTGTAGATTCCCG ## 68             B     g1             1 GATAGAGATCACGA ## 69             B     g1             1 AATGCGTGGACGGA ## 70             A     g1             2 GCGTAAACACGGTT ## 71             A     g2             0 ATTCAGCTCATTGG ## 72             A     g1             0 GGCATATGGGGAGT ## 73             A     g2             0 ATCATCTGACACCA ## 74             A     g2             0 GTCATACTTCGCCT ## 75             A     g1             0 TTACGTACGTTCAG ## 76             A     g1             0 GAGTTGTGGTAGCT ## 77             A     g2             0 GACGCTCTCTCTCG ## 78             A     g1             0 AGTCTTACTTCGGA ## 79             A     g2             0 GGAACACTTCAGAC ## 80             B     g1             1 CTTGATTGATCTTC obs$read(value_filter = \"groups %in% c('g1', 'g2')\")$concat()$to_data_frame() ##    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## 1            0 SeuratProject         70           47               0 ## 2            1 SeuratProject         85           52               0 ## 3            2 SeuratProject         87           50               1 ## 4            3 SeuratProject        127           56               0 ## 5            4 SeuratProject        173           53               0 ## 6            5 SeuratProject         70           48               0 ## 7            6 SeuratProject         64           36               0 ## 8            7 SeuratProject         72           45               0 ## 9            8 SeuratProject         52           36               0 ## 10           9 SeuratProject        100           41               0 ## 11          10 SeuratProject         62           31               0 ## 12          11 SeuratProject        191           61               0 ## 13          12 SeuratProject        101           41               0 ## 14          13 SeuratProject         51           26               0 ## 15          14 SeuratProject         99           45               0 ## 16          15 SeuratProject        168           44               0 ## 17          16 SeuratProject         67           33               0 ## 18          17 SeuratProject        135           45               0 ## 19          18 SeuratProject         79           43               0 ## 20          19 SeuratProject        109           41               0 ## 21          20 SeuratProject        298           65               1 ## 22          21 SeuratProject        406           74               1 ## 23          22 SeuratProject        213           48               1 ## 24          23 SeuratProject        231           49               1 ## 25          24 SeuratProject        463           77               1 ## 26          25 SeuratProject         87           42               1 ## 27          26 SeuratProject        327           62               1 ## 28          27 SeuratProject        224           50               1 ## 29          28 SeuratProject        361           76               1 ## 30          29 SeuratProject        353           80               1 ## 31          30 SeuratProject        246           59               0 ## 32          31 SeuratProject        115           51               0 ## 33          32 SeuratProject        189           53               0 ## 34          33 SeuratProject        187           61               0 ## 35          34 SeuratProject        156           48               0 ## 36          35 SeuratProject        164           47               0 ## 37          36 SeuratProject        221           67               0 ## 38          37 SeuratProject        151           59               0 ## 39          38 SeuratProject        126           53               0 ## 40          39 SeuratProject        316           65               0 ## 41          40 SeuratProject        156           60               0 ## 42          41 SeuratProject        139           61               0 ## 43          42 SeuratProject        108           44               0 ## 44          43 SeuratProject         41           32               0 ## 45          44 SeuratProject        146           47               0 ## 46          45 SeuratProject        104           40               0 ## 47          46 SeuratProject        126           48               0 ## 48          47 SeuratProject         94           55               0 ## 49          48 SeuratProject        204           52               0 ## 50          49 SeuratProject         99           45               0 ## 51          50 SeuratProject        371           75               1 ## 52          51 SeuratProject        387           83               1 ## 53          52 SeuratProject        139           50               1 ## 54          53 SeuratProject         99           42               1 ## 55          54 SeuratProject        443           77               1 ## 56          55 SeuratProject        417           75               0 ## 57          56 SeuratProject        502           81               1 ## 58          57 SeuratProject        324           76               1 ## 59          58 SeuratProject        292           71               1 ## 60          59 SeuratProject        443           81               0 ## 61          60 SeuratProject        787           88               0 ## 62          61 SeuratProject        612           69               1 ## 63          62 SeuratProject        286           68               0 ## 64          63 SeuratProject        462           86               1 ## 65          64 SeuratProject        872           96               1 ## 66          65 SeuratProject        709           94               1 ## 67          66 SeuratProject        745           84               1 ## 68          67 SeuratProject        328           72               1 ## 69          68 SeuratProject        389           73               1 ## 70          69 SeuratProject        754           83               0 ## 71          70 SeuratProject        212           38               0 ## 72          71 SeuratProject        172           29               0 ## 73          72 SeuratProject        168           37               0 ## 74          73 SeuratProject        210           33               0 ## 75          74 SeuratProject        228           39               0 ## 76          75 SeuratProject        527           47               0 ## 77          76 SeuratProject        202           30               0 ## 78          77 SeuratProject        157           29               0 ## 79          78 SeuratProject        150           30               0 ## 80          79 SeuratProject        233           76               1 ##    letter.idents groups RNA_snn_res.1         obs_id ## 1              A     g2             0 ATGCCAGAACGACT ## 2              A     g1             0 CATGGCCTGTGCAT ## 3              B     g2             0 GAACCTGATGAACC ## 4              A     g2             0 TGACTGGATTCTCA ## 5              A     g2             0 AGTCAGACTGCACA ## 6              A     g1             0 TCTGATACACGTGT ## 7              A     g1             0 TGGTATCTAAACAG ## 8              A     g1             0 GCAGCTCTGTTTCT ## 9              A     g1             0 GATATAACACGCAT ## 10             A     g1             0 AATGTTGACAGTCA ## 11             A     g2             2 AGGTCATGAGTGTC ## 12             A     g1             2 AGAGATGATCTCGC ## 13             A     g2             2 GGGTAACTCTAGTG ## 14             A     g2             2 CATGAGACACGGGA ## 15             A     g2             2 TACGCCACTCCGAA ## 16             A     g1             2 CTAAACCTGTGCAT ## 17             A     g2             2 GTAAGCACTCATTC ## 18             A     g1             2 TTGGTACTGAATCC ## 19             A     g1             2 CATCATACGGAGCA ## 20             A     g2             2 TACATCACGCTAAC ## 21             B     g1             1 TTACCATGAATCGC ## 22             B     g1             1 ATAGGAGAAACAGA ## 23             B     g2             1 GCGCACGACTTTAC ## 24             B     g2             1 ACTCGCACGAAAGT ## 25             B     g1             1 ATTACCTGCCTTAT ## 26             B     g2             1 CCCAACTGCAATCG ## 27             B     g2             1 AAATTCGAATCACG ## 28             B     g2             1 CCATCCGATTCGCC ## 29             B     g2             1 TCCACTCTGAGCTT ## 30             B     g1             1 CATCAGGATGCACA ## 31             A     g1             0 CTAAACCTCTGACA ## 32             A     g1             2 GATAGAGAAGGGTG ## 33             A     g1             0 CTAACGGAACCGAT ## 34             A     g2             0 AGATATACCCGTAA ## 35             A     g1             0 TACTCTGAATCGAC ## 36             A     g1             0 GCGCATCTTGCTCC ## 37             A     g2             0 GTTGACGATATCGG ## 38             A     g1             0 ACAGGTACTGGTGT ## 39             A     g1             0 GGCATATGCTTATC ## 40             A     g2             0 CATTACACCAACTG ## 41             A     g1             0 TAGGGACTGAACTC ## 42             A     g2             2 GCTCCATGAGAAGT ## 43             A     g2             0 TACAATGATGCTAG ## 44             A     g2             0 CTTCATGACCGAAT ## 45             A     g1             2 CTGCCAACAGGAGC ## 46             A     g2             2 TTGCATTGAGCTAC ## 47             A     g1             0 AAGCAAGAGCTTAG ## 48             A     g2             0 CGGCACGAACTCAG ## 49             A     g1             0 GGTGGAGATTACTC ## 50             A     g2             0 GGCCGATGTACTCT ## 51             B     g1             1 CGTAGCCTGTATGC ## 52             B     g2             1 TGAGCTGAATGCTG ## 53             B     g2             2 CCTATAACGAGACG ## 54             B     g2             1 ATAAGTTGGTACGT ## 55             B     g1             1 AAGCGACTTTGACG ## 56             A     g1             1 ACCAGTGAATACCG ## 57             B     g1             1 ATTGCACTTGCTTT ## 58             B     g1             1 CTAGGTGATGGTTG ## 59             B     g2             1 GCACTAGACCTTTA ## 60             A     g1             0 CATGCGCTAGTCAC ## 61             A     g1             2 TTGAGGACTACGCA ## 62             B     g1             1 ATACCACTCTAAGC ## 63             A     g1             2 CATATAGACTAAGC ## 64             B     g1             1 TTTAGCTGTACTCT ## 65             B     g1             2 GACATTCTCCACCT ## 66             B     g2             1 ACGTGATGCCATGA ## 67             B     g2             1 ATTGTAGATTCCCG ## 68             B     g1             1 GATAGAGATCACGA ## 69             B     g1             1 AATGCGTGGACGGA ## 70             A     g1             2 GCGTAAACACGGTT ## 71             A     g2             0 ATTCAGCTCATTGG ## 72             A     g1             0 GGCATATGGGGAGT ## 73             A     g2             0 ATCATCTGACACCA ## 74             A     g2             0 GTCATACTTCGCCT ## 75             A     g1             0 TTACGTACGTTCAG ## 76             A     g1             0 GAGTTGTGGTAGCT ## 77             A     g2             0 GACGCTCTCTCTCG ## 78             A     g1             0 AGTCTTACTTCGGA ## 79             A     g2             0 GGAACACTTCAGAC ## 80             B     g1             1 CTTGATTGATCTTC obs$read(value_filter = \"groups == 'g1' & nFeature_RNA > 60\")$concat()$to_data_frame() ##    soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 ## 1           11 SeuratProject        191           61               0 ## 2           20 SeuratProject        298           65               1 ## 3           21 SeuratProject        406           74               1 ## 4           24 SeuratProject        463           77               1 ## 5           29 SeuratProject        353           80               1 ## 6           50 SeuratProject        371           75               1 ## 7           54 SeuratProject        443           77               1 ## 8           55 SeuratProject        417           75               0 ## 9           56 SeuratProject        502           81               1 ## 10          57 SeuratProject        324           76               1 ## 11          59 SeuratProject        443           81               0 ## 12          60 SeuratProject        787           88               0 ## 13          61 SeuratProject        612           69               1 ## 14          62 SeuratProject        286           68               0 ## 15          63 SeuratProject        462           86               1 ## 16          64 SeuratProject        872           96               1 ## 17          67 SeuratProject        328           72               1 ## 18          68 SeuratProject        389           73               1 ## 19          69 SeuratProject        754           83               0 ## 20          79 SeuratProject        233           76               1 ##    letter.idents groups RNA_snn_res.1         obs_id ## 1              A     g1             2 AGAGATGATCTCGC ## 2              B     g1             1 TTACCATGAATCGC ## 3              B     g1             1 ATAGGAGAAACAGA ## 4              B     g1             1 ATTACCTGCCTTAT ## 5              B     g1             1 CATCAGGATGCACA ## 6              B     g1             1 CGTAGCCTGTATGC ## 7              B     g1             1 AAGCGACTTTGACG ## 8              A     g1             1 ACCAGTGAATACCG ## 9              B     g1             1 ATTGCACTTGCTTT ## 10             B     g1             1 CTAGGTGATGGTTG ## 11             A     g1             0 CATGCGCTAGTCAC ## 12             A     g1             2 TTGAGGACTACGCA ## 13             B     g1             1 ATACCACTCTAAGC ## 14             A     g1             2 CATATAGACTAAGC ## 15             B     g1             1 TTTAGCTGTACTCT ## 16             B     g1             2 GACATTCTCCACCT ## 17             B     g1             1 GATAGAGATCACGA ## 18             B     g1             1 AATGCGTGGACGGA ## 19             A     g1             2 GCGTAAACACGGTT ## 20             B     g1             1 CTTGATTGATCTTC"},{"path":"/articles/soma-reading.html","id":"soma-sparsendarray","dir":"Articles","previous_headings":"","what":"SOMA SparseNDArray","title":"Reading from SOMA objects","text":"SOMASparseNDArray, let’s consider X layer containing \"counts\" data: Similar SOMADataFrame, can load data memory Arrow Table: $$`Matrix::sparseMatrix()`$$:","code":"counts <- experiment$ms$get(\"RNA\")$X$get(\"counts\") counts ## <SOMASparseNDArray> ##   uri: file:///tmp/Rtmp04JcIU/soma-exp-pbmc-small/ms/RNA/X/counts ##   dimensions: soma_dim_0, soma_dim_1  ##   attributes: soma_data counts$read()$tables()$concat() ## Table ## 4456 rows x 3 columns ## $soma_dim_0 <int64 not null> ## $soma_dim_1 <int64 not null> ## $soma_data <double not null> counts$read()$sparse_matrix()$concat() ## 80 x 230 sparse Matrix of class \"dgTMatrix\" ##                                                                                 ##  [1,] . 1  .   . .  1 . .  3 . . 1 . . . . . . . . . .  1 . . . .  . . .  4 . . ##  [2,] . .  .   1 .  . . .  7 . . . . . . . . . . . . 1  1 . 2 . 1  . . .  4 3 1 ##  [3,] . .  .   . .  . . . 11 . . 1 . . . . . . . . . .  . 1 . . .  . . .  4 2 . ##  [4,] . .  .   . .  . . . 13 . . 1 . . . . . . . . . .  6 . . . .  . . .  5 2 1 ##  [5,] . .  .   1 .  . . .  3 . . . . . . . . . . . . .  . . . . .  . . .  4 3 . ##  [6,] . .  .   1 .  . . .  4 . . . . 1 . . . . . . . .  2 1 . . .  . . .  4 1 1 ##  [7,] . .  .   . .  . . .  6 . . . . . . . . . . . . .  4 . . . .  . . .  3 1 1 ##  [8,] . .  .   1 .  . . .  4 . . . . . . . . . . . . .  1 1 . . .  . . .  2 3 . ##  [9,] . .  .   . .  . . .  2 . . . . . . . . . . . . .  . . . . .  . . .  2 2 . ## [10,] . 1  .   . .  . . . 21 . . 1 . . . . . . . . . .  4 . 1 . .  . . .  2 1 1 ## [11,] 2 2  .  14 3  1 3 .  2 . . . 1 . 3 . . . . 1 1 1  2 2 . 2 .  1 1 1  . . . ## [12,] 2 4  5  28 .  6 1 4  9 2 1 3 . 1 . 3 1 1 . . . .  . . 1 2 4  . . .  . . . ## [13,] 4 3  2  18 2  2 . 1  2 . 1 2 1 . 1 . . . . . 1 .  4 . 1 1 . 15 . .  . . . ## [14,] 4 3  2   7 4  2 . 1  4 1 . . . 1 . 1 2 . . . 1 .  1 . . . .  . 1 .  . . . ## [15,] 2 2  5  15 .  2 2 2  4 1 . 1 . . 1 . . 1 . . . 2  . 2 2 . 1  . . .  . . . ## [16,] 3 3  8  28 .  8 . 2  . 1 . 2 . 3 1 . 1 . 1 1 . .  . . 3 . 1  . . 1  . 2 . ## [17,] 3 1  1   7 3  2 2 1  3 . 1 2 1 . . . . . 2 1 . .  4 . . 1 .  . . 1  . . . ## [18,] 4 2  5  26 3  2 1 2  6 . 1 . 2 . . 1 . 1 1 1 . 2  2 . 1 . 1 23 1 .  . . . ## [19,] 2 2  5  10 3  1 1 .  5 1 . 1 2 1 . . 1 . . . 1 1  6 1 . 1 .  . . .  . . . ## [20,] 3 5 12  16 2  2 2 1  7 . 1 . . . . 2 . 3 1 . . .  2 1 1 1 .  . . 1  . . . ## [21,] . .  .   7 .  . 1 .  1 . . . . . . . . . . . . .  3 . . . .  . . .  . . . ## [22,] . .  .  22 .  3 . 1  . . . . . . . . . . . . . .  . . . . .  . . .  . 2 . ## [23,] . .  1   . .  . 1 .  . . . 1 1 . . . . . . . . .  . . . . .  . . .  . . . ## [24,] . .  .  10 .  . . 1  1 . . . . . . . . . . . . .  . 1 . . .  . . .  . . . ## [25,] 1 .  .   6 .  . . .  1 . . . 1 . . . . . . . . .  . . . . .  . . .  1 1 . ## [26,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [27,] . .  .   4 .  1 . .  . . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [28,] . .  1   3 .  . . .  . . . . . . . . . . . . . .  . 1 . . .  . . .  . . . ## [29,] . .  .   7 .  1 . 2  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [30,] . 1  .  13 .  . . .  1 . . . 1 . . . . . . . . .  . . 1 . .  . . .  . . . ## [31,] . 1  .   . .  . . .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [32,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . 1 . . .  . . .  7 . . ## [33,] . 2  .   . .  . . .  . . . . . . . . . . . . . .  . . . 1 .  . . .  . 1 . ## [34,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  . 1 . . .  . . .  . 1 . ## [35,] . .  .   1 .  . . .  . . . 1 . . . . . . . . . .  . . . 1 .  . . .  . . . ## [36,] . .  .   . .  . . .  . . . 1 . 1 . . . . . . . .  1 . . . .  . . .  . . . ## [37,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  1 . . ## [38,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . 1 . .  . . .  . 2 . ## [39,] . .  .   . .  . . .  . . . . . 1 . . . . . . . .  4 . . . .  . . .  1 . . ## [40,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . 1 .  . . .  . . . ## [41,] . .  .   . .  . . .  . . . . . . . . . . . . . .  7 . . . .  . . .  . 1 . ## [42,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  1 . . . .  . . .  2 . . ## [43,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  3 . . . .  . . .  3 . . ## [44,] . .  .   . .  . . .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . . . ## [45,] . .  .   . .  . . .  7 . . 1 . . . . . . . . . .  6 1 1 . .  . . .  3 . . ## [46,] . .  .   1 .  . . .  1 . . . . . . . . . . . . .  1 . . 3 .  . . . 15 . . ## [47,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  1 1 . ## [48,] . .  .   1 .  . . .  1 . . . . 1 . . . . . . . .  1 . . . .  . . .  3 . . ## [49,] . .  .   . .  . . .  5 . . . . . . . . . . . . .  . . . . .  . . .  6 . . ## [50,] . .  .   . .  . . .  3 . . . . . . . . . . . . .  1 . . . .  . . .  4 1 . ## [51,] . 1  .  10 .  . . .  1 . . . . . 1 . . . . . . .  . 1 . . .  . . .  . . . ## [52,] . .  .  10 .  1 . .  2 . . . . . . . . . . . . .  1 . . . .  . . .  . 2 . ## [53,] . 1  .   4 .  1 . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [54,] . 1  .   1 .  . . 1  . . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [55,] . 2  .   6 .  2 . 1  1 . . 1 . . 1 . . . . . . 1  . . . . .  . . .  . . . ## [56,] . 2  .  28 .  . 1 .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [57,] . .  .  10 .  . . .  1 . . 1 . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [58,] . .  .  13 .  1 . 1  1 . . . 1 . . . . . . . . 1  . 1 . . .  . . .  . . . ## [59,] . 3  .   5 .  1 1 .  2 . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [60,] . .  .   8 .  . . 1  1 . . . . . . . . . . . . .  2 . 1 . .  . . .  . . . ## [61,] . .  . 108 . 21 . 3  . . . 1 . . 1 . . . . . . 2 12 . . 1 .  . . .  . 1 . ## [62,] . .  .  93 . 21 . 2  1 . . . . . . . . . . . . .  3 . 2 . .  . . .  . 1 . ## [63,] . .  .  41 .  3 . 1  . . . . . . . . . . . . . .  1 . 1 1 .  . . .  . . . ## [64,] . 4  8  42 4  5 . 4  5 . . 3 . . . 1 . . . . 1 .  3 . 1 1 .  . . 2  . . . ## [65,] . 1  . 138 . 11 . 5  . . . 1 . . 1 . . . . . . .  . . . 1 .  . . .  . . . ## [66,] . .  .  77 . 11 . 2  . . . . . . . . . . . . . 1  1 . . . .  . . .  . 1 . ## [67,] . .  .  76 . 10 . 1  . . . . . . 1 . . . . . . .  2 . . . .  . . .  . . . ## [68,] 1 .  .  15 .  1 . 1  . . . . . . . . . . . . . .  . . . . .  . . .  . 1 . ## [69,] . .  1  19 .  2 . 1  1 . . . . . . . . . . . . .  . . . 1 1  . . .  . . . ## [70,] . .  . 104 . 11 . 5  4 . . 1 . . . . . . . . . .  2 . . . .  . . .  1 1 . ## [71,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [72,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [73,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [74,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [75,] . .  .   2 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [76,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . 1 . 1  . . .  . . . ## [77,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [78,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [79,] . .  .   2 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [80,] . .  .   7 .  1 . .  . . . . 1 . . . . . . . . .  . . . 1 .  . . .  . . . ##                                                                                ##  [1,] 1  5 . 1  . 1 . . . 3 3 . 1 3 . 1 1 1 1  2 . 1 2 1 2 1  .  . .  . 1 .  . ##  [2,] .  2 . 1  1 1 5 2 2 2 3 . . 1 2 . . 2 .  . . 3 2 1 . .  .  . .  . . .  1 ##  [3,] 2  1 1 .  1 . . 1 . 1 . . 1 2 1 . 2 . .  1 1 2 2 1 . .  .  . .  . 9 .  1 ##  [4,] 2  2 . .  1 1 . 1 2 6 4 2 . 5 4 . . . .  1 2 3 3 1 2 1  .  . .  . 8 .  1 ##  [5,] .  2 . . 36 . 2 . 1 5 2 . . 2 3 . 2 1 . 54 . 2 2 . . .  .  . .  1 1 .  3 ##  [6,] 1  . 2 .  . . . 2 2 3 1 1 1 4 1 1 . . .  2 1 . 1 . . 1  .  . .  . . 1  . ##  [7,] .  1 3 1  . . 1 1 . 4 1 . . 3 3 1 . . .  1 2 . . . 2 1  .  . .  . 3 .  . ##  [8,] 1 12 2 1  . 1 1 . 2 . 2 1 1 2 4 1 . . 1  1 2 . . 1 1 .  .  . .  . 3 .  . ##  [9,] 2  . 3 1  . . . 1 3 1 1 . 1 3 2 . 1 . .  1 . 1 3 2 1 .  .  . .  . . .  . ## [10,] 1  9 . 1  . 1 1 . 1 6 1 . 1 . . . . . 1  3 1 . . . 1 .  .  . .  . 3 .  . ## [11,] .  . . .  . . . . 1 . . . . . . . . . .  1 . . . . . .  .  . .  . . .  . ## [12,] .  . . .  . . . . 1 1 1 . . 2 . . . . .  2 1 . 1 . . .  .  . .  . . .  . ## [13,] .  . 1 .  . . . . . . 1 . . 1 . . . . .  . . . . . . .  .  . .  . . 1  . ## [14,] .  . . .  . . . . . . . . . 1 . . . . .  1 . . . . . .  .  . .  2 . .  . ## [15,] .  1 . .  . . . . . . . . 1 5 . . . . .  . . 1 . . . .  1  . .  . . .  . ## [16,] .  . 1 .  . . . . . . . . 1 . . . . . .  . . 1 . . . .  1  . .  . . .  . ## [17,] .  . . .  . . . . . 2 1 . . . . . . . .  . . . . 1 . .  .  . .  . . .  2 ## [18,] .  . . .  . . . . . . 3 . . 1 1 . . . .  . . . . . . .  1  . .  1 . 1  . ## [19,] .  1 . .  . . . . . 1 1 . 1 . 1 . . . .  . . 1 . . . .  .  1 1  . . .  . ## [20,] .  . 1 .  . . 1 . . . 1 . . . 1 . . . .  . . 1 . . . .  .  . .  . . .  . ## [21,] .  1 . .  . . . . . 1 . . . . 1 1 . . .  . . . . . . .  .  . .  2 . .  . ## [22,] .  . . .  . . . . . 2 . . . . . . . . .  2 . . . . . .  .  . .  1 . .  . ## [23,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [24,] .  . . .  . . . . . 2 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [25,] .  . . .  . . . 1 . 1 3 . . 1 . . . . .  1 . 1 . 1 . .  1  . .  . . 1  . ## [26,] .  1 . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [27,] .  . . 1  . . . . . 1 . . . 1 . . . . .  . . . . 1 . .  .  . .  1 . .  . ## [28,] .  . . .  . . . . . . . . . 1 . . . . .  . . 1 . 1 . .  .  . .  . . .  . ## [29,] .  . . .  1 . . . 1 . . . . . . . . . .  . . . . . 1 .  1  . .  . . .  . ## [30,] .  1 1 .  . . . . . . 1 . . 1 . . 1 . .  3 . . . . . .  .  . .  1 . .  . ## [31,] .  2 . .  1 . . . . . . . 1 2 . . . . .  1 . . 3 . . .  1  1 . 35 . .  . ## [32,] 2  . . .  . . . . . . . . . 2 1 . . . .  . . . . . . .  .  3 . 14 2 .  . ## [33,] .  . . .  . . . . . . . . . . . . . . .  1 . . 1 . . .  .  2 . 12 . .  . ## [34,] .  . . .  . . . . . 2 . . . 2 1 . . . . 15 1 1 1 . 1 .  .  3 . 30 5 .  . ## [35,] .  . . .  1 . . . . 2 . . . . . . . . .  . . . 1 . . .  .  2 . 20 4 .  . ## [36,] .  . . .  . . . 1 . . . . . . . . 1 . .  . . . 3 . . .  .  4 . 27 . .  2 ## [37,] .  . . .  . . . . . 1 . . . . . . 1 . .  . . 1 4 . 2 .  1  8 . 28 . .  . ## [38,] .  . . 1  . . . . . . . . . 1 . . . . .  . 1 . 2 . . .  1  6 . 10 . .  . ## [39,] .  . . .  . . . . . . . . . 3 1 . . . .  . . . 1 . . .  1  1 . 25 . .  1 ## [40,] 2  . . .  . . . . . . . . 1 1 . . . . .  1 1 . 1 . . .  . 11 . 27 7 .  1 ## [41,] .  . . .  . . . . . 2 2 . . 1 1 1 . . .  2 . . 2 . . .  .  1 1 31 8 .  . ## [42,] .  1 . .  . . . . . 1 2 . . . . . . . .  1 . . 1 . 1 .  1  4 . 22 5 1  1 ## [43,] .  3 . .  . . . . . 4 . . . . 2 . . . .  3 1 1 4 . . .  1  1 2  7 5 .  1 ## [44,] .  1 . .  . . . . . . 1 . . 1 . . . . .  1 . . . . . .  1  2 1  2 . .  2 ## [45,] .  1 . .  . . . 1 . 4 . 1 . 2 1 . . . .  . . . 2 . . .  .  1 2  4 7 . 47 ## [46,] .  1 . .  . . . . 1 4 . . . . 2 . . . .  1 . . . 2 . .  .  2 . 14 1 .  . ## [47,] 2  . . .  . . . . 1 . . . . 2 . . . . .  1 . . . . . .  1  2 . 16 6 1  1 ## [48,] .  2 1 .  . . . 1 . . 1 . . 3 1 . . . .  1 . . . . . .  .  1 2  4 7 1  1 ## [49,] .  . . .  2 . . . . . . . . . 5 . . . .  . . . . . . . 39  5 . 29 6 1  1 ## [50,] .  2 1 .  . . . . . 2 . . . 1 2 . . . .  1 3 . 1 . 1 1  .  1 3  8 1 1  1 ## [51,] .  . . 1  . . . 1 . . 1 . . . . 1 . . .  . . 1 . . 1 .  .  . .  5 . .  . ## [52,] .  . . .  . 1 . . . . 1 . . 2 . . 1 . .  1 . . . 1 1 .  .  . .  3 . .  2 ## [53,] .  . . 1  . . . . . 1 . . . . . . . . .  . . . . . 1 .  .  . .  . . .  . ## [54,] .  . . .  . . . . . . 1 . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [55,] .  . 1 .  . . . . . . 1 . . 2 . . . . .  . . . . . . .  .  . .  . . .  . ## [56,] .  . . .  . . . . 2 2 . . 2 . . . . . .  1 . 1 . . . .  .  . .  . . .  . ## [57,] .  . . .  1 . . . 3 . . . . 1 . . 1 . .  . . . . . 1 .  1  . .  5 1 1  2 ## [58,] .  . . .  . . . . . 1 . . . . . 1 . . .  3 . . . . . .  .  . .  . 1 .  . ## [59,] .  . . .  1 . . . . . . . . 2 . . . . .  1 . . . . . .  .  . .  . . .  1 ## [60,] .  . . .  . . . . 1 1 1 . 1 1 . . . . .  . . 1 . . 1 .  2  . .  . . 1  . ## [61,] .  1 . .  1 . . 1 . 2 . 1 . 4 1 . . . .  . . . . . . .  3  . .  . . .  . ## [62,] .  1 . .  . . . . . . . . . . . 1 . . .  2 . 1 . 1 2 .  .  . .  1 . .  . ## [63,] .  1 . .  . . . . 1 . . . . . . . . . .  1 . 1 . . . .  .  1 .  . . .  . ## [64,] .  . . .  . . . . 1 5 2 . . 4 . . . . .  1 . . . . 2 .  2  . .  . . 1  . ## [65,] 2  1 . .  1 . . . 1 2 3 . . 2 . . . . .  3 1 4 . . . .  .  1 .  1 1 .  . ## [66,] 1  . . .  . . . . 1 2 1 . . 4 . . 1 . .  . . . . . 1 .  .  . .  3 . 1  1 ## [67,] .  . . .  1 . . . . . . . . 1 . . . . .  1 . 2 . . . .  1  . .  . . .  . ## [68,] .  1 . .  . . . . 1 1 . . . . . . . . .  5 . . . . . .  .  . .  1 . .  . ## [69,] .  . . .  . . . . . 2 . . . . . . . . . 13 . . . . 1 .  .  1 .  . . .  . ## [70,] .  . . .  2 . . . . . . . . 1 1 . . . .  2 . . 1 . . .  .  . 1  1 . .  . ## [71,] .  . . .  . . . . . 1 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [72,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [73,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  1 ## [74,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [75,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [76,] .  1 . .  . . . . . 1 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [77,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [78,] .  . . .  . . . . . . 1 . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [79,] .  . . .  . . . . . . . . . . 1 . . . .  . . . . . . .  .  . .  . . .  . ## [80,] .  . . .  . . . . 1 1 1 . . . . . . . .  . . . . . . 1  .  . .  . 1 .  . ##                                                                                ##  [1,] . .  . . . .  . . . . . 1 . . . 1  . . . . . .  .  .   1 .  1  . .  .  . ##  [2,] . 3  . . 2 .  2 . . 1 . 2 . . . .  . . . . . .  .  1   1 .  1  . .  .  . ##  [3,] . 2  . . 2 .  . . . . . 2 . . . .  . . . . 1 .  .  1   1 .  .  . .  1  . ##  [4,] . .  2 . 4 .  . . 1 . . . 1 . . .  . . . 1 . 1  .  .   . .  .  2 .  1  . ##  [5,] 1 1  . . 1 .  . 1 . . . . . . . .  . . . . 1 2  .  .   . .  .  . .  .  1 ##  [6,] . 1  . . 1 .  . . . . . 1 1 . . .  . . . . . .  .  .   1 .  .  . .  .  . ##  [7,] . 2  1 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  1 .  .  . ##  [8,] . .  . 1 . .  1 . . . . . 1 . . .  1 . . . . .  .  1   . .  .  . .  .  . ##  [9,] . .  . . . .  . . . . . 2 2 . 1 .  . . . . 1 .  .  .   1 .  1  1 .  .  . ## [10,] . 2  . . 6 .  2 . . . . 1 . . . .  . . . . . .  .  .   . .  .  . .  4  . ## [11,] . .  . . . .  . . . . . . . . . .  . 1 . . . 1  .  .   1 .  1  . .  .  . ## [12,] 1 .  . . 1 .  . 2 . . . . 2 . . 1  . . . . 1 1  .  .   4 .  .  . .  1  . ## [13,] . .  . . . .  . . . . . . 1 1 . .  . . . . . .  .  .   . .  .  . .  1  . ## [14,] . .  . . . .  . . . . . . . . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [15,] . .  . . 1 .  . . . . . . 1 . . 1  . . . . . .  .  .   . .  .  . .  1  . ## [16,] . .  . 1 1 .  . . . . 1 . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [17,] . .  . . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [18,] . .  . . 1 .  . . . . . . 1 . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [19,] . .  . . . .  . . . . . . . . . .  . . . . . 1  .  .   1 .  .  . .  1  . ## [20,] . .  . . . .  . 1 . . . 2 1 . . .  . . . . . .  .  .   . .  .  . .  1  . ## [21,] 1 .  . . . .  . . . . . . 1 . . .  . . . . . 2 18 30  50 1 10 14 3  3  4 ## [22,] . .  1 . . .  1 . 1 . . . . 1 . .  . . . . . .  5 12  29 2  6 13 2 13  7 ## [23,] . .  . . . .  1 1 . . . . . . . .  . . . . . . 25 51  25 2  5  3 .  5  1 ## [24,] . .  . . . .  1 . . . . . . . . .  . . . . . .  5 22  49 4  9 10 .  .  6 ## [25,] . .  . . 3 .  1 . . . . . 1 . . .  . . . . . . 25 85  98 1  7 16 1 11  5 ## [26,] . .  . . . .  . . . . . . . . . .  . . . . . .  6  3  11 .  1  4 .  .  1 ## [27,] . .  . . 1 .  . . . . . . . 1 . .  . . . . . . 24 54  59 1  1 13 1  2  6 ## [28,] . .  . . . .  . . . . . . . . . .  . . . . . . 40 55  28 1  2 12 .  3  4 ## [29,] . .  . . 1 .  . . . . 1 1 . . . .  . . . . . . 16 35  34 3  8 19 1  5  5 ## [30,] . .  1 . . .  . . . . . . 1 . . 1  . . . 1 . . 11 17  16 .  7 12 . 10  1 ## [31,] 4 .  . . . .  . . . . . 1 . . . 1  . . . . . .  1  .   . .  .  3 .  .  . ## [32,] 4 1  2 . 2 .  . . . . . 1 . . . 1  . . 1 . . .  .  .   . .  .  . .  1  . ## [33,] 2 .  5 . . .  1 . . 1 . . . 1 . 1  . . 1 . . .  .  .   1 .  .  4 .  .  . ## [34,] 7 2 14 1 . .  1 . . . . 1 . . . .  . . 1 . . 2  .  1   . .  .  3 .  1  2 ## [35,] 2 1  . . 1 .  . . . . . 1 . . 2 .  . . . . . 2  .  1   2 .  .  6 .  .  . ## [36,] 4 1 29 . . .  2 1 . . . . 1 . . .  . . . . . 1  1  .   . .  .  7 .  1  . ## [37,] 3 1  1 . 1 .  . . . . . . 1 . . .  . . . 2 . 1  .  1   . .  .  3 .  .  . ## [38,] 3 2  7 . . .  1 . . . . 1 1 . 3 .  . . . . . 1  .  .   1 .  1  4 .  .  . ## [39,] 2 1  5 . 1 .  1 . . . . . 2 . . .  . . . . . 1  .  .   . .  .  5 .  .  . ## [40,] 5 . 25 . 2 .  1 1 . . . 1 1 . 2 2  . . . . 1 .  .  .   . .  . 15 .  .  1 ## [41,] 2 1  . 1 1 1  1 1 1 . . . 1 . . 1  1 . 1 . . 2  .  .   . .  .  2 .  5  . ## [42,] 3 1 14 . 2 .  . 2 . . 1 1 2 1 1 1  1 . . 1 . 1  .  .   1 .  .  . .  1  . ## [43,] 1 2 27 1 1 .  2 . . 3 . 3 1 . . .  1 1 . . 1 2  .  .   1 .  .  1 .  1  . ## [44,] 1 .  3 . 1 .  1 1 . . . . 1 1 . 1  . 1 . 1 1 .  .  .   . .  .  1 .  .  . ## [45,] . 1 13 . 1 1  . 1 1 1 . 1 1 . . 1  . 1 2 1 2 2  .  .   . .  .  . .  .  . ## [46,] 2 2 17 1 2 .  . 1 . 3 . . . 1 . 1  . 2 1 . . 1  .  .   . .  .  . .  .  . ## [47,] 8 1  7 . 4 .  1 . 1 3 . . 1 . 1 1  . . . . . .  .  .   . .  1  . .  1  . ## [48,] 4 1  3 1 1 .  1 1 . . 1 7 2 1 4 .  . . 1 1 . 1  .  .   1 .  .  . .  .  . ## [49,] 5 1 16 1 2 1 17 1 . . 1 . . 1 1 1  . . . 1 . 2  .  .   . .  .  . .  1  . ## [50,] 2 1 12 . 4 1  . . . . 2 1 2 . 1 . 13 . . . 1 .  .  .   . .  2  . .  .  . ## [51,] . .  3 . 2 .  . 1 . . . . . . . .  . . . . . .  2 20  41 . 13 11 .  2  6 ## [52,] . .  1 . 1 .  . . . . . . 1 . . .  . . 1 . . 1  2  6   4 .  7 21 .  2  5 ## [53,] . .  . . . .  1 . . . . . . . . .  . . . . . .  .  1   3 .  5  2 .  2  1 ## [54,] . .  . . . .  . . . . . . . . . .  . . . . . .  4  .   3 .  1  5 .  .  1 ## [55,] . .  . . 2 .  1 . . . . . . . . .  . . . . . .  3 10  14 .  4 21 .  2  6 ## [56,] . .  . . . .  . . . . . . . . . .  . . 1 . . 2  .  4  17 1  3 13 .  1  4 ## [57,] . 1  . . 3 .  1 . . . . . 1 . . .  . . . . . 1  1  8   7 .  1 16 .  1  3 ## [58,] . .  . . 1 .  . . . . . . 1 . . .  . . . . . 1  1  6   6 .  1  9 .  1  2 ## [59,] . .  . . 3 .  2 . . . . . . . . 2  . . . . . .  2  .   9 .  2 16 .  2  4 ## [60,] . .  . . 1 .  . . . . . . 1 . . .  . . . . 1 1  .  .   6 .  . 17 .  9  5 ## [61,] . .  . 2 . .  1 1 . . . . . 1 . 1  1 . . 1 1 1  .  .  76 .  .  2 .  2  1 ## [62,] . .  1 . 2 .  . . . . . . . . . .  . . . . . .  2  .  20 .  .  8 .  2  3 ## [63,] . .  . . 3 .  . . . . . 1 1 . . 1  . . . . . .  .  1  24 .  3  6 .  .  2 ## [64,] . .  . . . .  1 1 . . . . 1 . . .  . . . . . .  2 10  79 2  1  9 1  1  5 ## [65,] 1 .  1 1 1 .  1 2 . . . . . . . 1  . . 1 . . 1  1  .  53 2  2 11 .  1 14 ## [66,] 1 .  1 . 3 .  . 2 . . . . . 1 . .  . . . . . 4  9 41  53 1  4 14 1  6 11 ## [67,] . .  . . 2 .  . . . . . . 2 1 . .  . . . . 1 .  1 11  87 1  6 10 .  1  3 ## [68,] . .  . . . .  1 . . . . . . . . .  . . . . . 1 23 32  76 1  1 10 .  3  4 ## [69,] . .  . . 4 .  . . . . . . . . . .  . . . . . .  4 17  42 .  .  6 1  2  8 ## [70,] 1 .  . . 2 .  . . . 1 . 2 . . . .  . . . . . 2  .  . 114 .  .  7 1  4  4 ## [71,] . .  8 . . .  . . . . . . . . . .  . . . . . .  .  3   3 .  .  . .  .  . ## [72,] . .  5 . . .  . . . . . . . . . .  . . . . . .  1  .   1 .  .  . .  .  . ## [73,] . .  4 . . .  . . . . . . . . . 1  . . . . . .  .  .   1 .  .  . .  .  . ## [74,] . . 10 . . .  . . . . . . . . . .  . . . 1 . .  .  .   . .  .  . .  .  . ## [75,] . . 11 . . .  . . . . . . . . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [76,] . . 30 . . .  . . . . . . . . . .  . . . . . .  1  .   . .  .  . .  .  . ## [77,] . .  8 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [78,] . .  5 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [79,] . .  9 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [80,] . .  2 . . .  . . . . . . . . . .  . . . . . .  2  7  22 .  . 14 .  6  2 ##                                                                                ##  [1,]  1  . . .  1 . . . .  1 .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ##  [2,]  1  . . .  . . . . .  . .  1 .  . .  1 1 1 . . .  .  . . . .   .  . .  . ##  [3,]  .  . . .  1 . . 1 .  . .  . .  . .  . . . . . .  .  . . 1 .   .  . .  . ##  [4,]  .  . . .  2 . . . .  . .  . 1  . .  . . . . . .  .  . . . .   .  1 .  . ##  [5,]  1  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . 1  . ##  [6,]  2  1 . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ##  [7,]  .  1 . .  . . . . .  . .  . .  1 .  . . . . . .  .  . . . 1   .  . .  1 ##  [8,]  1  . . .  . . . . .  . .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ##  [9,]  1  . . .  . . . . .  . .  . 1  . .  . . . . . .  .  . . . .   .  . .  . ## [10,]  1  1 . .  . . . . .  . .  . .  . .  1 . . . . .  .  . . . .   .  . .  . ## [11,]  1  . . .  . . . . .  . .  . .  . .  . . . . . .  3  . . . .   4  . .  1 ## [12,]  .  1 . .  . . . 1 .  . .  . 1  . .  . . . . . .  8  . . 1 .  10  4 .  4 ## [13,]  1  . . .  . . . . 1  . .  . .  . .  . . . . . .  2  . . . .   4  4 .  3 ## [14,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  2  . . . .   4  1 .  . ## [15,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . . .   8  . .  4 ## [16,]  .  1 . .  . . . . .  . .  . .  . .  . . . . . .  9  . . 4 .  23  8 .  8 ## [17,]  1  1 . .  . . . 1 .  . .  . .  . .  . . . . . .  .  . . 1 .   7  1 .  1 ## [18,]  2  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . 1 .   .  5 .  2 ## [19,]  .  . 1 .  . . . . .  . .  . .  . .  . . . . . .  1  . . . .   4  . .  2 ## [20,]  2  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . 1 .   6  1 .  4 ## [21,] 15  1 . .  2 1 . 1 1  2 1  3 5 12 .  2 . . . 1 5  .  . . . .   .  1 .  . ## [22,]  9  2 . 1 14 1 1 3 1 27 1  4 1  6 .  . 4 . 1 . 3 13  . . 4 .  18  5 1  8 ## [23,]  1  6 1 . 10 1 . 1 .  . .  2 .  2 1  . . . 1 . .  2  . . 1 .   1  . .  1 ## [24,]  5  . . 4  8 . . 2 1  1 2  1 .  1 1  1 4 . . . .  1  . . 1 .   2  . .  1 ## [25,]  7 36 2 1 11 1 1 . 1  1 1  1 1  6 2 14 4 1 . 1 3  .  . . . .   .  . 2  . ## [26,]  3  1 1 1  4 1 . 1 1  1 .  . 1  . 2  1 1 1 . 1 .  1  . . . .   3  . .  . ## [27,]  4  5 4 7  6 1 1 . .  . 1  . .  . 1  2 3 3 . 1 1  .  . . . .   .  . .  . ## [28,]  4  . 1 1  7 1 2 1 .  . .  2 .  . 3  . . 2 2 . 5  .  . . . .   1  . 1  . ## [29,] 11  3 1 1 22 . . 1 2  1 2 15 2  5 .  1 2 1 . . .  7  . . 1 .   7  . 1  4 ## [30,]  7  5 . 2 37 . 1 3 1  1 1  2 1  2 1  2 . . 5 . 4  6  . . 2 .   7  1 .  1 ## [31,]  .  1 . .  3 . . . .  . .  . .  . .  . . . . . .  .  . . . .   2  . .  . ## [32,]  .  . . .  4 . . . .  . .  . .  . .  . . . . . .  1  . . . .   4  . .  1 ## [33,]  1  . . .  9 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [34,]  .  . . .  6 . . 1 .  . .  . .  . .  . . . . . .  2  . . . .   .  . .  . ## [35,]  .  . . .  1 . . . .  . .  . .  . .  . . . . . 1  .  . . 1 .   .  . .  . ## [36,]  .  . . .  3 . . . .  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [37,]  1  1 . 1 14 . . . .  . .  . .  . .  . . . . . 1  1  . . . .   .  . .  . ## [38,]  .  1 . .  2 . . . .  1 .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ## [39,]  .  1 . .  1 . . . .  . .  . .  . .  . . . . . 2  .  . . . .   .  . .  . ## [40,]  4  . . .  4 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [41,]  1  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  1 . . .   .  . .  . ## [42,]  1  1 . .  3 . . . .  . .  1 .  . .  . . . . . .  .  . . . .   4  1 .  . ## [43,]  .  . . .  . . . 1 .  . .  . .  1 .  . . . . . .  .  . . . .   .  . .  . ## [44,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [45,]  1  2 . .  . . . . .  . .  . .  . .  . . . . . .  1  . . . .   1  . .  . ## [46,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  3  . . . .   2  . .  1 ## [47,]  .  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [48,]  .  . . .  . . . 1 .  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [49,]  .  . . 1  1 . . . .  . .  . .  . .  . . . . . 1  1  . . . .   .  . .  . ## [50,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [51,]  8  2 1 4  5 . . . .  1 .  4 .  3 .  3 2 . 1 1 . 12  . . 1 .   8  . .  4 ## [52,]  8  4 . . 12 . . . .  1 1  5 .  . .  2 2 . . . 2  4  . . . .   3  2 .  5 ## [53,]  7  . . 1  4 . . . .  1 1  2 .  . 1  . . . . . .  2  . . . .   5  . .  . ## [54,]  3  1 . .  2 . . . .  . .  . .  . .  1 . . . . 1  1  . . . .   2  . 1  . ## [55,] 10  2 . 1 16 2 1 2 .  3 1  . 1  . .  3 4 2 1 . 1  5  . . . .   3  . .  3 ## [56,] 15  3 . . 10 . . 2 .  6 2  5 .  . .  1 2 . 1 . 3  5  . . 4 .   7  1 .  3 ## [57,] 18  6 . 3  6 1 . 5 1  1 1  2 .  . .  1 . 1 . . 1  7  . . . .   6  1 1  6 ## [58,] 19  4 . .  2 . . 1 .  2 1  3 1  . .  . 2 2 . . 3 14  . . . .   5  2 1  3 ## [59,]  4  2 . . 12 2 . 2 .  2 .  2 3  . .  1 1 . 1 . .  5  . . . .   9  . 2  6 ## [60,] 17  5 . 2 16 1 1 . .  4 .  3 1  . .  1 . . 2 . 2 11  . . . .   4  . 2  2 ## [61,]  5  1 . 1  8 . . 1 .  2 .  . 2  3 4  3 . . . . . 75 16 . 6 3 102 25 2 11 ## [62,]  3  . . 1 13 . . . .  2 .  . 1 10 1  1 5 . . . 4 52  1 5 6 3  78 39 2 26 ## [63,]  1  . . . 21 . . 1 1  2 .  . 1  1 .  . 1 1 2 . . 11  2 2 5 1  23  5 .  5 ## [64,]  5  4 . 2  9 . . . .  2 .  . .  2 7  2 . 1 . . 2 19  4 4 4 3  25  2 1  2 ## [65,]  .  2 . . 20 . . . 2  . .  1 3  3 7  2 6 . 1 . 6 54  8 2 6 .  69 16 1 31 ## [66,]  3  5 . 2 10 2 . . 1  . .  2 1  4 .  3 2 1 . . 2 23  5 3 5 1  24  6 1 21 ## [67,]  6 10 . 2 23 1 . 1 .  3 .  . 1  4 2  3 7 . . . 5 45  8 6 6 3  43 11 6 21 ## [68,]  2  6 . 1  5 . . . 1  1 1  . 1  1 1  1 2 1 . . 1 10  4 4 5 .   8  3 3  2 ## [69,]  .  4 . . 28 . . . .  . .  . 1  3 2  4 2 . . . . 23  7 2 3 1  10  4 5  3 ## [70,]  3  2 . . 13 . . . .  2 .  . 1  6 .  3 . . . . . 37  . 1 5 2  50  9 1 10 ## [71,]  1  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   1  . .  . ## [72,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [73,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [74,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [75,]  .  . . 1  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [76,]  .  2 . .  . . . . 1  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [77,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [78,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [79,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [80,]  3  3 . 1 10 . . . .  . .  3 1  3 1  2 1 1 . . 4  5  . 1 1 .   5  . .  1 ##                                                                               ##  [1,]  .   . .  . . .  .  1  . .  .  .  . .  .  2 .  .  2  .  .  .  .  . .  . ##  [2,]  .   . .  . . .  .  1  . .  .  .  . 1  .  . .  .  .  .  .  .  1  . .  . ##  [3,]  .   . .  . . .  1  1  . .  1  .  . .  .  1 .  .  1  2  .  2  .  1 .  1 ##  [4,]  .   . .  . . .  .  1  3 .  .  .  . .  .  2 .  3  .  .  1  1  .  1 .  . ##  [5,]  .   . .  1 . .  1  2  . .  1  .  1 .  .  3 .  2  .  3  1  .  .  . .  . ##  [6,]  .   1 .  . . .  .  .  . .  1  .  1 .  .  2 .  1  .  2  .  1  1  . .  . ##  [7,]  .   . .  . . .  .  .  . .  .  .  . .  .  2 .  .  2  .  .  .  1  . .  . ##  [8,]  .   . .  . . .  .  1  . .  .  .  . .  .  1 .  .  1  .  1  .  1  . .  . ##  [9,]  .   . .  . . .  .  .  1 .  .  .  . .  1  . .  .  .  .  .  .  1  . .  . ## [10,]  .   . .  . . .  .  2  . .  .  .  1 .  .  3 1  .  .  .  1  .  2  . .  . ## [11,]  2   . .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  .  . .  . ## [12,] 10   . .  . 2 .  .  1  . 1  .  .  1 .  .  . .  .  .  .  .  1  1  . .  . ## [13,]  6   . .  . . .  .  .  1 .  .  .  1 .  .  1 .  .  .  .  2  1  .  . .  . ## [14,]  1   . .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  .  . .  . ## [15,]  5   . .  . 1 .  .  .  2 .  1  .  . .  .  . .  .  1  2  1  1  2  . .  . ## [16,] 16   . .  . . .  3  2  . .  .  .  1 .  .  2 .  .  .  .  .  .  5  . 1  . ## [17,]  5   . .  . 1 .  .  .  . .  .  .  . .  .  4 .  .  .  .  .  .  .  . .  . ## [18,] 11   . .  . 1 .  1  .  . 2  .  .  . .  .  . .  .  .  .  1  .  .  . .  . ## [19,]  5   1 .  . . .  .  .  . 1  .  .  . .  .  . .  1  .  .  1  .  .  . .  . ## [20,]  8   1 .  . . .  .  .  . 1  1  .  . .  .  1 .  .  1  .  .  .  .  . .  . ## [21,]  2  13 4  . . .  2  .  . .  .  .  1 4  .  . .  3  5  6  1  .  4  3 6  1 ## [22,] 12  28 .  . 2 .  3  .  . .  1  .  3 1  7  . .  6  7  5  .  1 15  . 4  5 ## [23,]  1  15 .  1 . .  1  1  . .  .  .  . 1  1  . .  1  6  1  .  1  8  . .  . ## [24,]  5  11 .  . . .  6  .  1 .  .  .  3 .  1  . .  4  5  5  1  .  5  . 2  . ## [25,]  1  13 .  . . .  5  2  2 2  .  .  1 1  1  . .  8  4  3  2  .  4  3 .  . ## [26,]  .   7 1  . . .  1  .  . .  .  .  1 .  .  . .  3  3  2  .  .  2  . .  2 ## [27,]  3  37 .  . . .  3  .  1 .  .  .  1 5  2  . .  5  1  1  .  .  8  1 1  4 ## [28,]  .   5 .  . . .  1  1  1 .  .  .  . 1  .  . .  .  2  1  1  .  2  1 .  1 ## [29,]  5  20 2  1 . .  4  2  1 1  .  .  2 .  2  3 .  7 10  6  2  2 11  1 3  2 ## [30,]  3  18 3  . . .  2  1  . .  .  .  3 2  1  3 . 13 12  4  .  . 18  1 3  7 ## [31,]  .   1 .  . . .  1  3  . .  .  .  1 .  .  1 .  .  1  .  2  1  3  . .  . ## [32,]  2   . .  . . .  2  .  . .  .  1  . .  .  4 .  .  .  1  .  .  .  1 .  . ## [33,]  .   . .  . . .  .  1  1 .  .  .  . .  .  5 .  .  .  2  1  1  .  . .  . ## [34,]  1   . .  . . .  1  .  1 .  .  .  4 .  .  1 .  .  .  .  1  .  .  . .  . ## [35,]  .   . .  . . .  2  3  1 .  .  .  1 .  1  1 .  .  .  1  .  .  .  . .  . ## [36,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  1  .  .  1  .  .  . .  . ## [37,]  .   1 .  . . .  1  .  1 .  .  .  4 .  .  1 .  .  .  1  .  .  1  . 1  . ## [38,]  .   1 .  . . .  2  1  1 .  .  .  1 .  .  . .  .  .  1  1  .  .  . .  . ## [39,]  1   . .  . . .  .  .  1 .  .  .  . .  .  . .  .  .  .  .  1  1  . .  . ## [40,]  .   . .  1 . .  1  3  1 .  .  .  1 .  .  . .  .  .  .  2  1  1  . .  . ## [41,]  .   . .  . . .  2  1  . .  .  1  . .  .  . .  .  .  3  .  1  .  1 .  . ## [42,]  .   . .  . 1 .  .  1  . .  1  .  . .  .  . .  .  .  1  1  1  1  . .  . ## [43,]  .   . .  1 . .  .  .  . .  .  .  1 .  .  . .  .  .  .  1  .  3  1 .  . ## [44,]  .   . .  . . .  .  .  . .  .  .  . .  .  2 .  .  .  .  .  .  .  . .  . ## [45,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  2  1  .  1  .  . .  . ## [46,]  3   . .  . . .  .  .  . .  .  .  . .  .  1 .  .  .  .  1  1  .  . .  . ## [47,]  .   . .  . . .  .  2  . .  .  .  1 .  .  . .  .  .  .  2  .  .  1 .  . ## [48,]  .   1 .  . . .  .  1  . .  1  .  1 .  .  1 .  .  .  1  2  .  .  . .  . ## [49,]  .   . .  . . .  1  1  . .  .  .  . .  .  3 .  .  .  2  1  1  2  . .  . ## [50,]  .   . .  . . .  .  1  . .  .  .  2 .  .  . .  .  .  1  1  .  1  . .  . ## [51,]  8  16 .  . . .  4  3  1 .  .  .  9 2  2  3 . 15  7  8  2  . 21  2 2  5 ## [52,]  4  32 .  . . .  1  3  1 .  .  .  3 .  1  1 . 17 12  8  2  1 25  3 1  3 ## [53,]  .   7 .  . . .  2  .  . .  .  .  1 1  3  . .  8  7  6  1  .  6 16 1  4 ## [54,]  .   9 .  . . .  .  1  1 .  .  .  . 1  .  . . 11  6  2  .  . 10  . 1  1 ## [55,]  7  11 .  . . .  1  2  . .  .  .  4 2  .  . . 18 32  9 50  3 26  1 3 11 ## [56,]  7  17 .  . . .  5  2  . .  1  .  2 3  1  1 . 13 33  9  1  3 26 11 4  9 ## [57,] 13  33 .  2 1 .  .  .  . .  .  .  3 .  1  . . 36 12 10  1  1 16  3 5  2 ## [58,]  6  10 .  1 2 .  .  1  2 2  .  .  2 1  .  . . 17 19  8  1 27 15  5 5  5 ## [59,]  6  15 1  . . .  1  2  3 .  .  .  . 1  3  1 . 12 18  5  3  1 11  4 3  7 ## [60,]  4  25 .  . . .  1  .  . .  .  .  6 3  2  1 . 27 29 10  1  1 22  6 6 10 ## [61,] 50  61 1  . 7 2  9  1  4 2  .  2  5 6  4  3 . 12  6  1  5  . 10  8 1  . ## [62,] 53  31 8  1 9 5  4  .  3 .  .  .  1 1  .  1 4  7  7  2  .  .  5  1 1 12 ## [63,] 10  25 .  1 1 .  5  1  . 3  .  .  5 .  2  . 1  7  1  1  .  .  5  1 .  2 ## [64,]  9  14 3 33 . .  7  2  1 2  1  .  1 2  .  2 .  4  3  6  .  . 16  . 3  1 ## [65,] 68  58 1  . 6 3  2  1  . 3  1  . 22 5  1 64 1  8 11  6  2  .  2  . .  3 ## [66,] 36 112 2  . 1 3  5  .  1 1  .  . 10 4 39  2 . 10  7  4  5  .  3  . 1  4 ## [67,] 49  37 3  . 4 . 12  1 38 2 21  .  9 8  1  3 .  4  9  4  4  2 16  1 .  4 ## [68,]  3  18 6  . 1 .  7  1  . .  .  1  1 2  3  1 1  2  4  2  .  2  3  1 .  . ## [69,]  9  29 1  1 . . 10  3  . 1  1 32  3 4  5  1 .  6  1  2  1  1  4  1 .  . ## [70,] 26 125 .  3 5 1 18 43  1 8  .  .  3 5  1  1 .  6  4  7  3  2  5  2 1  1 ## [71,]  .   5 .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  3  . .  . ## [72,]  .   1 .  . . .  .  .  . .  .  .  . 1  .  . .  .  .  .  .  .  4  . .  . ## [73,]  .   . 1  . . .  .  .  1 .  .  .  . .  .  . .  .  .  1  .  .  2  . .  . ## [74,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  1  .  .  6  . .  . ## [75,]  .   5 .  . . .  1  .  . .  .  .  . .  .  . .  .  1  1  .  .  3  . .  . ## [76,]  .   1 .  . . .  .  .  2 .  .  .  . .  .  . .  .  .  .  .  . 17  . .  . ## [77,]  .   3 .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  3  . .  . ## [78,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  6  . .  . ## [79,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  4  . .  . ## [80,]  4  16 5  . . .  4  3  2 .  .  .  4 .  1  . .  7  5  1  1  1  3  . 2  1 ##                                                                               ##  [1,]  . .  2  . .  3 1 . . . .  . . . . . 1 .  .  .  .  .  .  .  . . .  .  . ##  [2,]  . .  .  . .  . . . . . .  . . . . . 1 .  .  .  .  .  .  .  . . .  .  . ##  [3,]  . .  1  1 .  3 . . . . .  4 . . 1 . . .  1  .  1  .  .  .  . . .  .  . ##  [4,]  . .  2  . .  3 . . 1 . .  2 1 . . 1 . .  .  1  .  1  .  .  . . .  .  . ##  [5,]  1 .  1  . .  1 . . . . .  1 . . . 1 . .  .  1  .  1  1  .  . . .  .  . ##  [6,]  . .  .  . .  3 . . . . .  2 . . . . . .  .  .  .  1  .  .  . . .  .  . ##  [7,]  . .  .  . .  3 . . . . .  . . . . . . .  1  .  .  .  .  .  . . .  .  . ##  [8,]  1 .  1  . .  1 . . . . .  1 . . . . . .  .  .  .  1  1  .  . . .  .  . ##  [9,]  . .  1  . .  . . . . . .  1 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [10,]  . .  .  . .  3 . . . . .  3 . . . . . .  .  .  .  1  .  .  . . .  .  . ## [11,]  . .  .  . .  . . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [12,]  1 .  1  . 1  1 . . 2 . .  2 . . . . . .  .  1  1  1  .  .  . . .  .  . ## [13,]  . .  .  . .  2 . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [14,]  . .  .  . .  . . . . . .  . . . . . . 1  .  1  .  .  .  .  . . .  .  . ## [15,]  . .  .  . .  1 . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [16,]  . .  .  1 .  . . . . . .  1 . . . 1 . .  .  .  .  .  .  .  . . .  .  . ## [17,]  . .  .  . .  . . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [18,]  . .  .  . .  . . . . . .  1 . . 1 . . .  .  .  .  .  1  .  . . .  .  . ## [19,]  . .  .  . .  2 . . . . .  . . . . . . .  .  1  .  .  .  .  . . .  .  . ## [20,]  . .  .  . .  3 . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [21,]  1 .  2  6 .  6 . . . 1 .  6 1 . . . 2 1  .  .  .  4  .  .  . 1 .  .  . ## [22,]  1 . 10  3 1  4 2 . . 1 1 15 1 2 . 1 1 .  .  1  .  5  .  .  . . .  .  . ## [23,]  . .  4  4 .  . . . . . .  2 . 4 . . 1 .  .  1  .  3  .  .  . . .  .  . ## [24,]  . .  2  6 .  . . . . . .  4 . . . . 1 .  .  .  .  5  .  .  . . .  .  . ## [25,]  . .  2  1 1  1 . 1 2 . .  7 . . . . 1 .  .  .  1 12  1  .  . . .  .  . ## [26,]  . .  2  2 .  1 . . . . .  3 . . . . 1 .  .  .  .  1  .  .  . . .  .  . ## [27,]  . .  1  4 .  . . . . . 1  6 . 3 . . 1 .  .  1  . 15  1  .  . . .  .  . ## [28,]  . .  6  4 .  1 . 2 . 1 .  . . . . . . 1  .  .  .  2  .  .  . . .  .  . ## [29,]  . 1  5  9 .  3 1 . . 1 3  4 . 1 2 . . .  .  .  .  3  .  .  . . .  .  . ## [30,]  1 .  6  8 .  6 . 2 . . . 20 . 3 1 1 2 .  .  1  .  1  .  .  . 2 1  .  . ## [31,]  6 .  6  8 .  8 . . . . .  . . . . 2 . .  .  .  .  .  2  .  . . .  .  . ## [32,]  2 .  .  . .  2 . . . . .  1 . 1 . . 2 .  .  .  .  1  1  .  . . .  .  . ## [33,]  2 .  .  3 .  3 . . . . .  1 . . . . 1 .  1  .  .  .  .  .  . . .  .  . ## [34,]  1 .  .  1 .  5 . . . . .  . 1 . . 1 . .  .  .  .  .  .  .  . . .  .  . ## [35,]  . .  .  2 .  2 . . . . .  . 1 . . . . .  .  .  .  .  .  .  . . .  .  . ## [36,]  1 .  .  5 .  1 . . . . .  . . . . 1 . .  .  .  .  .  .  .  . 1 .  .  . ## [37,]  2 .  1  6 1  5 . . . . .  1 . . . 3 . .  1  .  .  2  1  .  . . .  .  . ## [38,]  1 .  1  6 .  1 . . . . .  . . . . 1 . .  .  .  .  .  1  .  . . .  .  . ## [39,]  2 .  .  1 1  3 . . . . .  . . . . 1 . .  .  .  .  1  1  .  . . .  .  . ## [40,]  6 .  .  6 .  2 . . . . .  . . . . 2 . .  3  .  .  .  .  .  . . .  .  . ## [41,]  2 .  1  3 .  7 . . . . .  1 . . . . . .  .  .  .  .  .  .  . . .  .  . ## [42,]  . .  .  . .  4 . . . . .  2 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [43,]  . .  .  . .  2 . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [44,]  . .  .  . .  2 . . . . .  . . . . . . .  .  1  .  1  .  .  . . .  .  . ## [45,]  . .  1  . .  5 1 . . . .  5 . . . . . .  .  .  .  1  .  .  . . .  .  . ## [46,]  . .  1  . .  1 . . . . .  1 . . . . 1 .  .  .  .  .  .  .  . . .  .  . ## [47,]  1 .  .  . .  1 . . . . .  . . . . 1 1 .  .  .  .  1  .  .  . . .  .  . ## [48,]  . .  1  . .  4 . . . . .  . . . . 1 . .  .  .  .  2  .  .  . . .  .  . ## [49,]  . .  .  . .  1 . . . . .  2 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [50,]  . .  .  . .  2 1 . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [51,]  . 1 17 12 .  5 . 3 . 2 1  9 2 6 . 1 2 1  .  .  .  5  2  .  . . .  .  . ## [52,]  5 1 13 12 2 10 2 3 5 4 2 20 3 4 5 6 2 . 26  .  .  3  .  .  . . .  .  . ## [53,]  1 3  1  2 1  1 2 . 1 2 .  9 . 1 . . . 1  .  1  .  .  .  .  . . .  .  . ## [54,]  2 .  2  4 .  4 1 1 . 1 1  3 . . . 1 2 .  .  1  .  .  .  .  . . .  .  . ## [55,] 14 .  9 35 3 17 1 2 2 1 .  6 6 4 4 1 2 1  2  2  .  1  .  .  . . .  .  . ## [56,]  4 1 12 16 4  8 . 1 4 3 3  9 . 3 . 2 1 6  2 25  .  1  .  .  . . .  .  . ## [57,] 18 1 14 24 1 33 3 6 3 . 1 91 . . 5 7 . 4  1  .  .  .  .  .  . . .  .  . ## [58,]  9 .  8  9 2  8 1 1 1 1 2 11 3 4 2 2 6 1  .  1  .  1  .  .  . . .  .  . ## [59,]  5 1  7  9 1 14 1 5 . . 3 18 . 2 1 6 3 .  .  .  .  1  .  .  . . .  .  . ## [60,] 11 1 13 30 1 19 2 6 2 . 5 18 3 8 4 3 6 2  1  .  .  2  1  .  . . .  .  . ## [61,]  . .  5  8 .  4 . 6 . . . 18 . . . 2 1 .  .  .  .  6  1  .  . . .  .  . ## [62,]  . .  4  8 .  7 . . . . 1  2 . . . . . 1  .  .  .  7  .  .  . . .  .  . ## [63,]  . .  5  3 .  4 . 3 1 . .  9 1 . . 1 . 1  .  .  .  2  .  1  . . .  .  . ## [64,]  . .  3  3 .  3 . 1 . 1 . 11 1 . . . 1 .  1  .  .  6  .  .  . . .  .  . ## [65,]  . . 11 13 .  2 . 1 . . 1 12 . 1 . 2 2 .  1  .  . 24  1  .  . . .  .  . ## [66,]  . .  9  8 1  2 2 3 . . 1 11 1 1 . . 1 .  1  .  . 16  2  .  . 2 .  .  . ## [67,]  1 .  9  7 .  . 1 3 . . .  7 . . . . . 1  1  .  . 28  1  .  . . .  .  . ## [68,]  . .  4  5 .  1 . . . . .  5 1 . . . 1 1  .  .  .  3  .  .  . . .  .  . ## [69,]  1 .  5  8 .  6 1 1 1 . 1  4 1 . . . . .  1  1  .  6  1  .  . . .  .  . ## [70,]  . .  2  3 2  4 . 4 1 . 4 25 1 1 . . 1 2  .  .  .  3  1  .  1 . .  .  . ## [71,]  . .  .  . .  . . . . . .  1 . . . . . .  .  . 43 18  4 14 11 1 8  6 14 ## [72,]  . .  .  . .  . . . . . .  2 . . . . . .  .  . 41  8  4 11  3 5 3  5  5 ## [73,]  . .  .  . .  . . . . . .  . . . . . . .  .  . 36 12  2 14 13 3 2  9  8 ## [74,]  . .  .  1 .  . . . . . .  3 . . . . . .  .  . 55 18  2 18  8 3 2 10 11 ## [75,]  . .  .  . .  1 . . . . .  . . 1 . . . .  .  . 58 18  2 23  8 2 3  7 15 ## [76,]  . .  .  . .  1 . . . . .  2 . . . . . .  .  . 54 28 15 62 29 7 9 23  6 ## [77,]  . .  .  . .  . . . . . .  3 . . . . . .  .  . 66 11  2  9  3 3 3 12  4 ## [78,]  . .  .  1 .  . . . . . .  . . 1 . 1 . .  .  . 34 13  1 14  6 1 3  6  3 ## [79,]  . .  .  . .  . . . . . .  4 . 1 . . . .  .  . 30 16  3  6  5 1 4 11  5 ## [80,]  . .  1  4 .  1 . 1 . . 1  7 . 1 . . . 1  1  .  6  9  2  .  2 2 2  1  2 ##                                                                               ##  [1,]  .  .  . .  1  . .  .  1 . . .  . . . . .  .  1  .  .  .  .  . . . .  . ##  [2,]  .  1  . 1  .  . .  1  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  1 ##  [3,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [4,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  .  1 . . .  . ##  [5,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [6,]  .  .  . .  1  . .  .  . . 1 .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [7,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  1  . . . .  . ##  [8,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [9,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [10,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  .  . . . .  . ## [11,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [12,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  . 29  .  .  . . . .  . ## [13,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 1 . .  . ## [14,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [15,]  .  .  . .  1  . 1  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [16,]  .  .  . .  1  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [17,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [18,]  1  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [19,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [20,]  .  .  . .  .  . 1  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [21,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  1  .  . . . 1  . ## [22,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [23,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [24,]  .  .  . .  .  3 .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [25,]  .  .  . .  .  . .  .  5 . . .  . . . . .  .  .  .  1  1  .  . . . .  . ## [26,]  .  1  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [27,]  .  .  . .  .  . .  .  2 . . .  . . . . 1  .  .  .  .  .  .  . 1 . .  . ## [28,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [29,]  .  1  . 1  .  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [30,]  .  .  . .  .  . .  .  2 . . .  . 1 . . 1  .  .  .  1  .  .  . . . .  . ## [31,]  .  .  . 1  .  . .  .  . . . 1  . . . . .  .  .  .  . 27  2 35 5 7 5 14 ## [32,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  2  5  . 3 . 3  1 ## [33,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  1  3 15 9 1 1  4 ## [34,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  . 10  4  3 2 1 .  9 ## [35,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  8 10 29 6 . 3  7 ## [36,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  5  8 11 3 1 1 10 ## [37,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  2 10 12 22 6 5 1 10 ## [38,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  7 10 15 8 4 2  2 ## [39,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  4  3 18 2 1 1  4 ## [40,]  .  .  . .  .  . 1  .  2 . . .  . . . . .  .  .  .  1 11 13 18 5 1 1  7 ## [41,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  1  3  1 10 4 . 3  6 ## [42,]  .  .  . 1  .  . .  .  . . . .  . . . . 1  .  .  .  .  .  8  . 1 . . 13 ## [43,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  2  . . . .  . ## [44,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  1  3 . . .  . ## [45,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [46,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 2 . .  . ## [47,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  6  .  4 9 . .  6 ## [48,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  3  1 . . .  . ## [49,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  1  2  3  3 3 . .  5 ## [50,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  2  . . . .  3 ## [51,]  .  .  . 1  1  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [52,]  .  .  . 1  .  . 1  .  2 . . .  . . . . .  .  .  .  1  1  .  . . . .  . ## [53,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [54,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 1 . .  . ## [55,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [56,]  .  .  . .  .  . .  .  2 . . .  . . . . 1  .  .  .  .  .  .  . . . .  . ## [57,]  .  1  . .  1  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  1 . . .  . ## [58,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [59,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  1  . . . .  1 ## [60,]  .  2  . 2  .  . .  .  2 . . .  . . . . .  .  .  .  2  .  .  1 . . .  . ## [61,]  .  1  . .  .  . 1  .  1 . . .  . . . . .  .  .  .  1  .  .  . . . .  . ## [62,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [63,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  1 . . .  1 ## [64,]  .  .  . 2  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [65,]  .  1  . .  2  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [66,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [67,]  .  .  . 1  1  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [68,]  .  .  . .  .  . .  .  1 . . .  1 . . . .  .  .  .  .  .  .  . . . .  . ## [69,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [70,]  .  .  . 1  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  1 1 . .  . ## [71,]  5  8  1 2  3  6 3  4  2 3 4 4  3 5 4 . 5  2  1  .  .  .  .  . . . .  . ## [72,]  3  2  3 5  .  4 3  3  . . 1 1  1 1 . . 4  .  .  . 41  .  .  . . . .  . ## [73,]  5  .  3 4  1  4 2  5  1 2 2 .  4 4 3 3 1  4  1  6  .  .  .  . . . .  . ## [74,]  5 12  2 4  2  3 3  2  2 7 . 4  1 2 4 1 4  .  .  1  .  .  .  . . . .  . ## [75,]  2  8  3 1  1  4 2 14  1 4 2 2  3 4 8 1 .  .  .  .  2  .  .  . . . .  1 ## [76,] 42  7 11 6 14  3 9 32 10 . 3 6  8 1 1 2 . 20 25 26  1  .  .  . . . .  . ## [77,]  2  3  6 .  2  4 .  2 37 1 1 2  . 4 2 1 1  2  .  1  .  .  .  . . . .  . ## [78,]  1  2  5 4  . 20 .  .  . 3 2 2 13 1 . 2 .  2  3  .  1  .  .  . . . .  . ## [79,]  2  6  3 .  4  5 1  8  2 5 4 .  2 . . 3 .  1  1  .  1  .  .  . . . .  . ## [80,]  1  .  . 1  1  . .  .  3 2 . .  . . 1 . .  .  1  1  1  .  .  . . . .  . ##                                                    ##  [1,]  . 1 .  . . . .  . . . . . 1 . . 1  . 1 .  . ##  [2,]  . . 1  . . . .  1 . . 1 1 . . . .  . . 1  . ##  [3,]  . 1 .  . . . .  . . . . 1 . . . .  . . .  . ##  [4,]  . 1 .  . . . .  . . . . . . . . 3  . . .  . ##  [5,]  . 2 1  . . . .  . . . . 2 1 . . .  . . .  . ##  [6,]  . . 1  . . . .  . . . 1 1 . . . 1  . . .  . ##  [7,]  . . .  . . . .  . . . . . . . . 1  . 1 .  . ##  [8,]  . 1 .  . . . .  . . . . . 1 . . .  . . .  . ##  [9,]  . . .  . . . .  . . . . . . . . 1  . . .  . ## [10,]  . . .  . . . .  . . . 1 . . . . .  . . .  . ## [11,]  . . .  . . . .  . . . . . 1 . . .  . . .  . ## [12,]  . 1 .  . . . .  . . . . . . . . 2  . . .  . ## [13,]  . . .  . . . .  . . 1 1 . . . . .  . . .  . ## [14,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [15,]  . 1 .  . . . .  . . . 1 . . . . 1  . . .  . ## [16,]  . . .  . . . .  1 . . . . 2 . . .  . . .  . ## [17,]  . . .  . . . .  . . . . . 1 . . .  . . .  . ## [18,]  . . .  . . . .  . 1 . . . . . . .  . . .  . ## [19,]  . . .  . . . .  1 . . 1 . 1 . . .  . . .  . ## [20,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [21,]  . 1 .  . . . .  . . . . . . . . .  . . .  . ## [22,]  . . .  . . . .  . . . 2 . . . . .  . . .  . ## [23,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [24,]  . . .  . . . .  . . . . . . . . .  1 . .  . ## [25,]  . . .  . . . .  . . . . . . . . .  . . 1  . ## [26,]  . . .  . . . .  . . . . . . . . .  1 . .  . ## [27,]  . . .  . 1 . .  1 . . . . . . . 1  . . .  . ## [28,]  . . .  . . . .  1 . . 1 . 1 . . .  . . .  . ## [29,]  . . .  . 1 . 1  1 . . . . . . . .  . . .  . ## [30,]  . . .  . . . .  . . . . 1 . . . .  2 . .  . ## [31,]  . 1 .  . 4 2 1  1 1 3 2 3 3 . 4 7  1 . 3  . ## [32,]  3 1 4  1 . 1 .  1 . . 2 1 . 1 1 3  . . 5  . ## [33,]  5 2 2  1 . 1 1  1 . 4 1 1 2 3 . 2 58 1 1  . ## [34,]  7 2 1  1 3 1 1  1 . . 1 3 1 2 1 .  . 2 3  . ## [35,]  1 4 1  . . . .  1 2 1 1 . 1 . . 1  . 1 . 10 ## [36,]  . 1 2  . 1 . 1  . 1 2 1 2 3 . . 3  1 3 .  . ## [37,]  3 . 3  1 7 1 2  1 1 3 3 2 1 . 4 3  . 2 1  . ## [38,]  1 2 2  . 4 . 2  . 1 . . . 2 . 2 5  2 1 2  1 ## [39,]  . 1 2  1 . 1 1  1 . 1 3 1 1 1 1 .  1 2 .  . ## [40,]  2 3 6 51 3 1 . 25 3 . 1 1 2 2 2 1  . 1 2  1 ## [41,]  6 1 2  . 1 1 1  1 . . . 2 . . . .  . . 3  . ## [42,]  . . 1  . . . .  . . . 1 1 2 1 1 2  1 1 .  . ## [43,]  . . .  . . . 1  . . . 2 . . . . 1  . . .  . ## [44,]  . . .  . . . .  . . . . . . . . 1  . 1 .  . ## [45,]  . . 1  1 . . .  . . . . . . . . .  . . .  . ## [46,]  . . .  . . . .  . . . 1 . . . . 2  . . .  . ## [47,] 10 1 3  . . . .  . . . . 1 . . . 2  1 1 3  . ## [48,]  . 1 2  . . . .  . 1 . . . 1 . . .  . 2 1  . ## [49,]  9 . .  . . . 1  . . . . 1 . 1 . 1  . . 3  . ## [50,]  . . 1  . . . .  . . . . . . . 1 1  . 1 .  . ## [51,]  . . .  . 1 . .  2 . . . . . . . .  . . .  . ## [52,]  . . .  . . . .  . . 1 . . . . . .  1 1 .  . ## [53,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [54,]  . . .  . 1 . .  . . . . . . . . .  . . .  . ## [55,]  . . .  . . 1 .  . . . . . 1 . . 2  2 . .  . ## [56,]  . . .  . . . .  3 . . . . . . . .  . . .  . ## [57,]  . . .  . . . .  2 . . . . . . . .  1 . .  . ## [58,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [59,]  . . .  . 1 . .  . . . . . . . . .  . . .  . ## [60,]  . . .  . 1 . .  . . . . . . . . .  . 3 .  . ## [61,]  . 1 1  . . . .  1 . . . . . . 1 .  2 . 1  . ## [62,]  . . .  . . . .  . . . . . . . . 1  . . 1  . ## [63,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [64,]  . 1 .  . 1 . .  1 . . . . . . . .  . . .  . ## [65,]  . . .  . 3 . .  1 . . 1 . 1 . . 2  4 . .  . ## [66,]  . . .  . 2 . .  2 . . 1 . 1 . . 1  2 . .  . ## [67,]  . 2 .  . . . .  4 . . . . . . 1 1  1 1 .  . ## [68,]  . . .  . . . .  1 . . . . . . . .  . . 1  . ## [69,]  . . .  . 1 . .  . . . . . 1 . . .  3 . .  . ## [70,]  . . .  . . . .  . . . 1 . . . . .  1 . .  . ## [71,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [72,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [73,]  . . .  . . . .  . . . . . . . . 1  . . .  . ## [74,]  . . .  . . . .  . . . . . . . 2 .  . . .  . ## [75,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [76,]  . . .  1 . . .  1 . . . . . . . 1  . 1 .  . ## [77,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [78,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [79,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [80,]  . . .  . . . .  . . . 1 . . . . .  . . .  ."},{"path":"/articles/soma-reading.html","id":"slicing-1","dir":"Articles","previous_headings":"SOMA SparseNDArray","what":"Slicing","title":"Reading from SOMA objects","text":"Just SOMADataFrame, can also retrieve subsets data SOMASparseNDArray can fit memory. Unlike SOMADataFrames, SOMASparseNDArrays always indexed using zero-based offset integer dimension, named soma_dim_N. Therefore, array N-dimensional, read() method can accept list length N specifies slice array. SOMASparseNDArray dimensions always named soma_dim_N N dimension number. use schema() dimnames() retrieve dimension names. example, ’s fetch first 5 rows matrix:","code":"counts$schema() ## Schema ## soma_dim_0: int64 not null ## soma_dim_1: int64 not null ## soma_data: double not null counts$read(coords = list(soma_dim_0 = 0:4))$tables()$concat() ## Table ## 258 rows x 3 columns ## $soma_dim_0 <int64 not null> ## $soma_dim_1 <int64 not null> ## $soma_data <double not null>"},{"path":"/articles/soma-shapes.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"SOMA shapes","text":"TileDB-SOMA 1.15 ’re proud support intuitive extensible notion shape. Please also see Academy tutorial.","code":""},{"path":"/articles/soma-shapes.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"SOMA shapes","text":"Let’s load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object. obs dataframe domain, soft limit values can written . (’ll get error try read write soma_joinid values outside range, important data-integrity reassurance.) domain see matches data populated inside . (usually case. might , ’ve created dataframe written data yet — point ’s empty still shape.) data — cells — add experiment later, able resize obs, maxdomain hard limit. var dataframe’s domain similar: Likewise, N-dimensional arrays within experiment shapes well. ’s important difference: dataframe domain gives inclusive lower upper bounds soma_joinid writes, shape N-dimensional arrays upper bound plus 1. Since 80 cells 230 genes , X’s shape reflects . N-dimensional arrays similar: particular, X array experiment — experiments — sparse. means needn’t number every row cell matrix. Nonetheless, shape serves soft limit reads writes: ’ll get exception trying read write outside . general rule ’ll see following: X array’s shape nobs x nvar obsm array’s shape nobs x number, maybe 20 obsp array’s shape nobs x nobs varm array’s shape nvar x number, maybe 20 varp array’s shape nvar x nvar","code":"library(tiledbsoma)  exp <- load_dataset(\"soma-exp-pbmc-small\") exp #> <SOMAExperiment> #>   uri: /tmp/Rtmp7VMCIa/soma-exp-pbmc-small exp$obs$domain() #> $soma_joinid #> [1]  0 79 exp$obs$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 head(as.data.frame(exp$obs$read()$concat())) #>   soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 #> 1           0 SeuratProject         70           47               0 #> 2           1 SeuratProject         85           52               0 #> 3           2 SeuratProject         87           50               1 #> 4           3 SeuratProject        127           56               0 #> 5           4 SeuratProject        173           53               0 #> 6           5 SeuratProject         70           48               0 #>   letter.idents groups RNA_snn_res.1         obs_id #> 1             A     g2             0 ATGCCAGAACGACT #> 2             A     g1             0 CATGGCCTGTGCAT #> 3             B     g2             0 GAACCTGATGAACC #> 4             A     g2             0 TGACTGGATTCTCA #> 5             A     g2             0 AGTCAGACTGCACA #> 6             A     g1             0 TCTGATACACGTGT var <- exp$ms$get(\"RNA\")$var var$domain() #> $soma_joinid #> [1]   0 229 var$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 obs <- exp$obs var <- exp$ms$get(\"RNA\")$var X   <- exp$ms$get(\"RNA\")$X$get(\"data\") obs$domain() #> $soma_joinid #> [1]  0 79 var$domain() #> $soma_joinid #> [1]   0 229 X$shape() #> integer64 #> [1] 80  230 X$maxshape() #> integer64 #> [1] 9223372036854775728 9223372036854775578 obsm <- exp$ms$get(\"RNA\")$obsm obsm$names() #> [1] \"X_pca\"  \"X_tsne\" obsp <- exp$ms$get(\"RNA\")$obsp obsp$names() #> [1] \"RNA_snn\" list(     obsm$get(\"X_pca\")$shape(),     obsm$get(\"X_pca\")$maxshape() ) #> [[1]] #> integer64 #> [1] 80 19 #>  #> [[2]] #> integer64 #> [1] 9223372036854775728 9223372036854775789 list(     obsp$get(\"RNA_snn\")$shape(),     obsp$get(\"RNA_snn\")$maxshape() ) #> [[1]] #> integer64 #> [1] 80 80 #>  #> [[2]] #> integer64 #> [1] 9223372036854775728 9223372036854775728"},{"path":"/articles/soma-shapes.html","id":"advanced-usage-dataframes-with-non-standard-index-columns","dir":"Articles","previous_headings":"","what":"Advanced usage: dataframes with non-standard index columns","title":"SOMA shapes","text":"SOMA data model, SOMASparseNDArray SOMADenseNDArray objects always int64 dimensions named soma_dim_0, soma_dim_1, , numeric soma_data attribute contents array. Furthermore, always case. dataframes, though, must soma_joinid column type int64, can one index columns addtion — , soma_joinid can non-index column. really, dataframes capable , via index-column names specify creation time. Let’s create couple dataframes, data, different choices index-column names. Now let’s look domain maxdomain dataframes. see soma_joinid slot dataframe’s domain requested. Another point domain specified string-type index columns. can set create one two ways: either case domain slot string-typed index column read back ('', ''). Now let’s look dataframe. soma_joinid index column . fine, long within data write , index-column values uniquely identify row. domain reads back written:","code":"exp$ms$get(\"RNA\")$X$get(\"data\")$schema() #> Schema #> soma_dim_0: int64 not null #> soma_dim_1: int64 not null #> soma_data: double not null exp$obs$schema() #> Schema #> soma_joinid: int64 not null #> orig.ident: dictionary<values=string, indices=int8> #> nCount_RNA: double #> nFeature_RNA: int32 #> RNA_snn_res.0.8: dictionary<values=string, indices=int8> #> letter.idents: dictionary<values=string, indices=int8> #> groups: large_string #> RNA_snn_res.1: dictionary<values=string, indices=int8> #> obs_id: large_string sdfuri1 <- withr::local_tempdir(\"sdf1\") sdfuri2 <- withr::local_tempdir(\"sdf2\") asch <- arrow::schema(     arrow::field(\"soma_joinid\", arrow::int64(), nullable = FALSE),     arrow::field(\"mystring\", arrow::large_utf8(), nullable = FALSE),     arrow::field(\"myint\", arrow::int32(), nullable = FALSE),     arrow::field(\"myfloat\", arrow::float32(), nullable = FALSE) )  soma_joinid = c(0, 1) mystring    = c(\"hello\", \"world\") myint       = c(33, 44) myfloat     = c(4.5, 5.5)  tbl <- arrow::arrow_table(     soma_joinid = c(soma_joinid),     mystring = c(mystring),     myint = c(myint),     myfloat = c(myfloat) ) sdf1 <- SOMADataFrameCreate(   sdfuri1,   asch,   index_column_names = c(\"soma_joinid\", \"mystring\"),   domain = list(soma_joinid = c(0, 9), mystring = NULL) ) sdf1$write(tbl) sdf1$close() sdf1 <- SOMADataFrameOpen(sdfuri1) sdf1$index_column_names() #> [1] \"soma_joinid\" \"mystring\" domain = list(soma_joinid = (0, 9), mystring = NULL) domain = list(soma_joinid = (0, 9), mystring = c('', '')) sdf1$domain() #> $soma_joinid #> [1] 0 9 #>  #> $mystring #> [1] \"\" \"\" sdf1$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 #>  #> $mystring #> [1] \"\" \"\" sdf2 <- SOMADataFrameCreate(   sdfuri2,   asch,   index_column_names = c(\"myfloat\", \"myint\"),   domain = list(myfloat = c(0, 9999), myint = c(-1000, 1000)) ) sdf2$write(tbl) sdf2$close() sdf2 <- SOMADataFrameOpen(sdfuri1) sdf2$index_column_names() #> [1] \"soma_joinid\" \"mystring\" sdf2$domain() #> $soma_joinid #> [1] 0 9 #>  #> $mystring #> [1] \"\" \"\" sdf2$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 #>  #> $mystring #> [1] \"\" \"\""},{"path":"/articles/soma-shapes.html","id":"advanced-usage-using-resize-at-the-dataframearray-level","dir":"Articles","previous_headings":"","what":"Advanced usage: using resize at the dataframe/array level","title":"SOMA shapes","text":"TileDB-SOMA Python API, method resizing dataframes arrays within experiment. present yet offer corresponding method TileDB-SOMA R API, simple reason low demand . Nonetheless, completeness, offer guidance resizes dataframes arrays within TileDB-SOMA experiment. N-dimensional arrays upgraded, created using TileDB-SOMA 1.15 higher, simply following: array’s $tiledbsoma_has_upgraded_shape() reports FALSE, invoke $tiledbsoma_upgrade_shape() method. Otherwise invoke $.resize() method. Let’s fresh unpack pre-1.15 experiment: see X array upgraded, shape reports maxshape: Given pre-1.15 TileDB-SOMA-R arrays created maxshape leaving room growth, arrays shape resized . 1.15 onward, course, ’ve see , arrays created room growth can resize upward.","code":"exp <- load_dataset(\"soma-exp-pbmc-small-pre-1.15\") exp #> <SOMAExperiment> #>   uri: /tmp/Rtmp7VMCIa/soma-exp-pbmc-small-pre-1.15 X <- exp$ms$get(\"RNA\")$X$get(\"data\") X$tiledbsoma_has_upgraded_shape() #> [1] FALSE X$shape() #> integer64 #> [1] 80  230 X$maxshape() #> integer64 #> [1] 80  230"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Hoffman. Maintainer, author. Aaron Wolen. Author. Julia Dark. Contributor. John Kerl. Contributor. TileDB, Inc.. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoffman P, Wolen (2025). tiledbsoma: 'TileDB' Stack Matrices, Annotated ('SOMA'). R package version 2.1.99, https://single-cell-data.github.io/TileDB-SOMA/.","code":"@Manual{,   title = {tiledbsoma: 'TileDB' Stack of Matrices, Annotated ('SOMA')},   author = {Paul Hoffman and Aaron Wolen},   year = {2025},   note = {R package version 2.1.99},   url = {https://single-cell-data.github.io/TileDB-SOMA/}, }"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The 'tiledbsoma' R package has been written by a team comprised of members from Chan Zuckerberg Initiative (CZI) and TileDB, Inc., as part of the 'SOMA' (\"Stack of Matrices, Annotated\") initative.  The repository provides detailed commit statistics across the C++, Python, and R components of the implementation:   https://github.com/single-cell-data/TileDB-SOMA/graphs/contributors  The package also includes code written by other contributors as detailed below:   -- libtiledbsoma/src/external/{src,include}/thread_pool/ ---------------------------------------- The thread_pool implementation is from TileDB, Inc., and part of TileDB Embedded released at https://github.com/tiledb-inc/tiledb   * @copyright Copyright (c) 2017-2022 TileDB, Inc.  *            Copyright (c) 2011 The LevelDB Authors. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are met:   * Redistributions of source code must retain the above copyright notice, this  * list of conditions and the following disclaimer.  *  * Redistributions in binary form must reproduce the above copyright notice,  * this list of conditions and the following disclaimer in the documentation  * and/or other materials provided with the distribution.  *  * Neither the name of Google Inc. nor the names of its contributors may be used  * to endorse or promote products derived from this software without specific  * prior written permission.  *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   -- apis/r/src/nanoarrow.{h,cc}/ ------------------------------------------------------------- The nanoarrow package was written by Dewey Dunnington and other and released at https://github.com/apache/arrow-nanoarrow  // Licensed to the Apache Software Foundation (ASF) under one // or more contributor license agreements.  See the NOTICE file // distributed with this work for additional information // regarding copyright ownership.  The ASF licenses this file // to you under the Apache License, Version 2.0 (the // \"License\"); you may not use this file except in compliance // with the License.  You may obtain a copy of the License at // //   http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, // software distributed under the License is distributed on an // \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY // KIND, either express or implied.  See the License for the // specific language governing permissions and limitations // under the License."},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"TileDB Stack of Matrices, Annotated (SOMA)","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"R implementation SOMA API specification.","code":""},{"path":[]},{"path":"/index.html","id":"release-packages","dir":"","previous_headings":"","what":"Release packages","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"TileDB-SOMA releases can installed R-universe, serves macOS binaries source package Unix-like platforms. Installing source Unix-like platforms requires cmake, git, recent-enough C++ compiler (g++ version 10.* ). Alternatively, tiledbsoma can installed directly Conda, serves binaries multiple architectures. Note, ’re using mamba drop-replacement conda accelerate install process.","code":"install.packages('tiledbsoma', repos = c('https://tiledb-inc.r-universe.dev',                                          'https://cloud.r-project.org')) mamba install -c conda-forge -c tiledb r-tiledbsoma"},{"path":"/index.html","id":"from-source","dir":"","previous_headings":"","what":"From source","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"install latest tiledbsoma development version (main branch), use remotes::install_github(): note fmt spdlog packages: encounter install-time error like undefined symbol: _ZTIN3fmt2v912format_errorE uninstall systemversions fmt spdlog. Linux, means dpkg -l | egrep \"lib(spdlog|fmt)\" now come empty. encounter install-time error like fatal error: spdlog/spdlog.h: file directory additionally recursively remove /usr/local/lib/cmake/spdlog, since system uninstall spdlog fails remove properly.","code":"remotes::install_github(\"https://github.com/single-cell-data/TileDB-SOMA\", subdir = \"apis/r\")"},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"From source","what":"Requirements","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Source installation requires tiledb R package – turn depends either local installation TileDB Core library provided build artifacts. general, source installation TileDB Core packages requires cmake git installed; common tools operating system provides readily. R package dependencies listed DESCRIPTION file can installed via e.g. remotes::install_deps(\".\", dependencies=TRUE) also install suggested packages. order build vignettes, knitr rmarkdown required (installed), testthat testing. testthat invoked directly pkgbuild also needed (installed listed DESCRIPTION). addition, R package also depends libtiledbsoma library repository. either installed package (described next section), can used system library (one found). system installation can provided following steps libtiledbsoma directory.","code":""},{"path":"/index.html","id":"development-setup","dir":"","previous_headings":"From source","what":"Development setup","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"set install local clone git repository: Clone repository: git clone https://github.com/single-cell-data/TileDB-SOMA.git. Change R API package directory: cd TileDB-SOMA/apis/r. Optionally, clean files repo: ./cleanup (needed first time). Optionally, add optional package test data: install.packages(\"pbmc3k.tiledb\",  repos=\"https://ghrr.github.io/drat\"). edited src/*.cpp files changed function signatures, running Rscript -e 'Rcpp::compileAttributes()' update Rcpp-generated glue code. changed C++ function header documentation, run Rscript -e 'roxygen2::roxygenise()' update corresponding R files. Build R package source tarball repository sources: R CMD build . (also include libtiledbsoma source via repository soft-link); dependencies required described previous section). Optionally, check test package tarball skipping vignettes manuals (need texlive equivalent): R CMD check ---vignettes ---manual tiledbsoma_*.tar.gz. Finally, install package tarball: R CMD INSTALL tiledbsoma_*.tar.gz. installation presence two C++ libraries (TileDB Core, TileDB-SOMA) tested . TileDB Core builds can downloaded needed, TileDB-SOMA library built needed. (plan provide downloadable artifact .) installed successfully, package sources can edited re-installed iteratively. optional clean step ensures full rebuild, optional copy libtiledbsoma ensures updated .","code":""},{"path":"/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Please see https://github.com/single-cell-data/TileDB-SOMA/issues.","code":""},{"path":"/index.html","id":"information-for-developers","dir":"","previous_headings":"","what":"Information for developers","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Please see TileDB-SOMA wiki. main branch implements updated specification. Please also see main-old branch implementation original specification.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Virtual base class allows blockwise read iteration SOMA reads.","code":""},{"path":[]},{"path":"/reference/BlockwiseReadIterBase.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"tiledbsoma::ReadIter -> BlockwiseReadIterBase","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"array underlying SOMA array. axis axis iterate blockwise fashion. axes_to_reindex axes re-index. coords list CoordsStrider objects. coords_axis CoordsStrider axis. reindex_disable_on_axis Additional axes re-indexed. reindexable Shorthand see iterator poised re-indexed .","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"tiledbsoma::ReadIter$concat()","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"BlockwiseReadIterBase$new() BlockwiseReadIterBase$read_complete() BlockwiseReadIterBase$read_next() BlockwiseReadIterBase$clone()","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Create.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$new(   sr,   array,   coords,   axis,   ...,   reindex_disable_on_axis = NA )"},{"path":"/reference/BlockwiseReadIterBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Named list CoordsStrider objects; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-read-complete-","dir":"Reference","previous_headings":"","what":"Method read_complete()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Check iterated read complete .","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$read_complete()"},{"path":"/reference/BlockwiseReadIterBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"TRUE read complete, otherwise FALSE.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-read-next-","dir":"Reference","previous_headings":"","what":"Method read_next()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Read next chunk iterated read. read complete, throws iterationCompleteWarning warning returns NULL.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$read_next()"},{"path":"/reference/BlockwiseReadIterBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"NULL next blockwise chunk iterated read.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$clone(deep = FALSE)"},{"path":"/reference/BlockwiseReadIterBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Class allows blockwise read iteration SOMA reads sparse matrices.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"tiledbsoma::ReadIter -> tiledbsoma::BlockwiseReadIterBase -> BlockwiseSparseReadIter","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"repr Representation sparse matrix return.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"tiledbsoma::BlockwiseReadIterBase$read_complete() tiledbsoma::BlockwiseReadIterBase$read_next()","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"BlockwiseSparseReadIter$new() BlockwiseSparseReadIter$concat() BlockwiseSparseReadIter$clone()","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Create.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$new(   sr,   array,   coords,   axis,   ...,   repr = \"T\",   reindex_disable_on_axis = NA )"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Named list CoordsStrider objects; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored repr Representation sparse matrix return; choose : “T”: returns TsparseMatrix “R”: returns RsparseMatrix “C”: returns CsparseMatrix Note: passing repr “R” “C” available re-indexing enabled axes 0 1, respectively reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Concatenate remainder blockwise iterator.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$concat()"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"sparse matrix (determined self$repr) remainder iterator.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$clone(deep = FALSE)"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"dir <- withr::local_tempfile(pattern = \"blockwise-matrix\") dir.create(dir, recursive = TRUE) (exp <- load_dataset(\"soma-exp-pbmc-small\", dir)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/blockwise-matrix29fb535d45b0/soma-exp-pbmc-small qry <- exp$axis_query(\"RNA\") xqry <- qry$X(\"data\")  iter <- xqry$blockwise(0L, size = 20L, reindex_disable_on_axis = TRUE)$sparse_matrix() stopifnot(inherits(iter, \"BlockwiseSparseReadIter\"))  while (!iter$read_complete()) {   block <- iter$read_next() }"},{"path":"/reference/BlockwiseTableReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Class allows blockwise read iteration SOMA reads Arrow Tables.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"tiledbsoma::ReadIter -> tiledbsoma::BlockwiseReadIterBase -> BlockwiseTableReadIter","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"tiledbsoma::BlockwiseReadIterBase$initialize() tiledbsoma::BlockwiseReadIterBase$read_complete() tiledbsoma::BlockwiseReadIterBase$read_next()","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"BlockwiseTableReadIter$concat() BlockwiseTableReadIter$clone()","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Concatenate remainder blockwise iterator.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"","code":"BlockwiseTableReadIter$concat()"},{"path":"/reference/BlockwiseTableReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Arrow Table remainder iterator.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"","code":"BlockwiseTableReadIter$clone(deep = FALSE)"},{"path":"/reference/BlockwiseTableReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"","code":"dir <- withr::local_tempfile(pattern = \"blockwise-table\") dir.create(dir, recursive = TRUE) (exp <- load_dataset(\"soma-exp-pbmc-small\", dir)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/blockwise-table29fbfd13842/soma-exp-pbmc-small qry <- exp$axis_query(\"RNA\") xqry <- qry$X(\"data\")  iter <- xqry$blockwise(0L, size = 20L, reindex_disable_on_axis = TRUE)$tables() stopifnot(inherits(iter, \"BlockwiseTableReadIter\"))  while (!iter$read_complete()) {   block <- iter$read_next() }"},{"path":"/reference/ConfigList.html","id":null,"dir":"Reference","previous_headings":"","what":"A Configuration List — ConfigList","title":"A Configuration List — ConfigList","text":"R6 mapping type configuring various “parameters”. Essentially, serves nested map inner map ScalarMap: {<param>: {<key>: <value>}}","code":""},{"path":"/reference/ConfigList.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A Configuration List — ConfigList","text":"tiledbsoma::MappingBase -> ConfigList","code":""},{"path":"/reference/ConfigList.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A Configuration List — ConfigList","text":"tiledbsoma::MappingBase$initialize() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/ConfigList.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A Configuration List — ConfigList","text":"ConfigList$get() ConfigList$set() ConfigList$setv() ConfigList$clone()","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$get(param, key = NULL, default = quote(expr = ))"},{"path":"/reference/ConfigList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"param Outer key “parameter” fetch key Inner key fetch; pass NULL return  map param default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/ConfigList.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"value key param map, default key found","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$set(param, key, value)"},{"path":"/reference/ConfigList.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"param Outer key “parameter” set key Inner key set value Value add key, NULL remove entry key; optionally provide param value ScalarMap update param keys values value","code":""},{"path":"/reference/ConfigList.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"\\[chainable\\] Invisibly returns self value added key param","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$setv(...)"},{"path":"/reference/ConfigList.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"... Ignored","code":""},{"path":"/reference/ConfigList.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"Nothing; setv() disabled ConfigList objects","code":""},{"path":"/reference/ConfigList.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A Configuration List — ConfigList","text":"objects class cloneable method.","code":""},{"path":"/reference/ConfigList.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$clone(deep = FALSE)"},{"path":"/reference/ConfigList.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ConfigList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Configuration List — ConfigList","text":"","code":"(cfg <- ConfigList$new()) #> <ConfigList> cfg$set(\"op1\", \"a\", 1L) cfg #> <ConfigList> #>   op1: <environment> cfg$get(\"op1\") #> <ScalarMap> #>   a: 1"},{"path":"/reference/CoordsStrider.html","id":null,"dir":"Reference","previous_headings":"","what":"The Coordinate Strider — CoordsStrider","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider allows creating coordinate slices iterated manner. Alternatively, can chunk existing vector coordinates","code":""},{"path":"/reference/CoordsStrider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"# S3 method for class 'CoordsStrider' as.list(x, ...)  # S3 method for class 'CoordsStrider' length(x)  # S3 method for class 'CoordsStrider' nextElem(obj, ...)  # S3 method for class 'CoordsStrider' hasNext(obj, ...)"},{"path":"/reference/CoordsStrider.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider operates using 64-bit integer objects; , accessing fields, strider$start strider$stride return integer64 object, functions differently regular integer. Use caution convert back integers numerics necessary","code":""},{"path":"/reference/CoordsStrider.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The Coordinate Strider — CoordsStrider","text":"coords set, coordinates iterate start set, starting point iterated coordinates; otherwise minimum value self$coords end set, end point iterated coordinates; otherwise maximum value self$coords stride stride, many coordinates generate per iteration; note: field settable, reset iterator","code":""},{"path":[]},{"path":"/reference/CoordsStrider.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider$new() CoordsStrider$print() CoordsStrider$length() CoordsStrider$has_next() CoordsStrider$next_element()","code":""},{"path":"/reference/CoordsStrider.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The Coordinate Strider — CoordsStrider","text":"Create coordinate strider","code":""},{"path":"/reference/CoordsStrider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$new(coords, ..., stride = NULL, start = NULL, end = NULL)"},{"path":"/reference/CoordsStrider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Coordinate Strider — CoordsStrider","text":"coords integer vector coordinates ... Ignored stride stride many coordinates yield per iteration; default, try yield coordinates per iteration start coords missing, starting coordinate generate end coords missing, ending coordinate generate","code":""},{"path":"/reference/CoordsStrider.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The Coordinate Strider — CoordsStrider","text":"Print coordinate strider screen","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$print()"},{"path":"/reference/CoordsStrider.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"The Coordinate Strider — CoordsStrider","text":"Get length (span) coordinates within strider","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$length()"},{"path":"/reference/CoordsStrider.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"length (span) coordinate strider","code":""},{"path":"/reference/CoordsStrider.html","id":"method-has-next-","dir":"Reference","previous_headings":"","what":"Method has_next()","title":"The Coordinate Strider — CoordsStrider","text":"Determine coordinates yield","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$has_next()"},{"path":"/reference/CoordsStrider.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"TRUE coordinates yield FALSE otherwise","code":""},{"path":"/reference/CoordsStrider.html","id":"method-next-element-","dir":"Reference","previous_headings":"","what":"Method next_element()","title":"The Coordinate Strider — CoordsStrider","text":"Generate next set coordinates yield. coordinates yield, raises stopIteration error","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$next_element()"},{"path":"/reference/CoordsStrider.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"integer vector next set coordinates","code":""},{"path":"/reference/CoordsStrider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Coordinate Strider — CoordsStrider","text":"","code":"(strider <- CoordsStrider$new(start = 1L, end = 200L, stride = 60L)) #> <CoordsStrider> #>   start: 1  #>   end: 200  #>   stride: 60  while (strider$has_next()) {   str(strider$next_element()) } #> integer64 [1:60] 1 2 3 4 5 6 7 8 ...  #> integer64 [1:60] 61 62 63 64 65 66 67 68 ...  #> integer64 [1:60] 121 122 123 124 125 126 127 128 ...  #> integer64 [1:20] 181 182 183 184 185 186 187 188 ...   (strider <- CoordsStrider$new(start = 1L, end = 200L, stride = 60L)) #> <CoordsStrider> #>   start: 1  #>   end: 200  #>   stride: 60  as.list(strider) #> [[1]] #> integer64 #>  [1] 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #> [51] 51 52 53 54 55 56 57 58 59 60 #>  #> [[2]] #> integer64 #>  [1] 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  #> [20] 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  #> [39] 99  100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 #> [58] 118 119 120 #>  #> [[3]] #> integer64 #>  [1] 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 #> [20] 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 #> [39] 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 #> [58] 178 179 180 #>  #> [[4]] #> integer64 #>  [1] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 #> [20] 200 #>   length(strider) #> [1] 199  (strider <- CoordsStrider$new(start = 1L, end = 200L, stride = 60L)) #> <CoordsStrider> #>   start: 1  #>   end: 200  #>   stride: 60  while (itertools::hasNext(strider)) {   str(iterators::nextElem(strider)) } #> integer64 [1:60] 1 2 3 4 5 6 7 8 ...  #> integer64 [1:60] 61 62 63 64 65 66 67 68 ...  #> integer64 [1:60] 121 122 123 124 125 126 127 128 ...  #> integer64 [1:20] 181 182 183 184 185 186 187 188 ..."},{"path":"/reference/EphemeralCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral Collections — EphemeralCollection","title":"Ephemeral Collections — EphemeralCollection","text":"Ephemeral version SOMACollections; ephemeral collections equivalent SOMA collections stored -memory instead -disk.","code":""},{"path":"/reference/EphemeralCollection.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral Collections — EphemeralCollection","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralCollection","code":""},{"path":"/reference/EphemeralCollection.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral Collections — EphemeralCollection","text":"soma_type SOMA object type.","code":""},{"path":"/reference/EphemeralCollection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral Collections — EphemeralCollection","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralCollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral Collections — EphemeralCollection","text":"EphemeralCollection$clone()","code":""},{"path":"/reference/EphemeralCollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral Collections — EphemeralCollection","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralCollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collections — EphemeralCollection","text":"","code":"EphemeralCollection$clone(deep = FALSE)"},{"path":"/reference/EphemeralCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collections — EphemeralCollection","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralCollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ephemeral Collections — EphemeralCollection","text":"","code":"(col <- EphemeralCollection$new()) #> <EphemeralCollection> #>   uri: ephemeral-collection:0x5601064ba690 col$soma_type #> [1] \"SOMACollection\"  dir <- withr::local_tempfile(pattern = \"obs\") dir.create(dir, recursive = TRUE)  (obs <- load_dataset(\"soma-dataframe-pbmc3k-processed-obs\", dir)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/obs29fb11706457/soma-dataframe-pbmc3k-processed-obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, seurat_annotations, percent.mt, RNA_snn...  col$set(obs, \"obs\") col$names() #> [1] \"obs\""},{"path":"/reference/EphemeralCollectionBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral Collection Base — EphemeralCollectionBase","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Virtual base class ephemeral collections; ephemeral collections equivalent SOMA collections stored memory instead disk.","code":""},{"path":[]},{"path":"/reference/EphemeralCollectionBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> EphemeralCollectionBase","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"uri “ephemeral-collection:<MEMORY_ADDRESS>”. members list members collection soma_type Dummy field ephemeral objects compatibility SOMA collections. platform_config Dummy field ephemeral objects compatibility SOMA collections. tiledbsoma_ctx Dummy field ephemeral objects compatibility SOMA collections. tiledb_timestamp Dummy field ephemeral objects compatibility SOMA collections .tiledb_timestamp_range Dummy field ephemeral objects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen()","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"EphemeralCollectionBase$new() EphemeralCollectionBase$create() EphemeralCollectionBase$open() EphemeralCollectionBase$close() EphemeralCollectionBase$exists() EphemeralCollectionBase$print() EphemeralCollectionBase$get_tiledb_config() EphemeralCollectionBase$length() EphemeralCollectionBase$names() EphemeralCollectionBase$set() EphemeralCollectionBase$get() EphemeralCollectionBase$remove() EphemeralCollectionBase$set_metadata() EphemeralCollectionBase$get_metadata() EphemeralCollectionBase$add_new_collection() EphemeralCollectionBase$add_new_dataframe() EphemeralCollectionBase$add_new_dense_ndarray() EphemeralCollectionBase$add_new_sparse_ndarray() EphemeralCollectionBase$clone()","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Create ephemeral collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$new(...)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"... Ignored","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Create new, empty ephemeral collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$create()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns new ephemeral collection class class(self).","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$open(mode)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"mode Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$close()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Invisibly returns NULL.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$exists()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns FALSE ephemeral collections exist -disk.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Special method printing object representation console.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$print()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Prints details ephemeral collection invisibly returns .","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-tiledb-config-","dir":"Reference","previous_headings":"","what":"Method get_tiledb_config()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get_tiledb_config(param = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"param Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns NULL ephemeral collections -disk configuration.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Retrieve number items collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$length()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"length collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Retrieve names members. (lifecycle: maturing).","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$names()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"character vector member names.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Add object ephemeral collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$set(object, name = NULL, relative = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object SOMA object (eg. SOMACollection) add collection. name name add object . relative Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"[chainable] Invisibly returns self object added name.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Get objects ephemeral collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get(name)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"name Name object collection get.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object named name.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Remove objects ephemeral collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$remove(name)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"name Name object remove collection.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"[chainable] Invisibly returns self object name removed.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$set_metadata(metadata)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"metadata Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get_metadata(key = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"empty list.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-collection-","dir":"Reference","previous_headings":"","what":"Method add_new_collection()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_collection(object, key)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object, key Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-dataframe-","dir":"Reference","previous_headings":"","what":"Method add_new_dataframe()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_dataframe(key, schema, index_column_names)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, schema, index_column_names Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-dense-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_dense_ndarray()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_dense_ndarray(key, type, shape)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, type, shape Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-sparse-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_sparse_ndarray()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral objects compatibility SOMA collections.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_sparse_ndarray(key, type, shape)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, type, shape Ignored ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$clone(deep = FALSE)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral SOMA Experiment — EphemeralExperiment","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"Ephemeral version SOMAExperiments; ephemeral experiments equivalent SOMA experiments stored -memory instead -disk.","code":""},{"path":"/reference/EphemeralExperiment.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralExperiment","code":""},{"path":"/reference/EphemeralExperiment.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"obs SOMADataFrame containing annotations observation axis. contents soma_joinid column define observation index domain obs_id. observations SOMAExperiment must defined data frame. ms SOMACollection named SOMAMeasurements. soma_type SOMA object type.","code":""},{"path":"/reference/EphemeralExperiment.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralExperiment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"EphemeralExperiment$clone()","code":""},{"path":"/reference/EphemeralExperiment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralExperiment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"","code":"EphemeralExperiment$clone(deep = FALSE)"},{"path":"/reference/EphemeralExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"","code":"(exp <- EphemeralExperiment$new()) #> <EphemeralExperiment> #>   uri: ephemeral-collection:0x5601029b3dc0 exp$soma_type #> [1] \"SOMAExperiment\"  dir <- withr::local_tempfile(pattern = \"obs\") dir.create(dir, recursive = TRUE)  (obs <- load_dataset(\"soma-dataframe-pbmc3k-processed-obs\", dir)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/obs29fb1f7b329c/soma-dataframe-pbmc3k-processed-obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, seurat_annotations, percent.mt, RNA_snn...  exp$set(obs, \"obs\") exp$obs #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/obs29fb1f7b329c/soma-dataframe-pbmc3k-processed-obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, seurat_annotations, percent.mt, RNA_snn..."},{"path":"/reference/EphemeralMeasurement.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral SOMA Measurement — EphemeralMeasurement","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"Ephemeral version SOMAMeasurements; ephemeral measurements equivalent SOMA measurements stored -memory instead -disk.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralMeasurement","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"var SOMADataFrame containing primary annotations variable axis, variables measurement (.e., annotates columns X). contents soma_joinid column define variable index domain, var_id. variables measurement must defined data frame. X SOMACollection SOMASparseNDArrays; contain measured feature values indexed [obsid, varid]. obsm SOMACollection SOMADenseNDArrays containing annotations observation axis. array indexed obsid shape obs. obsp SOMACollection SOMASparseNDArrays containing pairwise annotations observation axis indexed [obsid_1, obsid_2]. varm SOMACollection SOMADenseNDArrays containing annotations variable axis. array indexed varid shape var. varp SOMACollection SOMASparseNDArrays containing pairwise annotations variable axis indexed [varid_1, varid_2]. soma_type SOMA object type.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"EphemeralMeasurement$clone()","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"","code":"EphemeralMeasurement$clone(deep = FALSE)"},{"path":"/reference/EphemeralMeasurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"","code":"(ms <- EphemeralMeasurement$new()) #> <EphemeralMeasurement> #>   uri: ephemeral-collection:0x56010a489b10 ms$soma_type #> [1] \"SOMAMeasurement\"  ms$set(EphemeralCollection$new(), \"X\") ms$X #> <EphemeralCollection> #>   uri: ephemeral-collection:0x56010a536978"},{"path":"/reference/IntIndexer.html","id":null,"dir":"Reference","previous_headings":"","what":"The SOMA Re-Indexer — IntIndexer","title":"The SOMA Re-Indexer — IntIndexer","text":"re-indexer unique integer indices","code":""},{"path":[]},{"path":"/reference/IntIndexer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The SOMA Re-Indexer — IntIndexer","text":"IntIndexer$new() IntIndexer$get_indexer() IntIndexer$clone()","code":""},{"path":"/reference/IntIndexer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The SOMA Re-Indexer — IntIndexer","text":"Create new re-indexer","code":""},{"path":"/reference/IntIndexer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$new(data)"},{"path":"/reference/IntIndexer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"data Integer keys used build index (hash) table","code":""},{"path":"/reference/IntIndexer.html","id":"method-get-indexer-","dir":"Reference","previous_headings":"","what":"Method get_indexer()","title":"The SOMA Re-Indexer — IntIndexer","text":"Get underlying indices target data","code":""},{"path":"/reference/IntIndexer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$get_indexer(target, nomatch_na = FALSE)"},{"path":"/reference/IntIndexer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"target Data re-index nomatch_na Set non-matches NA instead -1","code":""},{"path":"/reference/IntIndexer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Re-Indexer — IntIndexer","text":"vector 64-bit integers target re-indexed","code":""},{"path":"/reference/IntIndexer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The SOMA Re-Indexer — IntIndexer","text":"objects class cloneable method.","code":""},{"path":"/reference/IntIndexer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$clone(deep = FALSE)"},{"path":"/reference/IntIndexer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/IntIndexer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"(keys <- c(-10000, -100000, 200000, 5, 1, 7)) #> [1] -1e+04 -1e+05  2e+05  5e+00  1e+00  7e+00 (lookups <- unlist(replicate(n = 4L, c(-1L, 1:5), simplify = FALSE))) #>  [1] -1  1  2  3  4  5 -1  1  2  3  4  5 -1  1  2  3  4  5 -1  1  2  3  4  5  indexer <- IntIndexer$new(keys) indexer$get_indexer(lookups) #> integer64 #>  [1] -1 4  -1 -1 -1 3  -1 4  -1 -1 -1 3  -1 4  -1 -1 -1 3  -1 4  -1 -1 -1 3  indexer$get_indexer(lookups, nomatch_na = TRUE) #> integer64 #>  [1] <NA> 4    <NA> <NA> <NA> 3    <NA> 4    <NA> <NA> <NA> 3    <NA> 4    <NA> #> [16] <NA> <NA> 3    <NA> 4    <NA> <NA> <NA> 3"},{"path":"/reference/MappingBase.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Base Mapping Type — MappingBase","title":"R6 Base Mapping Type — MappingBase","text":"Virtual base mapping type R6 objects; defines internal data structure (private$.data) named list along behavior methods getting (self$get()) setting (self$set()) items map","code":""},{"path":"/reference/MappingBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"# S3 method for class 'MappingBase' x[[i, ..., default = NULL]]  # S3 method for class 'MappingBase' x[[i, ...]] <- value  # S3 method for class 'MappingBase' as.list(x, ...)  # S3 method for class 'MappingBase' length(x)  # S3 method for class 'MappingBase' names(x)"},{"path":"/reference/MappingBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"x mapping object key fetch set; see $get() $set() methods ... Ignored default Default value fetch found; defaults NULL value Value add , NULL remove entry ","code":""},{"path":"/reference/MappingBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Base Mapping Type — MappingBase","text":"[[: value map, default found [[<-: x value added .list: map list length: number items map names: keys map","code":""},{"path":[]},{"path":[]},{"path":"/reference/MappingBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Base Mapping Type — MappingBase","text":"MappingBase$new() MappingBase$keys() MappingBase$values() MappingBase$items() MappingBase$get() MappingBase$set() MappingBase$setv() MappingBase$remove() MappingBase$update() MappingBase$length() MappingBase$to_list() MappingBase$print() MappingBase$clone()","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$new(...)"},{"path":"/reference/MappingBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"... Ignored","code":""},{"path":"/reference/MappingBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"virtual class directly instantiated","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$keys()"},{"path":"/reference/MappingBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"keys map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$values()"},{"path":"/reference/MappingBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"list containing map values","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$items()"},{"path":"/reference/MappingBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"Return items map list","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$get(key, default = quote(expr = ))"},{"path":"/reference/MappingBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key fetch default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/MappingBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"value key map, default key found","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$set(key, value)"},{"path":"/reference/MappingBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/MappingBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self value added key","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$setv(...)"},{"path":"/reference/MappingBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"... Named arguments add self","code":""},{"path":"/reference/MappingBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self values ... added map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$remove(key)"},{"path":"/reference/MappingBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key remove","code":""},{"path":"/reference/MappingBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self key removed map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$update(map)"},{"path":"/reference/MappingBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"map mapping type update current map ","code":""},{"path":"/reference/MappingBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self value map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$length()"},{"path":"/reference/MappingBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"number items map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$to_list()"},{"path":"/reference/MappingBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"map list","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$print()"},{"path":"/reference/MappingBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Prints information map stdout invisibly returns self","code":""},{"path":"/reference/MappingBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Base Mapping Type — MappingBase","text":"objects class cloneable method.","code":""},{"path":"/reference/MappingBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$clone(deep = FALSE)"},{"path":"/reference/MappingBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PlatformConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Platform Configuration — PlatformConfig","title":"Platform Configuration — PlatformConfig","text":"R6 mapping type configuring various “parameters” multiple “platforms”, essentially serves multi-nested map inner map ScalarMap contained within ConfigList (middle map): {platform: {param: {key: value}}}","code":""},{"path":"/reference/PlatformConfig.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Platform Configuration — PlatformConfig","text":"tiledbsoma::MappingBase -> PlatformConfig","code":""},{"path":"/reference/PlatformConfig.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Platform Configuration — PlatformConfig","text":"tiledbsoma::MappingBase$initialize() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/PlatformConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Platform Configuration — PlatformConfig","text":"PlatformConfig$platforms() PlatformConfig$params() PlatformConfig$get() PlatformConfig$get_params() PlatformConfig$set() PlatformConfig$setv() PlatformConfig$clone()","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$platforms()"},{"path":"/reference/PlatformConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"names “platforms” (outer keys)","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$params(platform = NULL)"},{"path":"/reference/PlatformConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform “platform” pull parameter names (middle keys) ; pass TRUE return possible parameter names","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"parameter names (middle keys) platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$get(   platform,   param = NULL,   key = NULL,   default = quote(expr = ) )"},{"path":"/reference/PlatformConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) fetch param name “paramters” platform fetch; NULL, returns configuration platform key “key” (inner key) param platform fetch; NULL param passed, returns map param platform default Default value fetch key found; defaults null","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"value key param platform map, default key found","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$get_params(platform)"},{"path":"/reference/PlatformConfig.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) fetch","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"ConfigList platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$set(platform, param, key, value)"},{"path":"/reference/PlatformConfig.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) set param Name “parameter” (middle key) platform set key Inner key set value Value add key, NULL remove entry key; optionally provide platfomr, param, value ScalarMap update  param platform keys values value","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"\\[chainable\\] Invisibly returns self value added key param platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$setv(...)"},{"path":"/reference/PlatformConfig.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"... Ignored","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"Nothing; setv() disabled PlatformConfig objects","code":""},{"path":"/reference/PlatformConfig.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Platform Configuration — PlatformConfig","text":"objects class cloneable method.","code":""},{"path":"/reference/PlatformConfig.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$clone(deep = FALSE)"},{"path":"/reference/PlatformConfig.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PlatformConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Platform Configuration — PlatformConfig","text":"","code":"(cfg <- PlatformConfig$new()) #> <PlatformConfig> cfg$set(\"plat1\", \"op1\", \"a\", 1L) cfg #> <PlatformConfig> #>   plat1: <environment>  cfg$get(\"plat1\") #> <ConfigList> #>   op1: <environment> cfg$get(\"plat1\")$get(\"op1\") #> <ScalarMap> #>   a: 1"},{"path":"/reference/ReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Read Iterator Base class — ReadIter","title":"SOMA Read Iterator Base class — ReadIter","text":"SOMA Read Iterator Base class SOMA Read Iterator Base class","code":""},{"path":"/reference/ReadIter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMA Read Iterator Base class — ReadIter","text":"Virtual class allows read iteration SOMA reads.","code":""},{"path":[]},{"path":[]},{"path":"/reference/ReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Read Iterator Base class — ReadIter","text":"ReadIter$new() ReadIter$read_complete() ReadIter$read_next() ReadIter$concat() ReadIter$clone()","code":""},{"path":"/reference/ReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Read Iterator Base class — ReadIter","text":"Create (lifecycle: maturing).","code":""},{"path":"/reference/ReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$new(sr)"},{"path":"/reference/ReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Base class — ReadIter","text":"sr soma read pointer.","code":""},{"path":"/reference/ReadIter.html","id":"method-read-complete-","dir":"Reference","previous_headings":"","what":"Method read_complete()","title":"SOMA Read Iterator Base class — ReadIter","text":"@description Check iterated read complete (lifecycle: maturing).","code":""},{"path":"/reference/ReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$read_complete()"},{"path":"/reference/ReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Base class — ReadIter","text":"logical","code":""},{"path":"/reference/ReadIter.html","id":"method-read-next-","dir":"Reference","previous_headings":"","what":"Method read_next()","title":"SOMA Read Iterator Base class — ReadIter","text":"Read next chunk iterated read. read complete, returns NULL raises warning (lifecycle: maturing).","code":""},{"path":"/reference/ReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$read_next()"},{"path":"/reference/ReadIter.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Base class — ReadIter","text":"NULL one arrow::Table, matrixZeroBasedView.","code":""},{"path":"/reference/ReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Read Iterator Base class — ReadIter","text":"Concatenate remainder iterator.","code":""},{"path":"/reference/ReadIter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$concat()"},{"path":"/reference/ReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Read Iterator Base class — ReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/ReadIter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$clone(deep = FALSE)"},{"path":"/reference/ReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Base class — ReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAArrayBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Array Base Class — SOMAArrayBase","title":"SOMA Array Base Class — SOMAArrayBase","text":"SOMA Array Base Class SOMA Array Base Class","code":""},{"path":"/reference/SOMAArrayBase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMA Array Base Class — SOMAArrayBase","text":"Virtual base class add array-specific functionality SOMAObject class (lifecycle: maturing).","code":""},{"path":[]},{"path":"/reference/SOMAArrayBase.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Array Base Class — SOMAArrayBase","text":"tiledbsoma::SOMAObject -> SOMAArrayBase","code":""},{"path":"/reference/SOMAArrayBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Array Base Class — SOMAArrayBase","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMAObject$set_metadata()","code":""},{"path":"/reference/SOMAArrayBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Array Base Class — SOMAArrayBase","text":"SOMAArrayBase$open() SOMAArrayBase$close() SOMAArrayBase$allows_duplicates() SOMAArrayBase$is_sparse() SOMAArrayBase$schema() SOMAArrayBase$attributes() SOMAArrayBase$attrnames() SOMAArrayBase$dimensions() SOMAArrayBase$dimnames() SOMAArrayBase$colnames() SOMAArrayBase$index_column_names() SOMAArrayBase$shape() SOMAArrayBase$maxshape() SOMAArrayBase$non_empty_domain() SOMAArrayBase$ndim() SOMAArrayBase$print() SOMAArrayBase$clone()","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Open SOMA object read write.Note: open() considered internal called directly; use factory functions (eg. SOMASparseNDArrayOpen()) instead.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$open(mode = c(\"READ\", \"WRITE\", \"DELETE\"))"},{"path":"/reference/SOMAArrayBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Array Base Class — SOMAArrayBase","text":"mode Mode open object .","code":""},{"path":"/reference/SOMAArrayBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"Return sself.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Close SOMA array.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$close()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-allows-duplicates-","dir":"Reference","previous_headings":"","what":"Method allows_duplicates()","title":"SOMA Array Base Class — SOMAArrayBase","text":"array allow duplicates?","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$allows_duplicates()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"TRUE underlying TileDB array allows duplicates; otherwise FALSE.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-is-sparse-","dir":"Reference","previous_headings":"","what":"Method is_sparse()","title":"SOMA Array Base Class — SOMAArrayBase","text":"array sparse?","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$is_sparse()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"TRUE underlying TileDB array sparse; otherwise FALSE.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-schema-","dir":"Reference","previous_headings":"","what":"Method schema()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve array schema Arrow schema (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$schema()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"Arrow Schema object.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-attributes-","dir":"Reference","previous_headings":"","what":"Method attributes()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve array attributes.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$attributes()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"named list array attributes; entry contains following named entries: “name”: name attribute. “type”: datatype attribute. “ncells”: number values per dimension cell. “nullable”: attribute nullable. “filter_list”: list filter information; list contains following entries: “filter_type” “compression_level” “bit_width” “positive_delta” “float_bytewidth” “float_factor” “float_offset”","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-attrnames-","dir":"Reference","previous_headings":"","what":"Method attrnames()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve attribute names (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$attrnames()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"character vector array's attribute names.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-dimensions-","dir":"Reference","previous_headings":"","what":"Method dimensions()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve array dimensions (lifecycle: maturing)","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$dimensions()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"named list array dimensions; entry contains following named entries: “name”: name dimension. “type”: datatype dimension. “ncells”: number values per dimension cell. “domain”: domain dimension. “tile”: tile dimension. “filter_list”: list filter information; list contains following entries: “filter_type” “compression_level” “bit_width” “positive_delta” “float_bytewidth” “float_factor” “float_offset”","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-dimnames-","dir":"Reference","previous_headings":"","what":"Method dimnames()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve dimension names (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$dimnames()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"character vector array's dimension names.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-colnames-","dir":"Reference","previous_headings":"","what":"Method colnames()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve names columns, including dimensions attributes (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$colnames()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"character vector array's column names.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-index-column-names-","dir":"Reference","previous_headings":"","what":"Method index_column_names()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve names index (dimension) columns (lifecycle: maturing)","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$index_column_names()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"character vector array index (dimension) names","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-shape-","dir":"Reference","previous_headings":"","what":"Method shape()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve shape, .e. capacity dimension Attempted reads writes outside shape result run-time error: purpose shape. necessarily match bounds occupied cells within array. Using $resize(), may increased hard limit maxshape() reports (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$shape()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"named vector dimension length type dimension.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-maxshape-","dir":"Reference","previous_headings":"","what":"Method maxshape()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve hard limit array may resized using $resize() method (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$maxshape()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"named vector dimension length type dimension.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-non-empty-domain-","dir":"Reference","previous_headings":"","what":"Method non_empty_domain()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Returns named list minimum/maximum pairs, one per index column, smallest largest values written index column.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$non_empty_domain(index1 = FALSE, max_only = FALSE)"},{"path":"/reference/SOMAArrayBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Array Base Class — SOMAArrayBase","text":"index1 Return non-empty domain 1-based indices max_only Return max value per dimension, return vector. Names dropped (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"Named list minimum/maximum values, integer vector maximum values.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-ndim-","dir":"Reference","previous_headings":"","what":"Method ndim()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Retrieve number dimensions (lifecycle: maturing).","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$ndim()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"scalar number dimensions.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"SOMA Array Base Class — SOMAArrayBase","text":"Print-friendly representation object.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$print()"},{"path":"/reference/SOMAArrayBase.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Array Base Class — SOMAArrayBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Array Base Class — SOMAArrayBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$clone(deep = FALSE)"},{"path":"/reference/SOMAArrayBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Array Base Class — SOMAArrayBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Index obs/var soma_joinids given query result. Retrieve index given obs var coordinates query result. Coordinates outside query result return arrow::null().","code":""},{"path":[]},{"path":"/reference/SOMAAxisIndexer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"SOMAAxisIndexer$new() SOMAAxisIndexer$by_obs() SOMAAxisIndexer$by_var() SOMAAxisIndexer$clone()","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Create new SOMAAxisIndexer object.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$new(query)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"query SOMAExperimentAxisQuery object build indices .","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-by-obs-","dir":"Reference","previous_headings":"","what":"Method by_obs()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Get index given obs coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$by_obs(coords)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"coords vector arrow::Array numeric coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-by-var-","dir":"Reference","previous_headings":"","what":"Method by_var()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Get index given var coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$by_var(coords)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"coords vector arrow::Array numeric coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Axis Query — SOMAAxisQuery","title":"SOMA Axis Query — SOMAAxisQuery","text":"Construct single-axis query object combination coordinates /value filters use SOMAExperimentAxisQuery. (lifecycle: maturing) Per dimension, SOMAAxisQuery can value : None (.e., coords = NULL value_filter = NULL) - read values Coordinates - set coordinates axis dataframe index, expressed type format supported SOMADataFrame's read() method. SOMA value_filter across columns axis dataframe, expressed string , combination coordinates value filter.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQuery.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SOMA Axis Query — SOMAAxisQuery","text":"coords coordinates query. value_filter value filter query.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQuery.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Axis Query — SOMAAxisQuery","text":"SOMAAxisQuery$new() SOMAAxisQuery$clone()","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Axis Query — SOMAAxisQuery","text":"Create new SOMAAxisQuery object.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Axis Query — SOMAAxisQuery","text":"","code":"SOMAAxisQuery$new(value_filter = NULL, coords = NULL)"},{"path":"/reference/SOMAAxisQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Axis Query — SOMAAxisQuery","text":"value_filter Optional string containing logical expression used filter returned values. coords Optional indices specifying rows read: either vector appropriate type named list vectors corresponding dimension.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Axis Query — SOMAAxisQuery","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Axis Query — SOMAAxisQuery","text":"","code":"SOMAAxisQuery$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisQuery.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Axis Query — SOMAAxisQuery","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"Access SOMAExperimentAxisQuery results.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"obs arrow::Table containing obs query slice. var arrow::Table containing var query slice. measurement_name. X_layers named list arrow::Tables X layer.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQueryResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"SOMAAxisQueryResult$new() SOMAAxisQueryResult$clone()","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"Create new SOMAAxisQueryResult object.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"","code":"SOMAAxisQueryResult$new(obs, var, X_layers)"},{"path":"/reference/SOMAAxisQueryResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"obs, var arrow::Table containing obs var query slice. X_layers named list arrow::Tables, one X layer.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"","code":"SOMAAxisQueryResult$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisQueryResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollection.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Collection — SOMACollection","title":"SOMA Collection — SOMACollection","text":"Contains key-value mapping keys string names values SOMA-defined foundational composed type, including SOMACollection, SOMADataFrame, SOMADenseNDArray, SOMASparseNDArray, SOMAExperiment (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollection.html","id":"adding-new-objects-to-a-collection","dir":"Reference","previous_headings":"","what":"Adding new objects to a collection","title":"SOMA Collection — SOMACollection","text":"SOMACollection class provides number type-specific methods adding new object collection, add_new_sparse_ndarray() add_new_dataframe(). methods create new object add member SOMACollection. new object always inherit parent context (see SOMATileDBContext) , default, platform configuration (see PlatformConfig). However, user can override default platform configuration passing custom configuration platform_config argument.","code":""},{"path":"/reference/SOMACollection.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Collection — SOMACollection","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> SOMACollection","code":""},{"path":"/reference/SOMACollection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Collection — SOMACollection","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$close() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$length() tiledbsoma::SOMACollectionBase$names() tiledbsoma::SOMACollectionBase$open() tiledbsoma::SOMACollectionBase$print() tiledbsoma::SOMACollectionBase$remove() tiledbsoma::SOMACollectionBase$set() tiledbsoma::SOMACollectionBase$set_metadata()","code":""},{"path":"/reference/SOMACollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Collection — SOMACollection","text":"SOMACollection$clone()","code":""},{"path":"/reference/SOMACollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Collection — SOMACollection","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMACollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection — SOMACollection","text":"","code":"SOMACollection$clone(deep = FALSE)"},{"path":"/reference/SOMACollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection — SOMACollection","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Collection — SOMACollection","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-collection\")  (col <- SOMACollectionCreate(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fbe43e77d col$add_new_sparse_ndarray(\"sparse\", arrow::float64(), shape = c(100L, 100L)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fbe43e77d/sparse #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  col$close()  (col <- SOMACollectionOpen(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fbe43e77d col$names() #> [1] \"sparse\""},{"path":"/reference/SOMACollectionBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Collection Base Class — SOMACollectionBase","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Base class objects containing persistent collection SOMA objects, mapping string keys SOMA object (lifecycle: maturing).","code":""},{"path":[]},{"path":"/reference/SOMACollectionBase.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Collection Base Class — SOMACollectionBase","text":"tiledbsoma::SOMAObject -> SOMACollectionBase","code":""},{"path":"/reference/SOMACollectionBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Collection Base Class — SOMACollectionBase","text":"members list members collection.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Collection Base Class — SOMACollectionBase","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen()","code":""},{"path":"/reference/SOMACollectionBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Collection Base Class — SOMACollectionBase","text":"SOMACollectionBase$create() SOMACollectionBase$open() SOMACollectionBase$close() SOMACollectionBase$set() SOMACollectionBase$get() SOMACollectionBase$remove() SOMACollectionBase$length() SOMACollectionBase$names() SOMACollectionBase$set_metadata() SOMACollectionBase$add_new_collection() SOMACollectionBase$add_new_dataframe() SOMACollectionBase$add_new_dense_ndarray() SOMACollectionBase$add_new_sparse_ndarray() SOMACollectionBase$print() SOMACollectionBase$clone()","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Create SOMA collection (lifecycle: maturing).Note: $create() considered internal called directly; use factory functions (eg. SOMACollectionCreate()) instead.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$create()"},{"path":"/reference/SOMACollectionBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Open SOMA collection read write.Note: $open() considered internal called#' directly; use factory functions (eg. SOMACollectionOpen()) instead.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$open(mode = c(\"READ\", \"WRITE\", \"DELETE\"))"},{"path":"/reference/SOMACollectionBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"mode Mode open object .","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Close SOMA collection.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$close()"},{"path":"/reference/SOMACollectionBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA object collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$set(object, name = NULL, relative = NULL)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"object SOMA object. name name use object; defaults basename object$uri. relative optional logical value indicating whether new object's URI relative collection's URI. NULL (default), object's URI assumed relative unless tiledb:// URI.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Retrieve SOMA object name. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$get(name)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"name name object retrieve.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"SOMA object stored name.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Remove member. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$remove(name)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"name Name member remove.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Invisibly returns self","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Get number members collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$length()"},{"path":"/reference/SOMACollectionBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"number members collection.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Retrieve names members (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$names()"},{"path":"/reference/SOMACollectionBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"character vector member names.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add list metadata (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$set_metadata(metadata)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"metadata Named list metadata add.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-collection-","dir":"Reference","previous_headings":"","what":"Method add_new_collection()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA collection collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_collection(object, key)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"object SOMA collection object. key key added.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns object.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-dataframe-","dir":"Reference","previous_headings":"","what":"Method add_new_dataframe()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA data frame collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_dataframe(   key,   schema,   index_column_names,   domain,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. schema Arrow schema argument passed SOMADataFrame$create(). index_column_names Index column names passed SOMADataFrame$create(). domain SOMADataFrameCreate. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns newly created data frame stored key.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-dense-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_dense_ndarray()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA DenseNdArray collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_dense_ndarray(   key,   type,   shape,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns newly-created array stored key.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-sparse-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_sparse_ndarray()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA SparseNdArray collection (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_sparse_ndarray(   key,   type,   shape,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Returns newly-created array stored key.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Print-friendly representation object.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$print()"},{"path":"/reference/SOMACollectionBase.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$clone(deep = FALSE)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollectionCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Collection — SOMACollectionCreate","title":"Create a SOMA Collection — SOMACollectionCreate","text":"Factory function create SOMA collection writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Collection — SOMACollectionCreate","text":"","code":"SOMACollectionCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMACollectionCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Collection — SOMACollectionCreate","text":"uri URI TileDB object. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists. “resume”: attempt create new TileDB object; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp.","code":""},{"path":"/reference/SOMACollectionCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Collection — SOMACollectionCreate","text":"new SOMA collection stored uri opened writing.","code":""},{"path":"/reference/SOMACollectionCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Collection — SOMACollectionCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-collection\")  (col <- SOMACollectionCreate(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb55832559 col$add_new_sparse_ndarray(\"sparse\", arrow::float64(), shape = c(100L, 100L)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb55832559/sparse #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  col$close()  (col <- SOMACollectionOpen(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb55832559 col$names() #> [1] \"sparse\""},{"path":"/reference/SOMACollectionOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Collection — SOMACollectionOpen","title":"Open a SOMA Collection — SOMACollectionOpen","text":"Factory function open SOMA collection reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMACollectionOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Collection — SOMACollectionOpen","text":"","code":"SOMACollectionOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMACollectionOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Collection — SOMACollectionOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time. NULL, members accessed collection inherit timestamp.","code":""},{"path":"/reference/SOMACollectionOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SOMA Collection — SOMACollectionOpen","text":"SOMA collection stored uri opened mode mode.","code":""},{"path":"/reference/SOMACollectionOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a SOMA Collection — SOMACollectionOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-collection\")  (col <- SOMACollectionCreate(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb6f2c9b09 col$add_new_sparse_ndarray(\"sparse\", arrow::float64(), shape = c(100L, 100L)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb6f2c9b09/sparse #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  col$close()  (col <- SOMACollectionOpen(uri)) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/soma-collection29fb6f2c9b09 col$names() #> [1] \"sparse\""},{"path":"/reference/SOMAContextBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Base SOMA Context — SOMAContextBase","title":"Base SOMA Context — SOMAContextBase","text":"Virtual R6 mapping class SOMA context options. class used basis platform-specific contexts checks SOMA-specific context options","code":""},{"path":[]},{"path":"/reference/SOMAContextBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Base SOMA Context — SOMAContextBase","text":"tiledbsoma::MappingBase -> tiledbsoma::ScalarMap -> SOMAContextBase","code":""},{"path":"/reference/SOMAContextBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Base SOMA Context — SOMAContextBase","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/SOMAContextBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Base SOMA Context — SOMAContextBase","text":"SOMAContextBase$new() SOMAContextBase$set() SOMAContextBase$clone()","code":""},{"path":[]},{"path":"/reference/SOMAContextBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$new(config = NULL)"},{"path":"/reference/SOMAContextBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"config ...","code":""},{"path":"/reference/SOMAContextBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Base SOMA Context — SOMAContextBase","text":"virtual class directly instantiated","code":""},{"path":[]},{"path":"/reference/SOMAContextBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$set(key, value)"},{"path":"/reference/SOMAContextBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/SOMAContextBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Base SOMA Context — SOMAContextBase","text":"[chainable] Invisibly returns self value added key","code":""},{"path":"/reference/SOMAContextBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Base SOMA Context — SOMAContextBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAContextBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$clone(deep = FALSE)"},{"path":"/reference/SOMAContextBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMADataFrame — SOMADataFrame","title":"SOMADataFrame — SOMADataFrame","text":"SOMA data frame  multi-column table must contain column called “soma_joinid” type int64, contains unique value row intended act join key objects, SOMASparseNDArray (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMADataFrame — SOMADataFrame","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMAArrayBase -> SOMADataFrame","code":""},{"path":"/reference/SOMADataFrame.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMADataFrame — SOMADataFrame","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMAObject$set_metadata() tiledbsoma::SOMAArrayBase$allows_duplicates() tiledbsoma::SOMAArrayBase$attributes() tiledbsoma::SOMAArrayBase$attrnames() tiledbsoma::SOMAArrayBase$close() tiledbsoma::SOMAArrayBase$colnames() tiledbsoma::SOMAArrayBase$dimensions() tiledbsoma::SOMAArrayBase$dimnames() tiledbsoma::SOMAArrayBase$index_column_names() tiledbsoma::SOMAArrayBase$is_sparse() tiledbsoma::SOMAArrayBase$ndim() tiledbsoma::SOMAArrayBase$non_empty_domain() tiledbsoma::SOMAArrayBase$open() tiledbsoma::SOMAArrayBase$print() tiledbsoma::SOMAArrayBase$schema()","code":""},{"path":"/reference/SOMADataFrame.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMADataFrame — SOMADataFrame","text":"SOMADataFrame$create() SOMADataFrame$write() SOMADataFrame$read() SOMADataFrame$update() SOMADataFrame$levels() SOMADataFrame$shape() SOMADataFrame$maxshape() SOMADataFrame$domain() SOMADataFrame$maxdomain() SOMADataFrame$tiledbsoma_has_upgraded_domain() SOMADataFrame$tiledbsoma_resize_soma_joinid_shape() SOMADataFrame$tiledbsoma_upgrade_domain() SOMADataFrame$change_domain() SOMADataFrame$clone()","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMADataFrame — SOMADataFrame","text":"Create SOMA data frame (lifecycle: maturing).Note: $create() considered internal called directly; use factory functions (eg. SOMADataFrameCreate()) instead.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$create(   schema,   index_column_names = c(\"soma_joinid\"),   domain = NULL,   platform_config = NULL )"},{"path":"/reference/SOMADataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"schema Arrow schema. index_column_names vector column names use user-defined index columns. named columns must exist schema, least one index column name required. domain optional list specifying domain index column. slot list must name name index column, value length-two vector consisting minimum maximum values storable index column. example, single int64-valued index column soma_joinid, domain might list(soma_joinid=c(100, 200)) indicate values 100 200, inclusive, can stored column.  provided, sequence must length index_column_names, index-column domain specified.  omitted entirely, NULL given dimension, corresponding index-column domain use empty range, data writes fail “range set outside current domain”. Unless particular reason , always provide desired domain create time: optional strongly recommended parameter. See also change_domain allows expand domain create. platform_config platform configuration object","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Returns self.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMADataFrame — SOMADataFrame","text":"Write values data frame (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$write(values)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"values Arrow table Arrow record batch containing columns, including index columns. schema values must match schema data frame.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMADataFrame — SOMADataFrame","text":"Read user-defined subset data, addressed data frame indexing column, optionally filtered (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$read(   coords = NULL,   column_names = NULL,   value_filter = NULL,   result_order = \"auto\",   log_level = \"auto\" )"},{"path":"/reference/SOMADataFrame.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"coords Optional named list indices specifying rows read; (named) list element corresponds dimension name. column_names Optional character vector column names return. value_filter Optional string containing logical expression used filter returned values. See tiledb::parse_query_condition() information. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value “warn”.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Arrow table TableReadIter","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"SOMADataFrame — SOMADataFrame","text":"Update (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$update(values, row_index_name = NULL)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"values data frame, Arrow table, Arrow record batch. row_index_name optional scalar character. provided, values argument data frame row names, row names extracted added new column data frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMADataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMADataFrame — SOMADataFrame","text":"Update existing SOMADataFrame add remove columns based input: columns present current SOMADataFrame absent new values dropped. columns absent current SOMADataFrame present new values added. columns present left alone, exception values different type column, entire update fail attribute types changed. Furthermore, values must contain number rows current SOMADataFrame.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Invisibly returns NULL","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-levels-","dir":"Reference","previous_headings":"","what":"Method levels()","title":"SOMADataFrame — SOMADataFrame","text":"Get levels enumerated (factor) column.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$levels(column_names = NULL, simplify = TRUE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"column_names Optional character vector column names pull enumeration levels ; defaults enumerated columns. simplify Simplify result vector matrix.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"simplify returns one following: vector one enumerated column. matrix multiple enumerated columns number levels. named list multiple enumerated columns differing numbers levels. Otherwise, returns named list.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-shape-","dir":"Reference","previous_headings":"","what":"Method shape()","title":"SOMADataFrame — SOMADataFrame","text":"Retrieve shape; SOMADataFrames shapeless, simply raises error.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$shape()"},{"path":"/reference/SOMADataFrame.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"None, instead .NotYetImplemented() error raised.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-maxshape-","dir":"Reference","previous_headings":"","what":"Method maxshape()","title":"SOMADataFrame — SOMADataFrame","text":"Retrieve max shape; SOMADataFrames shapeless, simply raises error.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$maxshape()"},{"path":"/reference/SOMADataFrame.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"None, instead .NotYetImplemented() error raised.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-domain-","dir":"Reference","previous_headings":"","what":"Method domain()","title":"SOMADataFrame — SOMADataFrame","text":"Returns named list minimum/maximum pairs, one per index column, currently storable index column data frame. can resized maxdomain (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$domain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Named list minimum/maximum values.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-maxdomain-","dir":"Reference","previous_headings":"","what":"Method maxdomain()","title":"SOMADataFrame — SOMADataFrame","text":"Returns named list minimum/maximum pairs, one per index column, limits data frame can domain resized (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$maxdomain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Named list minimum/maximum values.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-has-upgraded-domain-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_has_upgraded_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Test array upgraded resizeable domain feature TileDB-SOMA 1.15, array created support, $upgrade_domain() applied (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_has_upgraded_domain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Returns TRUE array upgraded resizable domain feature; otherwise, returns FALSE.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-resize-soma-joinid-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_resize_soma_joinid_shape()","title":"SOMADataFrame — SOMADataFrame","text":"Increases shape data frame soma_joinid index column, indeed index column, leaving index columns -. soma_joinid index column, change made. special case upgrade_domain(), simpler keystroke, handles common case data frame domain expansion. Raises error data frame already domain; case please call $tiledbsoma_upgrade_domain().","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_resize_soma_joinid_shape(new_shape)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_shape integer, greater equal 1 + soma_joinid domain slot.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Invisibly returns NULL","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-upgrade-domain-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_upgrade_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Allows set domain SOMADataFrame, SOMADataFrame domain set yet. argument must list pairs low/high values desired domain, one pair per index column. string index columns, must offer low/high pair c(\"\", \"\"), NULL. check_only True, returns whether operation succeed attempted, reason . domain requested must contained within $maxdomain() returns.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_upgrade_domain(new_domain, check_only = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_domain named list, keyed index-column name, values two-element vectors containing desired lower upper bounds domain. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"check_only, returns empty string error detected, else description error. Otherwise, invisibly returns NULL","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-change-domain-","dir":"Reference","previous_headings":"","what":"Method change_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Allows set domain SOMADataFrame, SOMADataFrame already domain set yet. argument must list pairs low/high values desired domain, one pair per index column. string index columns, must offer low/high pair c(\"\", \"\"), NULL. check_only True, returns whether operation succeed attempted, reason . return value domain must contained within requested new_domain, requested new_domain must contained within return value $maxdomain() (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$change_domain(new_domain, check_only = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_domain named list, keyed index-column name, values two-element vectors containing desired lower upper bounds domain. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"check_only, returns empty string error detected, else description error. Otherwise, invisibly returns NULL","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMADataFrame — SOMADataFrame","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$clone(deep = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMADataFrame — SOMADataFrame","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-data-frame\") df <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   group = sample(factor(c(\"g1\", \"g2\")), size = 100L, replace = TRUE),   nCount = stats::rbinom(100L, 10L, 0.3) ) (sch <- arrow::infer_schema(df)) #> Schema #> soma_joinid: int64 #> group: dictionary<values=string, indices=int8> #> nCount: int32 (sdf <- SOMADataFrameCreate(uri, sch, domain = list(soma_joinid = c(0, 100)))) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb77f8d4d1 #>   dimensions: soma_joinid  #>   attributes: group, nCount  sdf$write(arrow::as_arrow_table(df, schema = sch)) sdf$close()  (sdf <- SOMADataFrameOpen(uri)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb77f8d4d1 #>   dimensions: soma_joinid  #>   attributes: group, nCount  head(as.data.frame(sdf$read()$concat())) #>   soma_joinid group nCount #> 1           0    g2      3 #> 2           1    g1      4 #> 3           2    g2      1 #> 4           3    g2      2 #> 5           4    g1      2 #> 6           5    g1      4"},{"path":"/reference/SOMADataFrameCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Data Frame — SOMADataFrameCreate","title":"Create a SOMA Data Frame — SOMADataFrameCreate","text":"Factory function create SOMA data frame writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrameCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Data Frame — SOMADataFrameCreate","text":"","code":"SOMADataFrameCreate(   uri,   schema,   index_column_names = c(\"soma_joinid\"),   domain = NULL,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   soma_context = NULL )"},{"path":"/reference/SOMADataFrameCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Data Frame — SOMADataFrameCreate","text":"uri URI TileDB object. schema Arrow schema argument SOMA dataframe. index_column_names vector column names use user-defined index columns; named columns must exist schema, least one index column name required. domain optional list 2-element vectors specifying domain index column. vector pair consisting minimum maximum values storable index column. example, single int64-valued index column, domain might c(100, 200) indicate values 100 200, inclusive, can stored column. provided, list must length index_column_names, index-column domain specified. omitted entirely, NULL given dimension, corresponding index-column domain use minimum maximum possible values column's datatype. makes SOMA data frame growable. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists. “resume”: attempt create new TileDB object; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. soma_context SOMA context created soma_context().","code":""},{"path":"/reference/SOMADataFrameCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Data Frame — SOMADataFrameCreate","text":"new SOMA data frame stored uri opened writing.","code":""},{"path":"/reference/SOMADataFrameCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Data Frame — SOMADataFrameCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-data-frame\") df <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   group = sample(factor(c(\"g1\", \"g2\")), size = 100L, replace = TRUE),   nCount = stats::rbinom(100L, 10L, 0.3) ) (sch <- arrow::infer_schema(df)) #> Schema #> soma_joinid: int64 #> group: dictionary<values=string, indices=int8> #> nCount: int32 (sdf <- SOMADataFrameCreate(uri, sch, domain = list(soma_joinid = c(0, 100)))) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb6e9f6135 #>   dimensions: soma_joinid  #>   attributes: group, nCount  sdf$write(arrow::as_arrow_table(df, schema = sch)) sdf$close()  (sdf <- SOMADataFrameOpen(uri)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb6e9f6135 #>   dimensions: soma_joinid  #>   attributes: group, nCount  head(as.data.frame(sdf$read()$concat())) #>   soma_joinid group nCount #> 1           0    g1      1 #> 2           1    g1      4 #> 3           2    g1      2 #> 4           3    g2      0 #> 5           4    g1      1 #> 6           5    g1      4"},{"path":"/reference/SOMADataFrameOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Data Frame — SOMADataFrameOpen","title":"Open a SOMA Data Frame — SOMADataFrameOpen","text":"Factory function open SOMA data frame reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMADataFrameOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Data Frame — SOMADataFrameOpen","text":"","code":"SOMADataFrameOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   soma_context = NULL )"},{"path":"/reference/SOMADataFrameOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Data Frame — SOMADataFrameOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time. soma_context SOMA context created soma_context().","code":""},{"path":"/reference/SOMADataFrameOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SOMA Data Frame — SOMADataFrameOpen","text":"SOMA data frame stored uri opened mode mode.","code":""},{"path":"/reference/SOMADataFrameOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a SOMA Data Frame — SOMADataFrameOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-data-frame\") df <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   group = sample(factor(c(\"g1\", \"g2\")), size = 100L, replace = TRUE),   nCount = stats::rbinom(100L, 10L, 0.3) ) (sch <- arrow::infer_schema(df)) #> Schema #> soma_joinid: int64 #> group: dictionary<values=string, indices=int8> #> nCount: int32 (sdf <- SOMADataFrameCreate(uri, sch, domain = list(soma_joinid = c(0, 100)))) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb4fff546e #>   dimensions: soma_joinid  #>   attributes: group, nCount  sdf$write(arrow::as_arrow_table(df, schema = sch)) sdf$close()  (sdf <- SOMADataFrameOpen(uri)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-data-frame29fb4fff546e #>   dimensions: soma_joinid  #>   attributes: group, nCount  head(as.data.frame(sdf$read()$concat())) #>   soma_joinid group nCount #> 1           0    g2      0 #> 2           1    g1      4 #> 3           2    g2      6 #> 4           3    g2      3 #> 5           4    g1      2 #> 6           5    g2      1"},{"path":"/reference/SOMADenseNDArray.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Dense Nd-Array — SOMADenseNDArray","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"SOMADenseNDArray dense, N-dimensional array primitive type, offset (zero-based) int64 integer indexing dimension domain [0, maxInt64). SOMADenseNDArray user-defined schema, includes: type: primitive type, expressed Arrow type (e.g., int64, float32, etc), indicating type data contained within array. shape: shape array, .e., number length dimension. soft limit can increased using $resize() maxshape. maxshape: hard limit shape may increased using $resize(). dimensions must positive, non-zero length, must 1 dimensions. default “fill” value SOMADenseNDArray zero null value array type (e.g., arrow::float32() defaults 0.0).","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMAArrayBase -> tiledbsoma::SOMANDArrayBase -> SOMADenseNDArray","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMAObject$set_metadata() tiledbsoma::SOMAArrayBase$allows_duplicates() tiledbsoma::SOMAArrayBase$attributes() tiledbsoma::SOMAArrayBase$attrnames() tiledbsoma::SOMAArrayBase$close() tiledbsoma::SOMAArrayBase$colnames() tiledbsoma::SOMAArrayBase$dimensions() tiledbsoma::SOMAArrayBase$dimnames() tiledbsoma::SOMAArrayBase$index_column_names() tiledbsoma::SOMAArrayBase$is_sparse() tiledbsoma::SOMAArrayBase$maxshape() tiledbsoma::SOMAArrayBase$ndim() tiledbsoma::SOMAArrayBase$non_empty_domain() tiledbsoma::SOMAArrayBase$open() tiledbsoma::SOMAArrayBase$print() tiledbsoma::SOMAArrayBase$schema() tiledbsoma::SOMAArrayBase$shape() tiledbsoma::SOMANDArrayBase$create() tiledbsoma::SOMANDArrayBase$resize() tiledbsoma::SOMANDArrayBase$set_data_type() tiledbsoma::SOMANDArrayBase$tiledbsoma_has_upgraded_shape() tiledbsoma::SOMANDArrayBase$tiledbsoma_upgrade_shape()","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"SOMADenseNDArray$read_arrow_table() SOMADenseNDArray$read_dense_matrix() SOMADenseNDArray$write() SOMADenseNDArray$clone()","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-read-arrow-table-","dir":"Reference","previous_headings":"","what":"Method read_arrow_table()","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"Read Arrow table (lifecycle: maturing).","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$read_arrow_table(   coords = NULL,   result_order = \"auto\",   log_level = \"auto\" )"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value “warn”.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"Arrow table.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-read-dense-matrix-","dir":"Reference","previous_headings":"","what":"Method read_dense_matrix()","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"Read dense matrix (lifecycle: maturing).","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$read_dense_matrix(   coords = NULL,   result_order = \"ROW_MAJOR\",   log_level = \"warn\" )"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value “warn”.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"matrix.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"Write matrix data array (lifecycle: maturing).Note: $write() method currently limited writing two-dimensional matrices (lifecycle: maturing).","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$write(values, coords = NULL)"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"values matrix. Character dimension names ignored SOMANDArrays use integer indexing. coords list integer vectors, one dimension, length equal number values write. NULL, default, values taken row column names values.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$clone(deep = FALSE)"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Dense Nd-Array — SOMADenseNDArray","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-dense-array\") mat <- matrix(stats::rnorm(100L ^ 2L), nrow = 100L, ncol = 100L) mat[1:3, 1:5] #>            [,1]       [,2]        [,3]       [,4]        [,5] #> [1,]  1.1796642  0.5143278  0.90426912  1.3364468 -1.54103029 #> [2,] -0.2569212 -1.7513751  0.07964921 -0.8603562 -0.31031012 #> [3,] -1.0563361  0.8935975 -1.25882722  0.6665378 -0.02010818  (arr <- SOMADenseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb52c94a12 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMADenseNDArrayOpen(uri)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb52c94a12 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$read_arrow_table() #> Table #> 10000 rows x 1 columns #> $soma_data <double not null>"},{"path":"/reference/SOMADenseNDArrayCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","title":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","text":"Factory function create SOMA dense ND array writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","text":"","code":"SOMADenseNDArrayCreate(   uri,   type,   shape,   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","text":"uri URI TileDB object. type Arrow type defining type element array. shape vector integers defining shape array. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp.","code":""},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","text":"new SOMA dense ND array stored uri opened writing.","code":""},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Dense ND Array — SOMADenseNDArrayCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-dense-array\") mat <- matrix(stats::rnorm(100L ^ 2L), nrow = 100L, ncol = 100L) mat[1:3, 1:5] #>             [,1]       [,2]       [,3]      [,4]      [,5] #> [1,]  0.03052902 -1.2368860 -0.6614749 0.5568221 0.1034234 #> [2,] -0.04787012 -0.5746649 -1.2197908 0.5519798 0.1276377 #> [3,]  1.59039312  0.1616978 -0.4527197 0.6139520 2.0793888  (arr <- SOMADenseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb465b0bd6 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMADenseNDArrayOpen(uri)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb465b0bd6 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$read_arrow_table() #> Table #> 10000 rows x 1 columns #> $soma_data <double not null>"},{"path":"/reference/SOMADenseNDArrayOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","title":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"Factory function open SOMA dense ND array reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"","code":"SOMADenseNDArrayOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time.","code":""},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"SOMA dense ND array stored uri opened mode mode.","code":""},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-dense-array\") mat <- matrix(stats::rnorm(100L ^ 2L), nrow = 100L, ncol = 100L) mat[1:3, 1:5] #>            [,1]        [,2]       [,3]      [,4]       [,5] #> [1,]  1.6560563 -0.32979219 -0.7966739 1.4496873  0.1260614 #> [2,] -0.1465172  0.46206288 -1.6059548 0.2504118 -0.3673699 #> [3,]  0.1286809  0.07297064  0.5875243 0.7592450 -0.5737183  (arr <- SOMADenseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb694d5004 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMADenseNDArrayOpen(uri)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-dense-array29fb694d5004 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$read_arrow_table() #> Table #> 10000 rows x 1 columns #> $soma_data <double not null>"},{"path":"/reference/SOMAExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Experiment — SOMAExperiment","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment specialized SOMACollection, representing one modes measurement across single collection cells (aka “multimodal dataset”) pre-defined fields: obs ms (see Active Bindings details) (lifecycle: maturing).","code":""},{"path":"/reference/SOMAExperiment.html","id":"adding-new-objects-to-a-collection","dir":"Reference","previous_headings":"","what":"Adding new objects to a collection","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment class provides number type-specific methods adding new object collection, add_new_sparse_ndarray() add_new_dataframe(). methods create new object add member SOMAExperiment. new object always inherit parent context (see SOMATileDBContext) , default, platform configuration (see PlatformConfig). However, user can override default platform configuration passing custom configuration platform_config argument.","code":""},{"path":"/reference/SOMAExperiment.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Experiment — SOMAExperiment","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> SOMAExperiment","code":""},{"path":"/reference/SOMAExperiment.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Experiment — SOMAExperiment","text":"obs SOMADataFrame containing primary annotations observation axis. contents soma_joinid column define observation index domain, obs_id. observations SOMAExperiment must defined data frame. ms SOMACollection named SOMAMeasurements.","code":""},{"path":"/reference/SOMAExperiment.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Experiment — SOMAExperiment","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$close() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$length() tiledbsoma::SOMACollectionBase$names() tiledbsoma::SOMACollectionBase$open() tiledbsoma::SOMACollectionBase$print() tiledbsoma::SOMACollectionBase$remove() tiledbsoma::SOMACollectionBase$set() tiledbsoma::SOMACollectionBase$set_metadata()","code":""},{"path":"/reference/SOMAExperiment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment$axis_query() SOMAExperiment$update_obs() SOMAExperiment$update_var() SOMAExperiment$clone()","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-axis-query-","dir":"Reference","previous_headings":"","what":"Method axis_query()","title":"SOMA Experiment — SOMAExperiment","text":"Subset extract data SOMAMeasurement querying obs/var axes.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$axis_query(measurement_name, obs_query = NULL, var_query = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"measurement_name name measurement query. obs_query, var_query SOMAAxisQuery object obs/var axis.","code":""},{"path":"/reference/SOMAExperiment.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperimentAxisQuery object.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-update-obs-","dir":"Reference","previous_headings":"","what":"Method update_obs()","title":"SOMA Experiment — SOMAExperiment","text":"Update obs data frame add remove columns. See SOMADataFrame$update() details.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$update_obs(values, row_index_name = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"values data frame, Arrow table, Arrow record batch. row_index_name optional scalar character. provided, values argument data frame row names, row names extracted added new column data frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-update-var-","dir":"Reference","previous_headings":"","what":"Method update_var()","title":"SOMA Experiment — SOMAExperiment","text":"Update var data frame add remove columns. See SOMADataFrame$update() details.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$update_var(values, measurement_name, row_index_name = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"values data frame, Arrow table, Arrow record batch. measurement_name name SOMAMeasurement whose var updated. row_index_name optional scalar character. provided, values argument data frame row names, row names extracted added new column data frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Experiment — SOMAExperiment","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$clone(deep = FALSE)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Experiment — SOMAExperiment","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-experiment\") obs <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   obs_id = paste0(\"cell_\", seq_len(100L)) ) sch <- arrow::infer_schema(obs)  (exp <- SOMAExperimentCreate(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb2319c2b4 sdf <- exp$add_new_dataframe(   \"obs\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(obs, schema = sch)) sdf$close() exp$close()  (exp <- SOMAExperimentOpen(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb2319c2b4 exp$obs #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-experiment29fb2319c2b4/obs #>   dimensions: soma_joinid  #>   attributes: obs_id"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Perform axis-based query SOMAExperiment. SOMAExperimentAxisQuery allows easy selection extraction data single SOMAMeasurement SOMAExperiment, obs/var (axis) coordinates /value filter. primary use class slicing SOMAExperiment X layers obs var value /coordinates. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"x-layer-support","dir":"Reference","previous_headings":"","what":"X Layer Support","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Slicing SOMASparseNDArray X matrices supported; slicing SOMADenseNDArray supported time.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"result-size","dir":"Reference","previous_headings":"","what":"Result Size","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SOMAExperimentAxisQuery query class assumes can store full result axis dataframe queries memory, provides incremental access underlying X NDArray. Accessors n_obs n_vars codify class.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"experiment parent SOMAExperiment object. indexer SOMAAxisIndexer object. obs_query obs SOMAAxisQuery object. var_query var SOMAAxisQuery object. n_obs number obs axis query results. n_vars number var axis query results. obs_df obs SOMADataFrame object. var_df var SOMADataFrame object specified measurement_name. ms SOMAMeasurement object specified measurement_name.","code":""},{"path":[]},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SOMAExperimentAxisQuery$new() SOMAExperimentAxisQuery$obs() SOMAExperimentAxisQuery$var() SOMAExperimentAxisQuery$obs_joinids() SOMAExperimentAxisQuery$var_joinids() SOMAExperimentAxisQuery$X() SOMAExperimentAxisQuery$obsm() SOMAExperimentAxisQuery$varm() SOMAExperimentAxisQuery$obsp() SOMAExperimentAxisQuery$varp() SOMAExperimentAxisQuery$read() SOMAExperimentAxisQuery$to_sparse_matrix() SOMAExperimentAxisQuery$to_seurat() SOMAExperimentAxisQuery$to_seurat_assay() SOMAExperimentAxisQuery$to_seurat_reduction() SOMAExperimentAxisQuery$to_seurat_graph() SOMAExperimentAxisQuery$to_single_cell_experiment() SOMAExperimentAxisQuery$clone()","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Create new SOMAExperimentAxisQuery object.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$new(   experiment,   measurement_name,   obs_query = NULL,   var_query = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"experiment SOMAExperiment object. measurement_name name measurement query. obs_query, var_query SOMAAxisQuery object obs/var axis.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obs-","dir":"Reference","previous_headings":"","what":"Method obs()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve obs TableReadIter","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obs(column_names = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"column_names character vector column names retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-var-","dir":"Reference","previous_headings":"","what":"Method var()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve var arrow::Table","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$var(column_names = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"column_names character vector column names retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obs-joinids-","dir":"Reference","previous_headings":"","what":"Method obs_joinids()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve soma_joinids arrow::Array obs.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obs_joinids()"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-var-joinids-","dir":"Reference","previous_headings":"","what":"Method var_joinids()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve soma_joinids arrow::Array var.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$var_joinids()"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-x-","dir":"Reference","previous_headings":"","what":"Method X()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves X layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$X(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obsm-","dir":"Reference","previous_headings":"","what":"Method obsm()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves obsm layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obsm(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-varm-","dir":"Reference","previous_headings":"","what":"Method varm()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves varm layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$varm(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obsp-","dir":"Reference","previous_headings":"","what":"Method obsp()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves obsp layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obsp(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-varp-","dir":"Reference","previous_headings":"","what":"Method varp()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves varp layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$varp(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Reads entire query result list arrow::Tables. low-level routine intended used loaders -core formats, Seurat, can created resulting Tables.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$read(   X_layers = NULL,   obs_column_names = NULL,   var_column_names = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers name(s) X layer(s) read return. obs_column_names, var_column_names Specify column names var obs dataframes read return.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method to_sparse_matrix()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve collection layer sparse matrix named dimensions. Load layer X, obsm, varm, obsp, varp collections sparse matrix. default matrix dimensions named using soma_joinid values specified layer's dimensions (e.g., soma_dim_0). However, dimensions can named using values obs var column uniquely identifies record specifying obs_index var_index arguments. layers obsm varm, column axis (axis indexed “obs” “var”) set range values present “soma_dim_1”; ensures gaps axis preserved (eg. query “obs” results selecting entries zero given PC)","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_sparse_matrix(   collection,   layer_name,   obs_index = NULL,   var_index = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"collection SOMACollection containing layer interest, either: \"X\", \"obsm\", \"varm\", \"obsp\", \"varp\". layer_name Name layer retrieve collection. obs_index, var_index Name column obs var (var_index) containing values used dimension labels resulting matrix. Whether values used row column labels depends selected collection:","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Matrix::sparseMatrix","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-","dir":"Reference","previous_headings":"","what":"Method to_seurat()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat(   X_layers = c(counts = \"counts\", data = \"logcounts\"),   obs_index = NULL,   var_index = NULL,   obs_column_names = NULL,   var_column_names = NULL,   obsm_layers = NULL,   varm_layers = NULL,   obsp_layers = NULL,   drop_levels = FALSE,   version = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers named character X layers add Seurat assay names names Seurat slots values names layers within X; names one : “counts” add layer counts “data” add layer data “scale.data” add layer scale.data least one “counts” “data” required obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default obs_column_names Names columns obs add cell-level meta data; default, loads columns var_column_names Names columns var add feature-level meta data; default, loads columns obsm_layers Names arrays obsm add cell embeddings; pass FALSE suppress loading dimensional reductions; default, loads dimensional reduction information varm_layers Named vector arrays varm load feature loadings; names must names arrays obsm (eg. varm_layers = c(X_pca = \"PCs\")); pass FALSE suppress loading feature loadings; try determine varm_layers obsm_layers obsp_layers Names arrays obsp load Graphs; default, loads graphs drop_levels Drop unused levels obs var factor columns version Assay version read query ; default, try infer assay type measurement ","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Seurat object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-assay-","dir":"Reference","previous_headings":"","what":"Method to_seurat_assay()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat Assay","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_assay(   X_layers = c(counts = \"counts\", data = \"logcounts\"),   obs_index = NULL,   var_index = NULL,   var_column_names = NULL,   drop_levels = FALSE,   version = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers named character X layers add Seurat assay names names Seurat slots values names layers within X; names one : “counts” add layer counts “data” add layer data “scale.data” add layer scale.data least one “counts” “data” required obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default var_column_names Names columns var add feature-level meta data; default, loads columns drop_levels Drop unused levels var factor columns version Assay version read query ; default, try infer assay type measurement ","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Assay object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-reduction-","dir":"Reference","previous_headings":"","what":"Method to_seurat_reduction()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat dimensional reduction","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_reduction(   obsm_layer,   varm_layer = NULL,   obs_index = NULL,   var_index = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"obsm_layer Name array obsm load cell embeddings varm_layer Name array varm load feature loadings; default, try determine varm_layer obsm_layer obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"DimReduc object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-graph-","dir":"Reference","previous_headings":"","what":"Method to_seurat_graph()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat graph","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_graph(obsp_layer, obs_index = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"obsp_layer Name array obsp load graph obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Graph object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-single-cell-experiment-","dir":"Reference","previous_headings":"","what":"Method to_single_cell_experiment()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query SingleCellExperiment object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_single_cell_experiment(   X_layers = NULL,   obs_index = NULL,   var_index = NULL,   obs_column_names = NULL,   var_column_names = NULL,   obsm_layers = NULL,   obsp_layers = NULL,   varp_layers = NULL,   drop_levels = FALSE )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers character vector X layers add assays main experiment; may optionally named set name resulting assay (eg. X_layers = c(counts = \"raw\") load X layer “raw” assay “counts”); default, loads X layers obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default obs_column_names Names columns obs add colData; default, loads columns var_column_names Names columns var add rowData; default, loads columns obsm_layers Names arrays obsm add reduced dimensions; pass FALSE suppress loading reduced dimensions; default, loads reduced dimensions obsp_layers Names arrays obsp load SelfHits; default, loads graphs varp_layers Names arrays varp load SelfHits; default, loads networks drop_levels Drop unused levels obs var factor columns","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SingleCellExperiment object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$clone(deep = FALSE)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Experiment — SOMAExperimentCreate","title":"Create a SOMA Experiment — SOMAExperimentCreate","text":"Factory function create SOMA experiment writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Experiment — SOMAExperimentCreate","text":"","code":"SOMAExperimentCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAExperimentCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Experiment — SOMAExperimentCreate","text":"uri URI TileDB object. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists. “resume”: attempt create new TileDB object; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp.","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Experiment — SOMAExperimentCreate","text":"new SOMA experiment stored uri opened writing.","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Experiment — SOMAExperimentCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-experiment\") obs <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   obs_id = paste0(\"cell_\", seq_len(100L)) ) sch <- arrow::infer_schema(obs)  (exp <- SOMAExperimentCreate(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb3d455a35 sdf <- exp$add_new_dataframe(   \"obs\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(obs, schema = sch)) sdf$close() exp$close()  (exp <- SOMAExperimentOpen(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb3d455a35 exp$obs #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-experiment29fb3d455a35/obs #>   dimensions: soma_joinid  #>   attributes: obs_id"},{"path":"/reference/SOMAExperimentOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Experiment — SOMAExperimentOpen","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"Factory function open SOMA experiment reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMAExperimentOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"","code":"SOMAExperimentOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAExperimentOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time. NULL, members accessed collection inherit timestamp.","code":""},{"path":"/reference/SOMAExperimentOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"SOMA experiment stored uri opened mode mode.","code":""},{"path":"/reference/SOMAExperimentOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-experiment\") obs <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   obs_id = paste0(\"cell_\", seq_len(100L)) ) sch <- arrow::infer_schema(obs)  (exp <- SOMAExperimentCreate(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb52048963 sdf <- exp$add_new_dataframe(   \"obs\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(obs, schema = sch)) sdf$close() exp$close()  (exp <- SOMAExperimentOpen(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-experiment29fb52048963 exp$obs #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-experiment29fb52048963/obs #>   dimensions: soma_joinid  #>   attributes: obs_id"},{"path":"/reference/SOMAMeasurement.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Measurement — SOMAMeasurement","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement sub-element SOMAExperiment, otherwise specialized SOMACollection pre-defined fields: X, var, obsm/varm, obsp/varp (see Active Bindings details) (lifecycle: maturing).","code":""},{"path":"/reference/SOMAMeasurement.html","id":"adding-new-objects-to-a-collection","dir":"Reference","previous_headings":"","what":"Adding new objects to a collection","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement class provides number type-specific methods adding new object collection, add_new_sparse_ndarray() add_new_dataframe(). methods create new object add member SOMAMeasurement. new object always inherit parent context (see SOMATileDBContext) , default, platform configuration (see PlatformConfig). However, user can override default platform configuration passing custom configuration platform_config argument.","code":""},{"path":"/reference/SOMAMeasurement.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Measurement — SOMAMeasurement","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMACollectionBase -> SOMAMeasurement","code":""},{"path":"/reference/SOMAMeasurement.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Measurement — SOMAMeasurement","text":"var SOMADataFrame containing primary annotations variable axis, variables measurement (.e., annotates columns X). contents soma_joinid column define variable index domain, var_id. variables measurement must defined data frame. X SOMACollection SOMASparseNDArrays, contains measured feature values indexed [obsid, varid]. obsm SOMACollection SOMADenseNDArrays containing annotations observation axis. array indexed obsid shape obs. obsp SOMACollection SOMASparseNDArrays containing pairwise annotations observation axis indexed [obsid_1, obsid_2]. varm SOMACollection SOMADenseNDArrays containing annotations variable axis. array indexed varid shape var. varp SOMACollection SOMASparseNDArrays containing pairwise annotations variable axis indexed [varid_1, varid_2].","code":""},{"path":"/reference/SOMAMeasurement.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Measurement — SOMAMeasurement","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$close() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$length() tiledbsoma::SOMACollectionBase$names() tiledbsoma::SOMACollectionBase$open() tiledbsoma::SOMACollectionBase$print() tiledbsoma::SOMACollectionBase$remove() tiledbsoma::SOMACollectionBase$set() tiledbsoma::SOMACollectionBase$set_metadata()","code":""},{"path":"/reference/SOMAMeasurement.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement$clone()","code":""},{"path":"/reference/SOMAMeasurement.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Measurement — SOMAMeasurement","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAMeasurement.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Measurement — SOMAMeasurement","text":"","code":"SOMAMeasurement$clone(deep = FALSE)"},{"path":"/reference/SOMAMeasurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Measurement — SOMAMeasurement","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAMeasurement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Measurement — SOMAMeasurement","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-measurement\") var <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   var_id = paste0(\"feature_\", seq_len(100L)) ) sch <- arrow::infer_schema(var)  (ms <- SOMAMeasurementCreate(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb71fdceb6 sdf <- ms$add_new_dataframe(   \"var\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(var, schema = sch)) sdf$close() ms$close()  (ms <- SOMAMeasurementOpen(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb71fdceb6 ms$var #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-measurement29fb71fdceb6/var #>   dimensions: soma_joinid  #>   attributes: var_id"},{"path":"/reference/SOMAMeasurementCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Measurement — SOMAMeasurementCreate","title":"Create a SOMA Measurement — SOMAMeasurementCreate","text":"Factory function create SOMA measurement writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMAMeasurementCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Measurement — SOMAMeasurementCreate","text":"","code":"SOMAMeasurementCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAMeasurementCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Measurement — SOMAMeasurementCreate","text":"uri URI TileDB object. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists. “resume”: attempt create new TileDB object; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp.","code":""},{"path":"/reference/SOMAMeasurementCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Measurement — SOMAMeasurementCreate","text":"new SOMA measurement stored uri opened writing.","code":""},{"path":"/reference/SOMAMeasurementCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Measurement — SOMAMeasurementCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-measurement\") var <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   var_id = paste0(\"feature_\", seq_len(100L)) ) sch <- arrow::infer_schema(var)  (ms <- SOMAMeasurementCreate(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb5a5cb457 sdf <- ms$add_new_dataframe(   \"var\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(var, schema = sch)) sdf$close() ms$close()  (ms <- SOMAMeasurementOpen(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb5a5cb457 ms$var #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-measurement29fb5a5cb457/var #>   dimensions: soma_joinid  #>   attributes: var_id"},{"path":"/reference/SOMAMeasurementOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Measurement — SOMAMeasurementOpen","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"Factory function open SOMA measurement reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMAMeasurementOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"","code":"SOMAMeasurementOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAMeasurementOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time. NULL, members accessed collection inherit timestamp.","code":""},{"path":"/reference/SOMAMeasurementOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"SOMA measurement stored uri opened mode mode.","code":""},{"path":"/reference/SOMAMeasurementOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-measurement\") var <- data.frame(   soma_joinid = bit64::seq.integer64(0L, 99L),   var_id = paste0(\"feature_\", seq_len(100L)) ) sch <- arrow::infer_schema(var)  (ms <- SOMAMeasurementCreate(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb253aa474 sdf <- ms$add_new_dataframe(   \"var\",   sch,   \"soma_joinid\",   list(soma_joinid = c(0, 100)) ) sdf$write(arrow::as_arrow_table(var, schema = sch)) sdf$close() ms$close()  (ms <- SOMAMeasurementOpen(uri)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/soma-measurement29fb253aa474 ms$var #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/soma-measurement29fb253aa474/var #>   dimensions: soma_joinid  #>   attributes: var_id"},{"path":"/reference/SOMANDArrayBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA ND-Array Base Class — SOMANDArrayBase","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Virtual base class add ND-array-specific functionality SOMAArrayBase class (lifecycle: maturing).","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"lifecycle","dir":"Reference","previous_headings":"","what":"Lifecycle","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"tiledbsoma 2.1.0, $set_data_type() deprecated; functionality longer needed libtiledbsoma now accurately sets TileDB data type upon array opening","code":""},{"path":[]},{"path":"/reference/SOMANDArrayBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMAArrayBase -> SOMANDArrayBase","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMAObject$set_metadata() tiledbsoma::SOMAArrayBase$allows_duplicates() tiledbsoma::SOMAArrayBase$attributes() tiledbsoma::SOMAArrayBase$attrnames() tiledbsoma::SOMAArrayBase$close() tiledbsoma::SOMAArrayBase$colnames() tiledbsoma::SOMAArrayBase$dimensions() tiledbsoma::SOMAArrayBase$dimnames() tiledbsoma::SOMAArrayBase$index_column_names() tiledbsoma::SOMAArrayBase$is_sparse() tiledbsoma::SOMAArrayBase$maxshape() tiledbsoma::SOMAArrayBase$ndim() tiledbsoma::SOMAArrayBase$non_empty_domain() tiledbsoma::SOMAArrayBase$open() tiledbsoma::SOMAArrayBase$print() tiledbsoma::SOMAArrayBase$schema() tiledbsoma::SOMAArrayBase$shape()","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"SOMANDArrayBase$create() SOMANDArrayBase$set_data_type() SOMANDArrayBase$tiledbsoma_has_upgraded_shape() SOMANDArrayBase$resize() SOMANDArrayBase$tiledbsoma_upgrade_shape() SOMANDArrayBase$clone()","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Create SOMA NDArray named URI (lifecycle: maturing).Note: $create() considered internal called directly; use factory functions (eg. SOMASparseNDArrayCreate()) instead.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$create(type, shape, platform_config = NULL)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Returns self.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-set-data-type-","dir":"Reference","previous_headings":"","what":"Method set_data_type()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Sets cache value datatype.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$set_data_type(type)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"type character value describing TileDB data type.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-tiledbsoma-has-upgraded-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_has_upgraded_shape()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Test array upgraded resizeable shape feature TileDB-SOMA 1.15, array created support, $upgrade_domain() applied (lifecycle: maturing).","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$tiledbsoma_has_upgraded_shape()"},{"path":"/reference/SOMANDArrayBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Returns TRUE array upgraded resizable shape feature; otherwise, returns FALSE.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-resize-","dir":"Reference","previous_headings":"","what":"Method resize()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Increases shape array specified, hard limit maxshape. Raises error new shape less current shape exceeds maxshape dimension. Also raises error array already shape; case please call $tiledbsoma_upgrade_shape() (lifecycle: maturing).","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$resize(new_shape, check_only = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"new_shape integerish vector length array's $ndim(). check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"check_only, returns empty string error detected, else description error. Otherwise, invisibly returns NULL.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-tiledbsoma-upgrade-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_upgrade_shape()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"Allows array resizeable shape described TileDB-SOMA 1.15 release notes. Raises error shape exceeds maxshape dimension, array already shape. methods $tiledbsoma_upgrade_shape() $resize() similar: former must called pre-1.15 array first time shape set ; latter must used subsequent resizes array already upgraded shape (lifecycle: maturing).","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$tiledbsoma_upgrade_shape(shape, check_only = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"shape integerish vector length array's $ndim(). check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"check_only, returns empty string error detected, else description error. Otherwise, invisibly returns NULL.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$clone(deep = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA ND-Array Base Class — SOMANDArrayBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAObject.html","id":null,"dir":"Reference","previous_headings":"","what":"The SOMA Object Base Class — SOMAObject","title":"The SOMA Object Base Class — SOMAObject","text":"Base class implement shared functionality across SOMAArrayBase SOMACollectionBase classes. (lifecycle: maturing)","code":""},{"path":[]},{"path":"/reference/SOMAObject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The SOMA Object Base Class — SOMAObject","text":"platform_config Platform configuration tiledbsoma_ctx SOMATileDBContext tiledb_timestamp Time object opened uri URI TileDB object soma_type SOMA object type .tiledb_timestamp_range Time range libtiledbsoma","code":""},{"path":[]},{"path":"/reference/SOMAObject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The SOMA Object Base Class — SOMAObject","text":"SOMAObject$new() SOMAObject$is_open() SOMAObject$class() SOMAObject$mode() SOMAObject$reopen() SOMAObject$exists() SOMAObject$get_metadata() SOMAObject$set_metadata() SOMAObject$print() SOMAObject$clone()","code":""},{"path":"/reference/SOMAObject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The SOMA Object Base Class — SOMAObject","text":"Create new SOMA object. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAObject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$new(   uri,   ...,   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   soma_context = NULL )"},{"path":"/reference/SOMAObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Object Base Class — SOMAObject","text":"uri URI SOMA object ... Ignored platform_config Optional platform configuration tiledbsoma_ctx Optional TileDB SOMA context tiledb_timestamp Optional timestamp (POSIXct) open object soma_context SOMA context created soma_context()","code":""},{"path":"/reference/SOMAObject.html","id":"method-is-open-","dir":"Reference","previous_headings":"","what":"Method is_open()","title":"The SOMA Object Base Class — SOMAObject","text":"Determine object open reading writing","code":""},{"path":"/reference/SOMAObject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$is_open()"},{"path":"/reference/SOMAObject.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"TRUE object open, otherwise FALSE","code":""},{"path":"/reference/SOMAObject.html","id":"method-class-","dir":"Reference","previous_headings":"","what":"Method class()","title":"The SOMA Object Base Class — SOMAObject","text":"Print name R6 class","code":""},{"path":"/reference/SOMAObject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$class()"},{"path":"/reference/SOMAObject.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"name R6 class","code":""},{"path":"/reference/SOMAObject.html","id":"method-mode-","dir":"Reference","previous_headings":"","what":"Method mode()","title":"The SOMA Object Base Class — SOMAObject","text":"Get mode object","code":""},{"path":"/reference/SOMAObject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$mode()"},{"path":"/reference/SOMAObject.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"mode object, one : “CLOSED” “READ” “WRITE” “DELETE”","code":""},{"path":"/reference/SOMAObject.html","id":"method-reopen-","dir":"Reference","previous_headings":"","what":"Method reopen()","title":"The SOMA Object Base Class — SOMAObject","text":"Close reopen TileDB object new mode","code":""},{"path":"/reference/SOMAObject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$reopen(mode, tiledb_timestamp = NULL)"},{"path":"/reference/SOMAObject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Object Base Class — SOMAObject","text":"mode New mode open object ; choose : “READ” “WRITE” “DELETE” tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMAObject.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"Invisibly returns self opened mode","code":""},{"path":"/reference/SOMAObject.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"The SOMA Object Base Class — SOMAObject","text":"Check object exists. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAObject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$exists()"},{"path":"/reference/SOMAObject.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"TRUE object exists, otherwise FALSE","code":""},{"path":"/reference/SOMAObject.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"The SOMA Object Base Class — SOMAObject","text":"Retrieve metadata. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAObject.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$get_metadata(key = NULL)"},{"path":"/reference/SOMAObject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Object Base Class — SOMAObject","text":"key name metadata attribute retrieve NULL.","code":""},{"path":"/reference/SOMAObject.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"list metadata values.","code":""},{"path":"/reference/SOMAObject.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"The SOMA Object Base Class — SOMAObject","text":"Add list metadata. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAObject.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$set_metadata(metadata)"},{"path":"/reference/SOMAObject.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Object Base Class — SOMAObject","text":"metadata Named list metadata add","code":""},{"path":"/reference/SOMAObject.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"Invisibly returns self","code":""},{"path":"/reference/SOMAObject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The SOMA Object Base Class — SOMAObject","text":"Print-friendly representation object","code":""},{"path":"/reference/SOMAObject.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$print()"},{"path":"/reference/SOMAObject.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Object Base Class — SOMAObject","text":"Invisibly returns self","code":""},{"path":"/reference/SOMAObject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The SOMA Object Base Class — SOMAObject","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAObject.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Object Base Class — SOMAObject","text":"","code":"SOMAObject$clone(deep = FALSE)"},{"path":"/reference/SOMAObject.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Object Base Class — SOMAObject","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Object — SOMAOpen","title":"Open a SOMA Object — SOMAOpen","text":"Utility function open corresponding SOMA object given URI (lifecycle: maturing).","code":""},{"path":"/reference/SOMAOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Object — SOMAOpen","text":"","code":"SOMAOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Object — SOMAOpen","text":"uri URI TileDB object. mode One “READ” “WRITE” platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time. NULL, members accessed collection inherit timestamp.","code":""},{"path":"/reference/SOMAOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SOMA Object — SOMAOpen","text":"SOMA object","code":""},{"path":"/reference/SOMAOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a SOMA Object — SOMAOpen","text":"","code":"dir <- withr::local_tempfile(pattern = \"soma-open\") dir.create(dir, recursive = TRUE)  uri <- extract_dataset(\"soma-exp-pbmc-small\", dir) (exp <- SOMAOpen(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/soma-open29fb67fe091a/soma-exp-pbmc-small   uri <- extract_dataset(\"soma-dataframe-pbmc3k-processed-obs\", dir) (obs <- SOMAOpen(uri)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/soma-open29fb67fe091a/soma-dataframe-pbmc3k-processed-obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, seurat_annotations, percent.mt, RNA_snn..."},{"path":"/reference/SOMASparseNDArray.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Sparse Nd-Array — SOMASparseNDArray","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"SOMASparseNDArray sparse, N-dimensional array offset (zero-based) integer indexing dimension. SOMASparseNDArray user-defined schema, includes: type: primitive type, expressed Arrow type (e.g., int64, float32, etc), indicating type data contained within array. shape: shape array, .e., number length dimension. soft limit can increased using $resize() maxshape. maxshape: hard limit shape may increased using $resize(). dimensions must positive, non-zero length.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"TileDB sparse array N int64 dimensions domain [0, maxInt64) single attribute.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"duplicate-writes","dir":"Reference","previous_headings":"","what":"Duplicate Writes","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"duplicate index values allowed, index values already present object overwritten new index values added (lifecycle: maturing).","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"tiledbsoma::SOMAObject -> tiledbsoma::SOMAArrayBase -> tiledbsoma::SOMANDArrayBase -> SOMASparseNDArray","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"tiledbsoma::SOMAObject$class() tiledbsoma::SOMAObject$exists() tiledbsoma::SOMAObject$get_metadata() tiledbsoma::SOMAObject$initialize() tiledbsoma::SOMAObject$is_open() tiledbsoma::SOMAObject$mode() tiledbsoma::SOMAObject$reopen() tiledbsoma::SOMAObject$set_metadata() tiledbsoma::SOMAArrayBase$allows_duplicates() tiledbsoma::SOMAArrayBase$attributes() tiledbsoma::SOMAArrayBase$attrnames() tiledbsoma::SOMAArrayBase$close() tiledbsoma::SOMAArrayBase$colnames() tiledbsoma::SOMAArrayBase$dimensions() tiledbsoma::SOMAArrayBase$dimnames() tiledbsoma::SOMAArrayBase$index_column_names() tiledbsoma::SOMAArrayBase$is_sparse() tiledbsoma::SOMAArrayBase$maxshape() tiledbsoma::SOMAArrayBase$ndim() tiledbsoma::SOMAArrayBase$non_empty_domain() tiledbsoma::SOMAArrayBase$open() tiledbsoma::SOMAArrayBase$print() tiledbsoma::SOMAArrayBase$schema() tiledbsoma::SOMAArrayBase$shape() tiledbsoma::SOMANDArrayBase$create() tiledbsoma::SOMANDArrayBase$resize() tiledbsoma::SOMANDArrayBase$set_data_type() tiledbsoma::SOMANDArrayBase$tiledbsoma_has_upgraded_shape() tiledbsoma::SOMANDArrayBase$tiledbsoma_upgrade_shape()","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"SOMASparseNDArray$read() SOMASparseNDArray$write() SOMASparseNDArray$nnz() SOMASparseNDArray$.write_coordinates() SOMASparseNDArray$clone()","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Reads user-defined slice SOMASparseNDArray.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$read(   coords = NULL,   result_order = \"auto\",   log_level = \"auto\" )"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value “warn”.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"SOMASparseNDArrayRead.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Write matrix-like data array (lifecycle: maturing).","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$write(values, bbox = NULL)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"values matrix-like object coercible TsparseMatrix. Character dimension names ignored SOMANDArrays use integer indexing. bbox vector integers describing upper bounds dimension values. Generally NULL.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-nnz-","dir":"Reference","previous_headings":"","what":"Method nnz()","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Retrieve number non-zero elements (lifecycle: maturing).","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$nnz()"},{"path":"/reference/SOMASparseNDArray.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"scalar number non-zero elements.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-write-coordinates-","dir":"Reference","previous_headings":"","what":"Method .write_coordinates()","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Write COO table array.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$.write_coordinates(values)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"values data.frame Arrow table data COO format; must named dimension attribute labels array.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"Invisibly returns self.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$clone(deep = FALSE)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Sparse Nd-Array — SOMASparseNDArray","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-sparse-array\") mat <- Matrix::rsparsematrix(100L, 100L, 0.7, repr = \"T\") mat[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                 #> [1,] 0.59 .     1.30 -1.20  .   #> [2,] 0.30 0.55  1.20 -1.50 -2.9 #> [3,] 0.41 .    -0.37  0.59  .    (arr <- SOMASparseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fbce0d9ee #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMASparseNDArrayOpen(uri)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fbce0d9ee #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  m2 <- arr$read()$sparse_matrix()$concat() m2[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                 #> [1,] 0.59 .     1.30 -1.20  .   #> [2,] 0.30 0.55  1.20 -1.50 -2.9 #> [3,] 0.41 .    -0.37  0.59  ."},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":null,"dir":"Reference","previous_headings":"","what":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Blockwise reader SOMASparseNDArray","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"tiledbsoma::SOMASparseNDArrayReadBase -> SOMASparseNDArrayBlockwiseRead","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"axis axis iterate blockwise fashion","code":""},{"path":[]},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"SOMASparseNDArrayBlockwiseRead$new() SOMASparseNDArrayBlockwiseRead$tables() SOMASparseNDArrayBlockwiseRead$sparse_matrix()","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Create","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$new(   sr,   array,   coords,   axis,   ...,   size,   reindex_disable_on_axis = NA )"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Optional named list integer64 values; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored size size blockwise chunk generate reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-tables-","dir":"Reference","previous_headings":"","what":"Method tables()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Read Arrow::Table","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$tables()"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"blockwise iterator yielding chunks Arrow::Tables","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method sparse_matrix()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Read sparse matrix","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$sparse_matrix(repr = \"T\")"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"repr Representation sparse matrix return; choose : “T”: returns TsparseMatrix “R”: returns RsparseMatrix “C”: returns CsparseMatrix Note: passing repr “R” “C” available re-indexing enabled axes 0 1, respectively","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"blockwise iterator yielding chunks sparse matrices","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","title":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","text":"Factory function create SOMA sparse ND array writing (lifecycle: maturing).","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","text":"","code":"SOMASparseNDArrayCreate(   uri,   type,   shape,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","text":"uri URI TileDB object. type Arrow type defining type element array. shape vector integers defining shape array. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists. “resume”: attempt create new TileDB object; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp.","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","text":"new SOMA sparse ND array stored uri opened writing.","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SOMA Sparse ND Array — SOMASparseNDArrayCreate","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-sparse-array\") mat <- Matrix::rsparsematrix(100L, 100L, 0.7, repr = \"T\") mat[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                    #> [1,] -0.073 -2.80 -1.20  .    0.26 #> [2,] -0.560 -0.22 -0.74  0.33 0.28 #> [3,] -0.110 -0.11  .    -0.92 1.50  (arr <- SOMASparseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fb44257873 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMASparseNDArrayOpen(uri)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fb44257873 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  m2 <- arr$read()$sparse_matrix()$concat() m2[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                    #> [1,] -0.073 -2.80 -1.20  .    0.26 #> [2,] -0.560 -0.22 -0.74  0.33 0.28 #> [3,] -0.110 -0.11  .    -0.92 1.50"},{"path":"/reference/SOMASparseNDArrayOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","title":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","text":"Factory function open SOMA sparse ND array reading (lifecycle: maturing).","code":""},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","text":"","code":"SOMASparseNDArrayOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","text":"uri URI TileDB object. mode One “READ” “WRITE”. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp; defaults current time.","code":""},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","text":"SOMA sparse ND array stored uri opened mode mode.","code":""},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a SOMA Sparse ND Array — SOMASparseNDArrayOpen","text":"","code":"uri <- withr::local_tempfile(pattern = \"soma-sparse-array\") mat <- Matrix::rsparsematrix(100L, 100L, 0.7, repr = \"T\") mat[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                 #> [1,]  .    -0.42 -0.28 .   0.68 #> [2,]  .    -0.64  1.10 .   .    #> [3,] -0.47 -0.35 -0.91 1.2 .     (arr <- SOMASparseNDArrayCreate(uri, arrow::float64(), shape = dim(mat))) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fb65c0f9e4 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  arr$write(mat) arr$close()  (arr <- SOMASparseNDArrayOpen(uri)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/soma-sparse-array29fb65c0f9e4 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data  m2 <- arr$read()$sparse_matrix()$concat() m2[1:3, 1:5] #> 3 x 5 sparse Matrix of class \"dgTMatrix\" #>                                 #> [1,]  .    -0.42 -0.28 .   0.68 #> [2,]  .    -0.64  1.10 .   .    #> [3,] -0.47 -0.35 -0.91 1.2 ."},{"path":"/reference/SOMASparseNDArrayRead.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Intermediate type choose result format reading sparse array","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"tiledbsoma::SOMASparseNDArrayReadBase -> SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"tiledbsoma::SOMASparseNDArrayReadBase$initialize()","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SOMASparseNDArrayRead$sparse_matrix() SOMASparseNDArrayRead$tables() SOMASparseNDArrayRead$blockwise()","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method sparse_matrix()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read sparse matrix (lifecycle: maturing). Returns iterator Matrix::dgTMatrix-class matrixZeroBasedView .","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$sparse_matrix(zero_based = FALSE)"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"zero_based Logical, TRUE returns iterator matrixZeroBasedView FALSE returns iterator Matrix::dgTMatrix-class.","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SparseReadIter","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-tables-","dir":"Reference","previous_headings":"","what":"Method tables()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read arrow::Table (lifecycle: maturing). Returns iterator arrow::Table.","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$tables()"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"TableReadIter","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-blockwise-","dir":"Reference","previous_headings":"","what":"Method blockwise()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read blockwise fashion","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$blockwise(   axis,   ...,   size = NULL,   reindex_disable_on_axis = NA )"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"axis Axis iterate blockwise manner ... Ignored size size blockwise chunk generate reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SOMASparseNDArrayBlockwiseRead iterated reader","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"Base class SOMA sparse ND-array reads","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"sr SOMA read pointer array underlying SOMASparseNDArray coords iterated coordinates read shape shape underlying array","code":""},{"path":[]},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"SOMASparseNDArrayReadBase$new()","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"Create","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"","code":"SOMASparseNDArrayReadBase$new(sr, array, coords = NULL)"},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Optional named list integer64 values; must named array$dimnames()","code":""},{"path":"/reference/SOMATileDBContext.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA TileDB Context — SOMATileDBContext","title":"SOMA TileDB Context — SOMATileDBContext","text":"Context map TileDB-backed SOMA objects","code":""},{"path":"/reference/SOMATileDBContext.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledbsoma::MappingBase -> tiledbsoma::ScalarMap -> tiledbsoma::SOMAContextBase -> SOMATileDBContext","code":""},{"path":"/reference/SOMATileDBContext.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/SOMATileDBContext.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA TileDB Context — SOMATileDBContext","text":"SOMATileDBContext$new() SOMATileDBContext$keys() SOMATileDBContext$items() SOMATileDBContext$length() SOMATileDBContext$get() SOMATileDBContext$set() SOMATileDBContext$to_tiledb_context() SOMATileDBContext$context() SOMATileDBContext$clone()","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$new(config = NULL, cached = TRUE)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"config ... cached Force new creation","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"instantiated SOMATileDBContext object","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$keys()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"keys map","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$items()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"Return items map list","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$length()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"number items map","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$get(key, default = quote(expr = ))"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"key Key fetch default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"value key map, default key found","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$set(key, value)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"[chainable] Invisibly returns self value added key","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$to_tiledb_context()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledb_ctx object, dynamically constructed. useful constructor class.","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$context()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledb_ctx object, stored (long-lived) result to_tiledb_context.","code":""},{"path":"/reference/SOMATileDBContext.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA TileDB Context — SOMATileDBContext","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMATileDBContext.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$clone(deep = FALSE)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMATileDBContext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"(ctx <- SOMATileDBContext$new()) #> <SOMATileDBContext> #>   config.env_var_prefix: TILEDB_ #>   config.logging_format: DEFAULT #>   config.logging_level: 0 #>   filestore.buffer_size: 104857600 #>   profile_dir:  #>   profile_name:  #>   rest.capnp_traversal_limit: 2147483648 #>   rest.curl.buffer_size: 524288 #>   rest.curl.retry_errors: true #>   rest.curl.tcp_keepalive: true #>   rest.curl.verbose: false #>   rest.http_compressor: any #>   rest.load_enumerations_on_array_open: false #>   rest.load_enumerations_on_array_open_all_schemas: false #>   rest.load_metadata_on_array_open: true #>   rest.load_non_empty_domain_on_array_open: true #>   rest.payer_namespace:  #>   rest.retry_count: 25 #>   rest.retry_delay_factor: 1.25 #>   rest.retry_http_codes: 503 #>   rest.retry_initial_delay_ms: 500 #>   rest.server_address: https://api.tiledb.com #>   rest.server_serialization_format: CAPNP #>   rest.use_refactored_array_open: true #>   rest.use_refactored_array_open_and_query_submit: true #>   sm.allow_separate_attribute_writes: false #>   sm.allow_updates_experimental: false #>   sm.check_coord_dups: true #>   sm.check_coord_oob: true #>   sm.check_global_order: true #>   sm.compute_concurrency_level: 4 #>   sm.consolidation.amplification: 1.0 #>   sm.consolidation.buffer_size: 50000000 #>   sm.consolidation.max_fragment_size: 18446744073709551615 #>   sm.consolidation.mode: fragments #>   sm.consolidation.purge_deleted_cells: false #>   sm.consolidation.step_max_frags: 4294967295 #>   sm.consolidation.step_min_frags: 4294967295 #>   sm.consolidation.step_size_ratio: 0.0 #>   sm.consolidation.steps: 4294967295 #>   sm.consolidation.timestamp_end: 18446744073709551615 #>   sm.consolidation.timestamp_start: 0 #>   sm.dedup_coords: false #>   sm.enable_signal_handlers: true #>   sm.encryption_key:  #>   sm.encryption_type: NO_ENCRYPTION #>   sm.enumerations_max_size: 10485760 #>   sm.enumerations_max_total_size: 52428800 #>   sm.fragment_info.preload_mbrs: false #>   sm.group.timestamp_end: 18446744073709551615 #>   sm.group.timestamp_start: 0 #>   sm.io_concurrency_level: 4 #>   sm.max_tile_overlap_size: 314572800 #>   sm.mem.consolidation.buffers_weight: 1 #>   sm.mem.consolidation.reader_weight: 3 #>   sm.mem.consolidation.writer_weight: 2 #>   sm.mem.malloc_trim: true #>   sm.mem.reader.sparse_global_order.ratio_array_data: 0.3 #>   sm.mem.reader.sparse_global_order.ratio_coords: 0.5 #>   sm.mem.reader.sparse_global_order.ratio_tile_ranges: 0.1 #>   sm.mem.reader.sparse_unordered_with_dups.ratio_array_data: 0.1 #>   sm.mem.reader.sparse_unordered_with_dups.ratio_coords: 0.5 #>   sm.mem.reader.sparse_unordered_with_dups.ratio_tile_ranges: 0.1 #>   sm.mem.tile_upper_memory_limit: 1073741824 #>   sm.mem.total_budget: 10737418240 #>   sm.memory_budget: 5368709120 #>   sm.memory_budget_var: 10737418240 #>   sm.merge_overlapping_ranges_experimental: true #>   sm.partial_tile_offsets_loading: false #>   sm.query.condition_evaluator: ast #>   sm.query.dense.qc_coords_mode: false #>   sm.query.dense.reader: refactored #>   sm.query.sparse_global_order.preprocess_tile_merge: 32768 #>   sm.query.sparse_global_order.reader: refactored #>   sm.query.sparse_unordered_with_dups.reader: refactored #>   sm.read_range_oob: warn #>   sm.skip_checksum_validation: false #>   sm.skip_est_size_partitioning: false #>   sm.skip_unary_partitioning_budget_check: false #>   sm.vacuum.mode: fragments #>   sm.var_offsets.bitsize: 64 #>   sm.var_offsets.extra_element: false #>   sm.var_offsets.mode: bytes #>   ssl.ca_file:  #>   ssl.ca_path:  #>   ssl.verify: true #>   vfs.azure.blob_endpoint:  #>   vfs.azure.block_list_block_size: 5242880 #>   vfs.azure.is_data_lake_endpoint:  #>   vfs.azure.max_parallel_ops: 4 #>   vfs.azure.max_retries: 5 #>   vfs.azure.max_retry_delay_ms: 60000 #>   vfs.azure.retry_delay_ms: 800 #>   vfs.azure.storage_account_key:  #>   vfs.azure.storage_account_name:  #>   vfs.azure.storage_sas_token:  #>   vfs.azure.use_block_list_upload: true #>   vfs.file.posix_directory_permissions: 755 #>   vfs.file.posix_file_permissions: 644 #>   vfs.gcs.endpoint:  #>   vfs.gcs.impersonate_service_account:  #>   vfs.gcs.max_direct_upload_size: 10737418240 #>   vfs.gcs.max_parallel_ops: 4 #>   vfs.gcs.multi_part_size: 5242880 #>   vfs.gcs.project_id:  #>   vfs.gcs.request_timeout_ms: 3000 #>   vfs.gcs.service_account_key:  #>   vfs.gcs.use_multi_part_upload: true #>   vfs.gcs.workload_identity_configuration:  #>   vfs.log_operations: false #>   vfs.max_batch_size: 104857600 #>   vfs.min_batch_gap: 512000 #>   vfs.min_batch_size: 20971520 #>   vfs.min_parallel_size: 10485760 #>   vfs.read_ahead_cache_size: 10485760 #>   vfs.read_ahead_size: 102400 #>   vfs.read_logging_mode:  #>   vfs.s3.aws_access_key_id:  #>   vfs.s3.aws_external_id:  #>   vfs.s3.aws_load_frequency:  #>   vfs.s3.aws_role_arn:  #>   vfs.s3.aws_secret_access_key:  #>   vfs.s3.aws_session_name:  #>   vfs.s3.aws_session_token:  #>   vfs.s3.bucket_canned_acl: NOT_SET #>   vfs.s3.ca_file:  #>   vfs.s3.ca_path:  #>   vfs.s3.config_source: auto #>   vfs.s3.connect_max_tries: 5 #>   vfs.s3.connect_scale_factor: 25 #>   vfs.s3.connect_timeout_ms: 10800 #>   vfs.s3.endpoint_override:  #>   vfs.s3.install_sigpipe_handler: true #>   vfs.s3.logging_level: Off #>   vfs.s3.max_parallel_ops: 4 #>   vfs.s3.multipart_part_size: 5242880 #>   vfs.s3.no_sign_request: false #>   vfs.s3.object_canned_acl: NOT_SET #>   vfs.s3.proxy_host:  #>   vfs.s3.proxy_password:  #>   vfs.s3.proxy_port: 0 #>   vfs.s3.proxy_scheme: http #>   vfs.s3.proxy_username:  #>   vfs.s3.region:  #>   vfs.s3.request_timeout_ms: 3000 #>   vfs.s3.requester_pays: false #>   vfs.s3.scheme: https #>   vfs.s3.skip_init: false #>   vfs.s3.sse:  #>   vfs.s3.sse_kms_key_id:  #>   vfs.s3.storage_class: NOT_SET #>   vfs.s3.use_multipart_upload: true #>   vfs.s3.use_virtual_addressing: true #>   vfs.s3.verify_ssl: true ctx$get(\"sm.mem.reader.sparse_global_order.ratio_array_data\") #> sm.mem.reader.sparse_global_order.ratio_array_data  #>                                              \"0.3\"   ctx$to_tiledb_context() #> An object of class \"tiledb_ctx\" #> Slot \"ptr\": #> <pointer: 0x560112b99e40> #>"},{"path":"/reference/ScalarMap.html","id":null,"dir":"Reference","previous_headings":"","what":"A Mapping Type for Scalars — ScalarMap","title":"A Mapping Type for Scalars — ScalarMap","text":"R6 mapping type limited scalar atomic vector types ; can optionally limited specific atomic vector type (eg. “logical”).","code":""},{"path":"/reference/ScalarMap.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A Mapping Type for Scalars — ScalarMap","text":"tiledbsoma::MappingBase -> ScalarMap","code":""},{"path":"/reference/ScalarMap.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"A Mapping Type for Scalars — ScalarMap","text":"type type ScalarMap limited ","code":""},{"path":"/reference/ScalarMap.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A Mapping Type for Scalars — ScalarMap","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/ScalarMap.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A Mapping Type for Scalars — ScalarMap","text":"ScalarMap$new() ScalarMap$set() ScalarMap$clone()","code":""},{"path":[]},{"path":"/reference/ScalarMap.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$new(type = \"any\")"},{"path":"/reference/ScalarMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"type Limit ScalarMap preset type; choose : “” “numeric” “integer” “character” “logical”","code":""},{"path":"/reference/ScalarMap.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A Mapping Type for Scalars — ScalarMap","text":"instantiated ScalarMap object type set type","code":""},{"path":[]},{"path":"/reference/ScalarMap.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$set(key, value)"},{"path":"/reference/ScalarMap.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/ScalarMap.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A Mapping Type for Scalars — ScalarMap","text":"[chainable] Invisibly returns self value added key","code":""},{"path":"/reference/ScalarMap.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A Mapping Type for Scalars — ScalarMap","text":"objects class cloneable method.","code":""},{"path":"/reference/ScalarMap.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$clone(deep = FALSE)"},{"path":"/reference/ScalarMap.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ScalarMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"(map <- ScalarMap$new()) #> <ScalarMap> map$set(\"a\", 1L) map #> <ScalarMap> #>   a: 1  map$get(\"a\") #> [1] 1 map$get(\"b\", default = NULL) #> NULL"},{"path":"/reference/SparseReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"SparseReadIter class allows iteration reads SOMASparseNDArray.","code":""},{"path":"/reference/SparseReadIter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"tiledbsoma::ReadIter -> SparseReadIter","code":""},{"path":"/reference/SparseReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"tiledbsoma::ReadIter$read_complete() tiledbsoma::ReadIter$read_next()","code":""},{"path":"/reference/SparseReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"SparseReadIter$new() SparseReadIter$concat() SparseReadIter$clone()","code":""},{"path":"/reference/SparseReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"Create (lifecycle: maturing).","code":""},{"path":"/reference/SparseReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"","code":"SparseReadIter$new(sr, shape, zero_based = FALSE)"},{"path":"/reference/SparseReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"sr Soma reader pointer. shape Shape full matrix. zero_based Logical, TRUE make iterator Matrix::dgTMatrix-class otherwise matrixZeroBasedView.","code":""},{"path":"/reference/SparseReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"Concatenate remainder iterator.","code":""},{"path":"/reference/SparseReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"","code":"SparseReadIter$concat()"},{"path":"/reference/SparseReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"matrixZeroBasedView Matrix::sparseMatrix.","code":""},{"path":"/reference/SparseReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/SparseReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"","code":"SparseReadIter$clone(deep = FALSE)"},{"path":"/reference/SparseReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SparseReadIter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Read Iterator Over Sparse Matrices — SparseReadIter","text":"","code":"dir <- withr::local_tempfile(pattern = \"matrix-iter\") dir.create(dir, recursive = TRUE) (exp <- load_dataset(\"soma-exp-pbmc-small\", dir)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/matrix-iter29fb354366ce/soma-exp-pbmc-small qry <- exp$axis_query(\"RNA\") xqry <- qry$X(\"data\")  iter <- xqry$sparse_matrix() stopifnot(inherits(iter, \"SparseReadIter\"))  while (!iter$read_complete()) {   block <- iter$read_next() }"},{"path":"/reference/TableReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Read Iterator Over Arrow Tables — TableReadIter","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"TableReadIter class allows iteration reads SOMASparseNDArray SOMADataFrame. Iteration chunks retrieved Arrow Table.","code":""},{"path":"/reference/TableReadIter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"tiledbsoma::ReadIter -> TableReadIter","code":""},{"path":"/reference/TableReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"tiledbsoma::ReadIter$initialize() tiledbsoma::ReadIter$read_complete() tiledbsoma::ReadIter$read_next()","code":""},{"path":"/reference/TableReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"TableReadIter$concat() TableReadIter$clone()","code":""},{"path":"/reference/TableReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"Concatenate remainder iterator.","code":""},{"path":"/reference/TableReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"","code":"TableReadIter$concat()"},{"path":"/reference/TableReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"Arrow Table.","code":""},{"path":"/reference/TableReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/TableReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"","code":"TableReadIter$clone(deep = FALSE)"},{"path":"/reference/TableReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TableReadIter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Read Iterator Over Arrow Tables — TableReadIter","text":"","code":"dir <- withr::local_tempfile(pattern = \"table-iter\") dir.create(dir, recursive = TRUE) (exp <- load_dataset(\"soma-exp-pbmc-small\", dir)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/table-iter29fb686c09c7/soma-exp-pbmc-small qry <- exp$axis_query(\"RNA\") xqry <- qry$X(\"data\")  iter <- xqry$tables() stopifnot(inherits(iter, \"TableReadIter\"))  while (!iter$read_complete()) {   block <- iter$read_next() }"},{"path":"/reference/TileDBCreateOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDBCreateOptions — TileDBCreateOptions","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Provides strongly-typed access default values platform_config options stored “tiledb” \\(\\rightarrow\\) “create” mapping keys. Intended internal use .","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TileDBCreateOptions — TileDBCreateOptions","text":"tiledbsoma::MappingBase -> TileDBCreateOptions","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TileDBCreateOptions — TileDBCreateOptions","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$set() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDBCreateOptions — TileDBCreateOptions","text":"TileDBCreateOptions$new() TileDBCreateOptions$cell_tile_orders() TileDBCreateOptions$dim_tile() TileDBCreateOptions$capacity() TileDBCreateOptions$allows_duplicates() TileDBCreateOptions$dataframe_dim_zstd_level() TileDBCreateOptions$sparse_nd_array_dim_zstd_level() TileDBCreateOptions$dense_nd_array_dim_zstd_level() TileDBCreateOptions$offsets_filters() TileDBCreateOptions$validity_filters() TileDBCreateOptions$dim_filters() TileDBCreateOptions$attr_filters() TileDBCreateOptions$write_X_chunked() TileDBCreateOptions$goal_chunk_nnz() TileDBCreateOptions$to_list() TileDBCreateOptions$clone()","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Create TileDBCreateOptions object","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$new(platform_config = NULL)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"platform_config platform configuration object","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-cell-tile-orders-","dir":"Reference","previous_headings":"","what":"Method cell_tile_orders()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Returns cell tile orders used. neither cell_order tile_order present, case use default values provided.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$cell_tile_orders()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"two-length character vector names “cell_order” “tile_order”","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dim_tile(dim_name, default = 2048)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"dim_name Name dimension get tiling default Default tiling dim_name set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"cfg <- PlatformConfig$new() cfg$set(   platform = 'tiledb',   param = 'create',   key = 'dims',   value = list(soma_dim_0 = list(tile = 999)) ) (tdco <- TileDBCreateOptions$new(cfg)) tdco$dim_tile(\"soma_dim_0\") tdco$dim_tile(\"soma_dim_1\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$capacity()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$allows_duplicates()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"bool","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dataframe_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$sparse_nd_array_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dense_nd_array_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$offsets_filters(default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"default Default offset filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$validity_filters(default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"default Default validity filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dim_filters(dim_name, default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"dim_name Name dimension get filters default Default filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"filters <- list(   soma_dim_0 = list(tile = 100, filters = list(\"RLE\")),   soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) tdco$dim_filters(\"soma_dim_0\") tdco$dim_filters(\"non-existant\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$attr_filters(attr_name, default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"attr_name Name attribute default Default filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"filters <- list(   soma_data_a = list(filters = list(\"RLE\")),   soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) tdco$attr_filters(\"soma_data_b\") tdco$attr_filters(\"non-existant\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$write_X_chunked()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"bool","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$goal_chunk_nnz()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-to-list-","dir":"Reference","previous_headings":"","what":"Method to_list()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"...","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$to_list(build_filters = TRUE)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"build_filters Build filters tiledb_filter objects. set FALSE, JSON strings created instead filter objects.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"'create options' list","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$clone(deep = FALSE)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"(cfg <- PlatformConfig$new()) #> <PlatformConfig> (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$cell_tile_orders() #>  cell_order  tile_order  #> \"ROW_MAJOR\" \"ROW_MAJOR\"  tdco$to_list() #> $tile_order #> [1] \"ROW_MAJOR\" #>  #> $cell_order #> [1] \"ROW_MAJOR\" #>  #> $capacity #> [1] 1e+05 #>  #> $allows_duplicates #> [1] FALSE #>  #> $dataframe_dim_zstd_level #> [1] 3 #>  #> $sparse_nd_array_dim_zstd_level #> [1] 3 #>  #> $dense_nd_array_dim_zstd_level #> [1] 3 #>  #> $offsets_filters #> $offsets_filters[[1]] #> tiledb_filter(\"DOUBLE_DELTA\")  #>  #> $offsets_filters[[2]] #> tiledb_filter_set_option(tiledb_filter(\"BIT_WIDTH_REDUCTION\"),\"BIT_WIDTH_MAX_WINDOW\",256)  #>  #> $offsets_filters[[3]] #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1)  #>  #>  #> $write_X_chunked #> [1] TRUE #>  #> $goal_chunk_nnz #> [1] 2e+08 #>  #> $validity_filters #> list() #>  tdco$to_list(build_filters = FALSE) #> $tile_order #> [1] \"ROW_MAJOR\" #>  #> $cell_order #> [1] \"ROW_MAJOR\" #>  #> $capacity #> [1] 1e+05 #>  #> $allows_duplicates #> [1] FALSE #>  #> $dataframe_dim_zstd_level #> [1] 3 #>  #> $sparse_nd_array_dim_zstd_level #> [1] 3 #>  #> $dense_nd_array_dim_zstd_level #> [1] 3 #>  #> $offsets_filters #> [1] \"[{  \\\"name\\\": \\\"DOUBLE_DELTA\\\" }, {  \\\"name\\\": \\\"BIT_WIDTH_REDUCTION\\\" }, {  \\\"name\\\": \\\"ZSTD\\\" }]\" #>  #> $write_X_chunked #> [1] TRUE #>  #> $goal_chunk_nnz #> [1] 2e+08 #>  #> $validity_filters #> [1] \"\" #>  #> $dims #> [1] \"{ }\" #>  #> $attrs #> [1] \"{ }\" #>    ## ------------------------------------------------ ## Method `TileDBCreateOptions$dim_tile` ## ------------------------------------------------  cfg <- PlatformConfig$new() cfg$set(   platform = 'tiledb',   param = 'create',   key = 'dims',   value = list(soma_dim_0 = list(tile = 999)) ) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   dims: list(soma_dim_0 = list(tile = 999)) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$dim_tile(\"soma_dim_0\") #> [1] 999 tdco$dim_tile(\"soma_dim_1\") #> [1] 2048   ## ------------------------------------------------ ## Method `TileDBCreateOptions$dim_filters` ## ------------------------------------------------  filters <- list(   soma_dim_0 = list(tile = 100, filters = list(\"RLE\")),   soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   dims: list(soma_dim_0 = list(tile = 100, filters = list(\"RLE\")), soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9)))) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$dim_filters(\"soma_dim_0\") #> [[1]] #> tiledb_filter_set_option(tiledb_filter(\"RLE\"),\"COMPRESSION_LEVEL\",-1)  #>  tdco$dim_filters(\"non-existant\") #> list()   ## ------------------------------------------------ ## Method `TileDBCreateOptions$attr_filters` ## ------------------------------------------------  filters <- list(   soma_data_a = list(filters = list(\"RLE\")),   soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   attrs: list(soma_data_a = list(filters = list(\"RLE\")), soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9)))) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$attr_filters(\"soma_data_b\") #> [[1]] #> tiledb_filter_set_option(tiledb_filter(\"RLE\"),\"COMPRESSION_LEVEL\",-1)  #>  #> [[2]] #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",9)  #>  tdco$attr_filters(\"non-existant\") #> list()"},{"path":"/reference/example-datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Example Datasets — example-datasets","title":"SOMA Example Datasets — example-datasets","text":"Access example SOMA objects bundled tiledbsoma package. Use list_datasets() list available datasets load_dataset() load dataset memory using appropriate SOMA class. extract_dataset() function returns path extracted dataset without loading memory.","code":""},{"path":"/reference/example-datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Example Datasets — example-datasets","text":"","code":"list_datasets()  extract_dataset(name, dir = tempdir())  load_dataset(name, dir = tempdir(), tiledbsoma_ctx = NULL)"},{"path":"/reference/example-datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Example Datasets — example-datasets","text":"name name dataset. dir directory dataset extracted (default: tempdir()). tiledbsoma_ctx Optional TileDB “Context” object, defaults NULL.","code":""},{"path":"/reference/example-datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SOMA Example Datasets — example-datasets","text":"list_datasets(): returns character vector available datasets. extract_dataset(): returns path extracted dataset. load_dataset(): returns SOMA object.","code":""},{"path":"/reference/example-datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMA Example Datasets — example-datasets","text":"SOMA objects stored tar.gz files package's extdata directory. Calling load_dataset() extracts tar.gz file specified dir, inspects metadata determine appropriate SOMA class instantiate, returns SOMA object.","code":""},{"path":"/reference/example-datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Example Datasets — example-datasets","text":"","code":"list_datasets() #> [1] \"soma-dataframe-pbmc3k-processed-obs\" \"soma-exp-pbmc-small-pre-1.15\"        #> [3] \"soma-exp-pbmc-small\"                  dir <- withr::local_tempfile(pattern = \"pbmc-small\") dir.create(dir, recursive = TRUE) dest <- extract_dataset(\"soma-exp-pbmc-small\", dir) list.files(dest) #> [1] \"__group\"            \"__meta\"             \"__tiledb_group.tdb\" #> [4] \"ms\"                 \"obs\"                \"uns\"                dir <- withr::local_tempfile(pattern = \"pbmc_small\") dir.create(dir, recursive = TRUE) (exp <- load_dataset(\"soma-exp-pbmc-small\", dir)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/pbmc_small29fb3b91b568/soma-exp-pbmc-small"},{"path":"/reference/matrixZeroBasedView.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Zero-based Wrapper Sparse Matrices Zero-based Wrapper Sparse Matrices","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"matrixZeroBasedView wrapper shim matrix Matrix::sparseMatrix allows elemental matrix access using zero-based indices.","code":""},{"path":[]},{"path":"/reference/matrixZeroBasedView.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"matrixZeroBasedView$new() matrixZeroBasedView$take() matrixZeroBasedView$dim() matrixZeroBasedView$nrow() matrixZeroBasedView$ncol() matrixZeroBasedView$get_one_based_matrix() matrixZeroBasedView$sum() matrixZeroBasedView$print() matrixZeroBasedView$clone()","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Initialize (lifecycle: maturing).","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$new(x)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"x matrix.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-take-","dir":"Reference","previous_headings":"","what":"Method take()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Zero-based matrix element access.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$take(i = NULL, j = NULL)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Row index (zero-based). j Column index (zero-based).","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"specified matrix slice another matrixZeroBasedView.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-dim-","dir":"Reference","previous_headings":"","what":"Method dim()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"dim.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$dim()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"dimensions matrix.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-nrow-","dir":"Reference","previous_headings":"","what":"Method nrow()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"nrow.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$nrow()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Matrix row count.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-ncol-","dir":"Reference","previous_headings":"","what":"Method ncol()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"ncol.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$ncol()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Matrix column count.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-get-one-based-matrix-","dir":"Reference","previous_headings":"","what":"Method get_one_based_matrix()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Get one-based R matrix original class.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$get_one_based_matrix()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"One-based matrix.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-sum-","dir":"Reference","previous_headings":"","what":"Method sum()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Perform arithmetic sum matrixZeroBasedView another matrixZeroBasedView.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$sum(x)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"x matrixZeroBasedView sum.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"result sum matrixZeroBasedView.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"print.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$print()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"Invisibly returns self.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"objects class cloneable method.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$clone(deep = FALSE)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"deep Whether make deep clone.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero-based Wrapper for Sparse Matrices — matrixZeroBasedView","text":"","code":"(mat <- Matrix::rsparsematrix(3L, 3L, 0.3)) #> 3 x 3 sparse Matrix of class \"dgCMatrix\" #>                   #> [1,]  .    0.84 . #> [2,] -0.27 .    . #> [3,]  .    0.24 . (mat0 <- matrixZeroBasedView$new(mat)) #> Non-mutable 0-based 'view' class for matrices. #> To get 1-based matrix use `x$get_one_based_matrix() #> Dimensions: 3x3  mat0$take(0, 0) #> Non-mutable 0-based 'view' class for matrices. #> To get 1-based matrix use `x$get_one_based_matrix() #> Dimensions: 1x1 mat0$take(0, 0:2)$get_one_based_matrix() #> 1 x 3 sparse Matrix of class \"dgCMatrix\" #>               #> [1,] . 0.84 ."},{"path":"/reference/set_log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Set TileDB-SOMA Logging Level — set_log_level","title":"Set TileDB-SOMA Logging Level — set_log_level","text":"Set logging level R package underlying C++ library","code":""},{"path":"/reference/set_log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set TileDB-SOMA Logging Level — set_log_level","text":"","code":"set_log_level(level)"},{"path":"/reference/set_log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set TileDB-SOMA Logging Level — set_log_level","text":"level character value logging level. May “trace”, “debug”, “info”, “warn”","code":""},{"path":"/reference/set_log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set TileDB-SOMA Logging Level — set_log_level","text":"Invisibly returns NULL","code":""},{"path":"/reference/show_package_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Display package versions — show_package_versions","title":"Display package versions — show_package_versions","text":"Print version information tiledb (R package), libtiledbsoma, TileDB embedded, suitable assisting bug reports.","code":""},{"path":"/reference/show_package_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display package versions — show_package_versions","text":"","code":"show_package_versions()"},{"path":"/reference/show_package_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display package versions — show_package_versions","text":"","code":"show_package_versions() #> tiledbsoma:    2.1.99 #> tiledb-r:      0.33.1 #> tiledb core:   2.29.1 #> libtiledbsoma: 2.29.1 #> R:             R version 4.5.1 (2025-06-13) #> OS:            Ubuntu 24.04.3 LTS"},{"path":"/reference/soma_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and cache a SOMA Context Object — soma_context","title":"Create and cache a SOMA Context Object — soma_context","text":"Create cache SOMA Context Object","code":""},{"path":"/reference/soma_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and cache a SOMA Context Object — soma_context","text":"","code":"soma_context(config)"},{"path":"/reference/soma_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and cache a SOMA Context Object — soma_context","text":"config named character vector “key” “value” pairs defining configuration setting.","code":""},{"path":"/reference/soma_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and cache a SOMA Context Object — soma_context","text":"external pointer object containing shared pointer instance SOMAContext.","code":""},{"path":"/reference/soma_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and cache a SOMA Context Object — soma_context","text":"","code":"head(cfgvec <- as.vector(tiledb::tiledb_config())) # TileDB config as a vector #> config.env_var_prefix config.logging_format  config.logging_level  #>             \"TILEDB_\"             \"DEFAULT\"                   \"0\"  #> filestore.buffer_size           profile_dir          profile_name  #>           \"104857600\"                    \"\"                    \"\"  (sctx <- soma_context(cfgvec)) #> <pointer: 0x56010dc559d0>"},{"path":"/reference/tiledbsoma_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDB SOMA Statistics — tiledbsoma_stats","title":"TileDB SOMA Statistics — tiledbsoma_stats","text":"functions expose TileDB Core functionality performance measurements statistics","code":""},{"path":"/reference/tiledbsoma_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB SOMA Statistics — tiledbsoma_stats","text":"","code":"tiledbsoma_stats_enable()  tiledbsoma_stats_disable()  tiledbsoma_stats_reset()  tiledbsoma_stats_dump()  tiledbsoma_stats_show()"},{"path":"/reference/tiledbsoma_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TileDB SOMA Statistics — tiledbsoma_stats","text":"tiledbsoma_stats_show(): single-length character vector TileDB statistics encoded JSON format functions invisibly return NULL","code":""},{"path":"/reference/tiledbsoma_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TileDB SOMA Statistics — tiledbsoma_stats","text":"tiledbsoma_stats_enable()/tiledbsoma_stats_disable(): Enable disable TielDB's internal statistics tiledbsoma_stats_reset(): Reset statistics 0 tiledbsoma_stats_dump(): Dump statistics JSON string tiledbsoma_stats_show(): Pretty-print JSON statistics","code":""},{"path":"/reference/write_soma.Seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Seurat object to a SOMA — write_soma.Seurat","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Write Seurat object SOMA","code":""},{"path":"/reference/write_soma.Seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"","code":"# S3 method for class 'Seurat' write_soma(   x,   uri,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.Seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"x Seurat object. uri URI resulting SOMA object. ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists. “resume”: attempt create new SOMA; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"URI resulting SOMAExperiment generated data contained x.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-cell-level-metadata","dir":"Reference","previous_headings":"","what":"Writing Cell-Level Metadata","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Cell-level metadata written data frame called “obs” experiment level.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-v-assays","dir":"Reference","previous_headings":"","what":"Writing v3 Assays","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat Assay objects written individual measurements: “data” matrix written sparse array called “data” within “X” group. “counts” matrix, empty, written sparse array called “counts” within “X” group. “scale.data” matrix, empty, written sparse array called “scale_data” within “X” group. feature-level metadata written data frame called “var”. Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"performance-considerations","dir":"Reference","previous_headings":"","what":"Performance Considerations","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Ingestion large dense layers, scale.data, can memory intensive. better performance, users can remove layers prior ingestion regenerate export, ingest separately dense arrays need persist exact matrix Please note dense arrays read using SOMAExperimentAxisQuery mechanism; use SOMADenseNDArray$read_dense_matrix, remembering transpose adding back Seurat object","code":"# Using SeuratObject v5 syntax on a v3 `Assay` # Cache the layer for separate ingestion, skip if planning to regenerate mat <- object[[\"ASSAY\"]]$scale.data  # Remove the `scale.data` layer object[[\"ASSAY\"]]$scale.data <- NULL  # Ingest the smaller object uri <- write_soma(object, \"/path/to/soma\")  # Ingest the `scale.data` layer densely; needed only if persistence # of the data is paramount # Pad the `scale.data` layer so that its soma join IDs match the experiment padded <- matrix(   data = vector(\"numeric\", length = prod(dim(object[[\"ASSAY\"]]))),   nrow = nrow(object[[\"ASSAY\"]]),   ncol = ncol(object[[\"ASSAY\"]]) ) rowidx <- match(rownames(mat), rownames(object[[\"ASSAY\"]])) colidx <- match(colnames(mat), colnames(object[[\"ASSAY\"]])) padded[rowidx, colidx] <- mat  # Use `write_soma()` to ingest densely and register it within the `uns` # collection; this may need to be created manually if the original # object does not contain command logs exp <- SOMAExperimentOpen(uri, \"WRITE\") if (!match(\"uns\", exp$names(), nomatch = 0L)) {   # For `tiledb://` URIs, set the URI for the new collection manually rather   # than relying on `file.path()`   uns <- SOMACollectionCreate(file.path(exp$uri, \"uns\"))   exp$add_new_collection(uns, \"uns\") } arr <- write_soma(   padded,   \"scale_data\",   soma_parent = exp$get(\"uns\"),   sparse = FALSE,   key = \"scale_data\" ) arr$close() exp$close()"},{"path":"/reference/write_soma.Seurat.html","id":"writing-v-assays-1","dir":"Reference","previous_headings":"","what":"Writing v5 Assays","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat v5 Assayss written individual measurements: layer matrices written sparse arrays within “X” group. feature-level metadata written data frame called “var”. Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost. following bits metadata written various parts measurement “soma_ecosystem_seurat_assay_version”: written measurement level; indicates Seurat assay version. Set “v5”. “soma_ecosystem_seurat_v5_default_layers”: written “X” group level; indicates default layers. “soma_ecosystem_seurat_v5_ragged”: written “X/<layer>” array level; value “ragged”, indicates whether layer ragged. “soma_r_type_hint”: written “X/<layer>” array level; indicates R class defining package (S4 classes) original layer.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-dimreducs","dir":"Reference","previous_headings":"","what":"Writing DimReducs","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat DimReduc objects written “obsm” “varm” groups measurement: cell embeddings written sparse matrix “obsm” group. feature loadings, empty, written sparse matrix “varm” groups; loadings padded NAs include features. Dimensional reduction names translated AnnData-style names (eg. “pca” becomes X_pca embeddings “PCs” loadings). slots, including projected feature loadings jackstraw information, lost.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-graphs","dir":"Reference","previous_headings":"","what":"Writing Graphs","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat Graph objects written sparse matrices “obsp” group measurement.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-seuratcommands","dir":"Reference","previous_headings":"","what":"Writing SeuratCommands","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat command logs written data frames “seurat_commands” group collection.","code":""},{"path":"/reference/write_soma.Seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"","code":"# \\donttest{ uri <- withr::local_tempfile(pattern = \"pbmc-small\")  data(\"pbmc_small\", package = \"SeuratObject\") suppressWarnings(pbmc_small <- SeuratObject::UpdateSeuratObject(pbmc_small)) #> Validating object structure #> Updating object slots #> Ensuring keys are in the proper structure #> Updating matrix keys for DimReduc ‘pca’ #> Updating matrix keys for DimReduc ‘tsne’ #> Ensuring keys are in the proper structure #> Ensuring feature names don't have underscores or pipes #> Updating slots in RNA #> Updating slots in RNA_snn #> Setting default assay of RNA_snn to RNA #> Updating slots in pca #> Updating slots in tsne #> Setting tsne DimReduc to global #> Setting assay used for NormalizeData.RNA to RNA #> Setting assay used for ScaleData.RNA to RNA #> Setting assay used for RunPCA.RNA to RNA #> Setting assay used for BuildSNN.RNA.pca to RNA #> No assay information could be found for FindClusters #> Setting assay used for RunTSNE.pca to RNA #> Setting assay used for JackStraw.RNA.pca to RNA #> Setting assay used for ScoreJackStraw.pca to RNA #> Setting assay used for ProjectDim.RNA.pca to RNA #> Setting assay used for FindVariableFeatures.RNA to RNA #> Validating object structure for Assay ‘RNA’ #> Validating object structure for Graph ‘RNA_snn’ #> Validating object structure for DimReduc ‘pca’ #> Validating object structure for DimReduc ‘tsne’ #> Object representation is consistent with the most current Seurat version  uri <- write_soma(pbmc_small, uri)  (exp <- SOMAExperimentOpen(uri)) #> <SOMAExperiment> #>   uri: /tmp/RtmpFgzQ65/pbmc-small29fb189613d2 exp$obs #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/pbmc-small29fb189613d2/obs #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, RNA_snn_res.0.8, letter.idents, groups,...  exp$get(\"uns\")$get(\"seurat_commands\")$names() #>  [1] \"BuildSNN.RNA.pca\"         \"FindClusters\"             #>  [3] \"FindVariableFeatures.RNA\" \"JackStraw.RNA.pca\"        #>  [5] \"NormalizeData.RNA\"        \"ProjectDim.RNA.pca\"       #>  [7] \"RunPCA.RNA\"               \"RunTSNE.pca\"              #>  [9] \"ScaleData.RNA\"            \"ScoreJackStraw.pca\"       (ms <- exp$ms$get(\"RNA\")) #> <SOMAMeasurement> #>   uri: file:///tmp/RtmpFgzQ65/pbmc-small29fb189613d2/ms/RNA ms$var #> <SOMADataFrame> #>   uri: file:///tmp/RtmpFgzQ65/pbmc-small29fb189613d2/ms/RNA/var #>   dimensions: soma_joinid  #>   attributes: vst.mean, vst.variance, vst.variance.expected, vst.variance.standardized, vst...  ms$X$names() #> [1] \"counts\"     \"data\"       \"scale_data\" ms$obsm$names() #> [1] \"X_pca\"  \"X_tsne\" ms$varm$names() #> [1] \"PCs\" ms$obsp$names() #> [1] \"RNA_snn\"  exp$close() # }"},{"path":"/reference/write_soma.SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Write SingleCellExperiment object SOMA","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"","code":"# S3 method for class 'SingleCellExperiment' write_soma(   x,   uri,   ms_name = NULL,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"x object. uri URI resulting SOMA object. ms_name Name resulting measurement; defaults mainExpName(x). ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists. “resume”: attempt create new SOMA; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"URI resulting SOMAExperiment generated data contained x.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-reduced-dimensions","dir":"Reference","previous_headings":"","what":"Writing Reduced Dimensions","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Reduced dimensions written sparse matrices within obsm group measurement named ms_name.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-column-pairs","dir":"Reference","previous_headings":"","what":"Writing Column Pairs","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Column-wise relationship matrices written sparse matrices within obsp group measurement named ms_name.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-row-pairs","dir":"Reference","previous_headings":"","what":"Writing Row Pairs","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Row-wise relationship matrices written sparse matrices within varp group measurement named ms_name.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-coldata","dir":"Reference","previous_headings":"","what":"Writing colData","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"colData written data frame called “obs” experiment level.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-assay-matrices","dir":"Reference","previous_headings":"","what":"Writing Assay Matrices","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"assay matrix written sparse matrix within X group measurement named ms_name. Names assay matrices within X taken assay names. Assay matrices transposed (samples rows) prior writing.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-rowdata","dir":"Reference","previous_headings":"","what":"Writing rowData","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"rowData written data frame called “var” measurement level.","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"","code":"if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SingleCellExperiment\", quietly = TRUE) # \\donttest{ uri <- withr::local_tempfile(pattern = \"single-cell-experiment\")  mat <- abs(Matrix::rsparsematrix(   230L,   80L,   0.3,   dimnames = list(paste0(\"feature_\", seq_len(230)), paste0(\"cell_\", seq_len(80))) )) (sce <- SingleCellExperiment::SingleCellExperiment(   assays = list(counts = mat, logcounts = log2(mat + 1L)),   reducedDims = list(     pca = matrix(stats::runif(80 * 5L), nrow = 80),     tsne = matrix(stats::rnorm(80 * 2L), nrow = 80)   ),   mainExpName = \"RNA\" ))  uri <- write_soma(sce, uri)  (exp <- SOMAExperimentOpen(uri)) exp$close() # } }"},{"path":"/reference/write_soma.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"Write SummarizedExperiment object SOMA","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' write_soma(   x,   uri,   ms_name,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"x object. uri URI resulting SOMA object. ms_name Name resulting measurement. ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists. “resume”: attempt create new SOMA; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext.","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"URI resulting SOMAExperiment generated data contained x.","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-coldata","dir":"Reference","previous_headings":"","what":"Writing colData","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"colData written data frame called “obs” experiment level.","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-assay-matrices","dir":"Reference","previous_headings":"","what":"Writing Assay Matrices","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"assay matrix written sparse matrix within X group measurement named ms_name. Names assay matrices within X taken assay names. Assay matrices transposed (samples rows) prior writing.","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-rowdata","dir":"Reference","previous_headings":"","what":"Writing rowData","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"rowData written data frame called “var” measurement level.","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"","code":"if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SummarizedExperiment\", quietly = TRUE) # \\donttest{ uri <- withr::local_tempfile(pattern = \"summarized-experiment\")  mat <- abs(Matrix::rsparsematrix(   230L,   80L,   0.3,   dimnames = list(paste0(\"feature_\", seq_len(230)), paste0(\"cell_\", seq_len(80))) )) (se <- SummarizedExperiment::SummarizedExperiment(list(counts = mat, logcounts = log2(mat + 1L))))  uri <- write_soma(se, uri, ms_name = \"RNA\")  (exp <- SOMAExperimentOpen(uri)) exp$obs (ms <- exp$ms$get(\"RNA\")) ms$var ms$X$names()  exp$close() # } }"},{"path":"/reference/write_soma.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SOMA Object from an R Object — write_soma","title":"Write a SOMA Object from an R Object — write_soma","text":"Convert R objects appropriate SOMA counterpart function methods can written provide high-level R \\(\\rightarrow\\) SOMA interface.","code":""},{"path":"/reference/write_soma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SOMA Object from an R Object — write_soma","text":"","code":"write_soma(x, uri, ..., platform_config = NULL, tiledbsoma_ctx = NULL)"},{"path":"/reference/write_soma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SOMA Object from an R Object — write_soma","text":"x object. uri URI resulting SOMA object. ... Arguments passed methods platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext.","code":""},{"path":"/reference/write_soma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SOMA Object from an R Object — write_soma","text":"URI resulting SOMAExperiment generated data contained x.","code":""},{"path":"/reference/write_soma.html","id":"known-methods","dir":"Reference","previous_headings":"","what":"Known methods","title":"Write a SOMA Object from an R Object — write_soma","text":"Writing Seurat objects. Writing SummarizedExperiment objects. Writing SingleCellExperiment objects.","code":""},{"path":"/reference/write_soma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a SOMA Object from an R Object — write_soma","text":"","code":"if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SeuratObject\", quietly = TRUE) && requireNamespace(\"S4Vectors\", quietly = TRUE) # Write a Bioconductor S4 DataFrame object to a SOMA uri <- withr::local_tempfile(pattern = \"s4-data-frame\") data(\"pbmc_small\", package = \"SeuratObject\") obs <- suppressWarnings(SeuratObject::UpdateSeuratObject(pbmc_small))[[]] head(obs <- as(obs, \"DataFrame\"))  (sdf <- write_soma(obs, uri, soma_parent = NULL, relative = FALSE))  sdf$close() } if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"S4Vectors\", quietly = TRUE) # Write a Bioconductor SelfHits object to a SOMA uri <- withr::local_tempfile(pattern = \"hits\") (hits <- S4Vectors::SelfHits(   c(2, 3, 3, 3, 3, 3, 4, 4, 4),   c(4, 3, 2:4, 2, 2:3, 2),   4,   x = stats::rnorm(9L) ))  (arr <- write_soma(hits, uri, soma_parent = NULL, relative = FALSE))  arr$close() } # Write a character vector to a SOMA uri <- withr::local_tempfile(pattern = \"character\") (sdf <- write_soma(letters, uri, soma_parent = NULL, relative = FALSE)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/character29fb2fd91f43 #>   dimensions: soma_joinid  #>   attributes: values   sdf$close() # Write a data.frame to a SOMA uri <- withr::local_tempfile(pattern = \"data-frame\") data(\"pbmc_small\", package = \"SeuratObject\") head(obs <- suppressWarnings(SeuratObject::UpdateSeuratObject(pbmc_small))[[]]) #> Validating object structure #> Updating object slots #> Ensuring keys are in the proper structure #> Updating matrix keys for DimReduc ‘pca’ #> Updating matrix keys for DimReduc ‘tsne’ #> Ensuring keys are in the proper structure #> Ensuring feature names don't have underscores or pipes #> Updating slots in RNA #> Updating slots in RNA_snn #> Setting default assay of RNA_snn to RNA #> Updating slots in pca #> Updating slots in tsne #> Setting tsne DimReduc to global #> Setting assay used for NormalizeData.RNA to RNA #> Setting assay used for ScaleData.RNA to RNA #> Setting assay used for RunPCA.RNA to RNA #> Setting assay used for BuildSNN.RNA.pca to RNA #> No assay information could be found for FindClusters #> Setting assay used for RunTSNE.pca to RNA #> Setting assay used for JackStraw.RNA.pca to RNA #> Setting assay used for ScoreJackStraw.pca to RNA #> Setting assay used for ProjectDim.RNA.pca to RNA #> Setting assay used for FindVariableFeatures.RNA to RNA #> Validating object structure for Assay ‘RNA’ #> Validating object structure for Graph ‘RNA_snn’ #> Validating object structure for DimReduc ‘pca’ #> Validating object structure for DimReduc ‘tsne’ #> Object representation is consistent with the most current Seurat version #>                   orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 #> ATGCCAGAACGACT SeuratProject         70           47               0 #> CATGGCCTGTGCAT SeuratProject         85           52               0 #> GAACCTGATGAACC SeuratProject         87           50               1 #> TGACTGGATTCTCA SeuratProject        127           56               0 #> AGTCAGACTGCACA SeuratProject        173           53               0 #> TCTGATACACGTGT SeuratProject         70           48               0 #>                letter.idents groups RNA_snn_res.1 #> ATGCCAGAACGACT             A     g2             0 #> CATGGCCTGTGCAT             A     g1             0 #> GAACCTGATGAACC             B     g2             0 #> TGACTGGATTCTCA             A     g2             0 #> AGTCAGACTGCACA             A     g2             0 #> TCTGATACACGTGT             A     g1             0  (sdf <- write_soma(obs, uri, soma_parent = NULL, relative = FALSE)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/data-frame29fb55af18e9 #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, RNA_snn_res.0.8, letter.idents, groups,...   sdf$close() if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SeuratObject\", quietly = TRUE) && requireNamespace(\"BPCells\", quietly = TRUE) # Write a BPCells `IterableMatrix` to a SOMA } # Write a matrix to a SOMA uri <- withr::local_tempfile(pattern = \"matrix\") mat <- matrix(stats::rnorm(25L), nrow = 5L, ncol = 5L) (arr <- write_soma(mat, uri, soma_parent = NULL, sparse = FALSE, relative = FALSE)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/matrix29fb36fee479 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close() # Write a dense S4 Matrix to a SOMA uri <- withr::local_tempfile(pattern = \"s4-matrix\") mat <- Matrix::Matrix(stats::rnorm(25L), nrow = 5L, ncol = 5L) (arr <- write_soma(mat, uri, soma_parent = NULL, sparse = FALSE, relative = FALSE)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/s4-matrix29fb573abf9a #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close() # Write a TsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"tsparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"T\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/tsparse-matrix29fb7eb43a9f #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()  # Write a CsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"csparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"C\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/csparse-matrix29fb1878ab98 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()  # Write an RsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"rsparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"R\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/rsparse-matrix29fb7f6c94b2 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()"},{"path":"/reference/write_soma_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Write R Objects to SOMA — write_soma_objects","title":"Write R Objects to SOMA — write_soma_objects","text":"Various helpers write R objects SOMA.","code":""},{"path":"/reference/write_soma_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write R Objects to SOMA — write_soma_objects","text":"","code":"# S3 method for class 'DataFrame' write_soma(   x,   uri,   soma_parent,   df_index = NULL,   index_column_names = \"soma_joinid\",   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Hits' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'character' write_soma(   x,   uri,   soma_parent,   ...,   key = NULL,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'data.frame' write_soma(   x,   uri,   soma_parent,   df_index = NULL,   index_column_names = \"soma_joinid\",   ...,   key = NULL,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'IterableMatrix' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'matrix' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Matrix' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'TsparseMatrix' write_soma(   x,   uri,   soma_parent,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )"},{"path":"/reference/write_soma_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write R Objects to SOMA — write_soma_objects","text":"x object. uri URI resulting SOMA object. soma_parent parent collection (eg. SOMACollection, SOMAExperiment, SOMAMeasurement). df_index name column x index (row names); default, automatically add row names x attribute named “index” resulting SOMADataFrame. index_column_names Names columns x index resulting SOMA object. ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists. “resume”: attempt create new SOMA; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. relative [Internal use ] uri relative absolute. sparse Create sparse dense array x. type Arrow type encoding x (eg. arrow::int32()); default, attempts determine arrow type arrow::infer_type(). transpose Transpose x writing. key Optionally register resulting SOMADataFrame soma_parent key; pass NULL prevent registration handle manually. shape vector two positive integers giving -disk shape array; defaults dim(x).","code":""},{"path":"/reference/write_soma_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write R Objects to SOMA — write_soma_objects","text":"resulting SOMA array data frame, returned opened write.","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-character-arrays","dir":"Reference","previous_headings":"","what":"Writing Character Arrays","title":"Write R Objects to SOMA — write_soma_objects","text":"Characters written SOMADataFrames one attribute: “values”; additionally one bit array-level metadata added: “soma_uns_outgest_hint” value “array_1d”.","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-data-frames","dir":"Reference","previous_headings":"","what":"Writing Data Frames","title":"Write R Objects to SOMA — write_soma_objects","text":"Data frames written SOMADataFrames. following transformations applied x: row names added column x entitled “index”, “_index”, random name either option already present x. column “soma_joinid” automatically added going [0, nrow(x) - 1] encoded 64-bit integers. array type column determined arrow::infer_type(); column contains non-atomic type (excluding factors, complexes,raws), code error .","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-dense-matrices","dir":"Reference","previous_headings":"","what":"Writing Dense Matrices","title":"Write R Objects to SOMA — write_soma_objects","text":"Dense matrices written two-dimensional dense arrays. overall shape array determined dim(x) type array determined type arrow::infer_type(x).","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-sparse-matrices","dir":"Reference","previous_headings":"","what":"Writing Sparse Matrices","title":"Write R Objects to SOMA — write_soma_objects","text":"Sparse matrices written two-dimensional TileDB sparse arrays COO format: row indices (“”) written “soma_dim_0”. column indices (“j”) written “soma_dim_1”. non-zero values (“x”) written “soma_data”. array type determined type, arrow::infer_type(slot(x, \"x\")).","code":""},{"path":"/reference/write_soma_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write R Objects to SOMA — write_soma_objects","text":"","code":"if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SeuratObject\", quietly = TRUE) && requireNamespace(\"S4Vectors\", quietly = TRUE) # Write a Bioconductor S4 DataFrame object to a SOMA uri <- withr::local_tempfile(pattern = \"s4-data-frame\") data(\"pbmc_small\", package = \"SeuratObject\") obs <- suppressWarnings(SeuratObject::UpdateSeuratObject(pbmc_small))[[]] head(obs <- as(obs, \"DataFrame\"))  (sdf <- write_soma(obs, uri, soma_parent = NULL, relative = FALSE))  sdf$close() } if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"S4Vectors\", quietly = TRUE) # Write a Bioconductor SelfHits object to a SOMA uri <- withr::local_tempfile(pattern = \"hits\") (hits <- S4Vectors::SelfHits(   c(2, 3, 3, 3, 3, 3, 4, 4, 4),   c(4, 3, 2:4, 2, 2:3, 2),   4,   x = stats::rnorm(9L) ))  (arr <- write_soma(hits, uri, soma_parent = NULL, relative = FALSE))  arr$close() } # Write a character vector to a SOMA uri <- withr::local_tempfile(pattern = \"character\") (sdf <- write_soma(letters, uri, soma_parent = NULL, relative = FALSE)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/character29fb41216de7 #>   dimensions: soma_joinid  #>   attributes: values   sdf$close() # Write a data.frame to a SOMA uri <- withr::local_tempfile(pattern = \"data-frame\") data(\"pbmc_small\", package = \"SeuratObject\") head(obs <- suppressWarnings(SeuratObject::UpdateSeuratObject(pbmc_small))[[]]) #> Validating object structure #> Updating object slots #> Ensuring keys are in the proper structure #> Updating matrix keys for DimReduc ‘pca’ #> Updating matrix keys for DimReduc ‘tsne’ #> Ensuring keys are in the proper structure #> Ensuring feature names don't have underscores or pipes #> Updating slots in RNA #> Updating slots in RNA_snn #> Setting default assay of RNA_snn to RNA #> Updating slots in pca #> Updating slots in tsne #> Setting tsne DimReduc to global #> Setting assay used for NormalizeData.RNA to RNA #> Setting assay used for ScaleData.RNA to RNA #> Setting assay used for RunPCA.RNA to RNA #> Setting assay used for BuildSNN.RNA.pca to RNA #> No assay information could be found for FindClusters #> Setting assay used for RunTSNE.pca to RNA #> Setting assay used for JackStraw.RNA.pca to RNA #> Setting assay used for ScoreJackStraw.pca to RNA #> Setting assay used for ProjectDim.RNA.pca to RNA #> Setting assay used for FindVariableFeatures.RNA to RNA #> Validating object structure for Assay ‘RNA’ #> Validating object structure for Graph ‘RNA_snn’ #> Validating object structure for DimReduc ‘pca’ #> Validating object structure for DimReduc ‘tsne’ #> Object representation is consistent with the most current Seurat version #>                   orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 #> ATGCCAGAACGACT SeuratProject         70           47               0 #> CATGGCCTGTGCAT SeuratProject         85           52               0 #> GAACCTGATGAACC SeuratProject         87           50               1 #> TGACTGGATTCTCA SeuratProject        127           56               0 #> AGTCAGACTGCACA SeuratProject        173           53               0 #> TCTGATACACGTGT SeuratProject         70           48               0 #>                letter.idents groups RNA_snn_res.1 #> ATGCCAGAACGACT             A     g2             0 #> CATGGCCTGTGCAT             A     g1             0 #> GAACCTGATGAACC             B     g2             0 #> TGACTGGATTCTCA             A     g2             0 #> AGTCAGACTGCACA             A     g2             0 #> TCTGATACACGTGT             A     g1             0  (sdf <- write_soma(obs, uri, soma_parent = NULL, relative = FALSE)) #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/data-frame29fb628a6a45 #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, RNA_snn_res.0.8, letter.idents, groups,...   sdf$close() if (FALSE) { # requireNamespace(\"withr\", quietly = TRUE) && requireNamespace(\"SeuratObject\", quietly = TRUE) && requireNamespace(\"BPCells\", quietly = TRUE) # Write a BPCells `IterableMatrix` to a SOMA } # Write a matrix to a SOMA uri <- withr::local_tempfile(pattern = \"matrix\") mat <- matrix(stats::rnorm(25L), nrow = 5L, ncol = 5L) (arr <- write_soma(mat, uri, soma_parent = NULL, sparse = FALSE, relative = FALSE)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/matrix29fbad325b2 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close() # Write a dense S4 Matrix to a SOMA uri <- withr::local_tempfile(pattern = \"s4-matrix\") mat <- Matrix::Matrix(stats::rnorm(25L), nrow = 5L, ncol = 5L) (arr <- write_soma(mat, uri, soma_parent = NULL, sparse = FALSE, relative = FALSE)) #> <SOMADenseNDArray> #>   uri: /tmp/RtmpFgzQ65/s4-matrix29fb70fa8d2a #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close() # Write a TsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"tsparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"T\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/tsparse-matrix29fb3839832e #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()  # Write a CsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"csparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"C\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/csparse-matrix29fb41d20a2b #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()  # Write an RsparseMatrix to a SOMA uri <- withr::local_tempfile(pattern = \"rsparse-matrix\") mat <- Matrix::rsparsematrix(5L, 5L, 0.3, repr = \"R\") (arr <- write_soma(mat, uri, soma_parent = NULL, relative = FALSE)) #> <SOMASparseNDArray> #>   uri: /tmp/RtmpFgzQ65/rsparse-matrix29fb48354cc5 #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data   arr$close()"},{"path":"/reference/write_soma_seurat_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Various helpers write Seurat sub-objects SOMA objects..","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"","code":"# S3 method for class 'Assay' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Assay5' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'DimReduc' write_soma(   x,   uri = NULL,   soma_parent,   fidx = NULL,   nfeatures = NULL,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Graph' write_soma(   x,   uri,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'SeuratCommand' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )"},{"path":"/reference/write_soma_seurat_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"x Seurat sub-object (eg. Assay, DimReduc, Graph). uri URI resulting SOMA object. soma_parent parent collection; DimReduc Graph methods, must measurement assay x generated . ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists. “resume”: attempt create new SOMA; already exists, simply open writing. platform_config Optional platform configuration. tiledbsoma_ctx Optional SOMATileDBContext. relative [Internal use ] uri relative absolute. fidx integer vector describing location features SeuratObject::Loadings(x) relation soma_parent (eg. match(rownames(Loadings(x)), rownames(assay))). nfeatures number features present soma_parent (eg. nrow(assay)).","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Assay Assay5 methods: SOMAMeasurement data x, returned opened write. DimReduc Graph methods: invisibly returns soma_parent, opened write, values x added .","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-v-assays","dir":"Reference","previous_headings":"","what":"Writing v3 Assays","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat Assay objects written individual measurements: “data” matrix written sparse array called “data” within “X” group. “counts” matrix, empty, written sparse array called “counts” within “X” group. “scale.data” matrix, empty, written sparse array called “scale_data” within “X” group. feature-level metadata written data frame called “var”. Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"performance-considerations","dir":"Reference","previous_headings":"","what":"Performance Considerations","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Ingestion large dense layers, scale.data, can memory intensive. better performance, users can remove layers prior ingestion regenerate export, ingest separately dense arrays need persist exact matrix Please note dense arrays read using SOMAExperimentAxisQuery mechanism; use SOMADenseNDArray$read_dense_matrix, remembering transpose adding back Seurat object","code":"# Using SeuratObject v5 syntax on a v3 `Assay` # Cache the layer for separate ingestion, skip if planning to regenerate mat <- object[[\"ASSAY\"]]$scale.data  # Remove the `scale.data` layer object[[\"ASSAY\"]]$scale.data <- NULL  # Ingest the smaller object uri <- write_soma(object, \"/path/to/soma\")  # Ingest the `scale.data` layer densely; needed only if persistence # of the data is paramount # Pad the `scale.data` layer so that its soma join IDs match the experiment padded <- matrix(   data = vector(\"numeric\", length = prod(dim(object[[\"ASSAY\"]]))),   nrow = nrow(object[[\"ASSAY\"]]),   ncol = ncol(object[[\"ASSAY\"]]) ) rowidx <- match(rownames(mat), rownames(object[[\"ASSAY\"]])) colidx <- match(colnames(mat), colnames(object[[\"ASSAY\"]])) padded[rowidx, colidx] <- mat  # Use `write_soma()` to ingest densely and register it within the `uns` # collection; this may need to be created manually if the original # object does not contain command logs exp <- SOMAExperimentOpen(uri, \"WRITE\") if (!match(\"uns\", exp$names(), nomatch = 0L)) {   # For `tiledb://` URIs, set the URI for the new collection manually rather   # than relying on `file.path()`   uns <- SOMACollectionCreate(file.path(exp$uri, \"uns\"))   exp$add_new_collection(uns, \"uns\") } arr <- write_soma(   padded,   \"scale_data\",   soma_parent = exp$get(\"uns\"),   sparse = FALSE,   key = \"scale_data\" ) arr$close() exp$close()"},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-v-assays-1","dir":"Reference","previous_headings":"","what":"Writing v5 Assays","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat v5 Assayss written individual measurements: layer matrices written sparse arrays within “X” group. feature-level metadata written data frame called “var”. Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost. following bits metadata written various parts measurement “soma_ecosystem_seurat_assay_version”: written measurement level; indicates Seurat assay version. Set “v5”. “soma_ecosystem_seurat_v5_default_layers”: written “X” group level; indicates default layers. “soma_ecosystem_seurat_v5_ragged”: written “X/<layer>” array level; value “ragged”, indicates whether layer ragged. “soma_r_type_hint”: written “X/<layer>” array level; indicates R class defining package (S4 classes) original layer.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-dimreducs","dir":"Reference","previous_headings":"","what":"Writing DimReducs","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat DimReduc objects written “obsm” “varm” groups measurement: cell embeddings written sparse matrix “obsm” group. feature loadings, empty, written sparse matrix “varm” groups; loadings padded NAs include features. Dimensional reduction names translated AnnData-style names (eg. “pca” becomes X_pca embeddings “PCs” loadings). slots, including projected feature loadings jackstraw information, lost.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-graphs","dir":"Reference","previous_headings":"","what":"Writing Graphs","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat Graph objects written sparse matrices “obsp” group measurement.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-seuratcommands","dir":"Reference","previous_headings":"","what":"Writing SeuratCommands","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat command logs written data frames “seurat_commands” group collection.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"","code":"uri <- withr::local_tempfile(pattern = \"seurat-sub\")  data(\"pbmc_small\", package = \"SeuratObject\") suppressWarnings(pbmc_small <- SeuratObject::UpdateSeuratObject(pbmc_small)) #> Validating object structure #> Updating object slots #> Ensuring keys are in the proper structure #> Updating matrix keys for DimReduc ‘pca’ #> Updating matrix keys for DimReduc ‘tsne’ #> Ensuring keys are in the proper structure #> Ensuring feature names don't have underscores or pipes #> Updating slots in RNA #> Updating slots in RNA_snn #> Setting default assay of RNA_snn to RNA #> Updating slots in pca #> Updating slots in tsne #> Setting tsne DimReduc to global #> Setting assay used for NormalizeData.RNA to RNA #> Setting assay used for ScaleData.RNA to RNA #> Setting assay used for RunPCA.RNA to RNA #> Setting assay used for BuildSNN.RNA.pca to RNA #> No assay information could be found for FindClusters #> Setting assay used for RunTSNE.pca to RNA #> Setting assay used for JackStraw.RNA.pca to RNA #> Setting assay used for ScoreJackStraw.pca to RNA #> Setting assay used for ProjectDim.RNA.pca to RNA #> Setting assay used for FindVariableFeatures.RNA to RNA #> Validating object structure for Assay ‘RNA’ #> Validating object structure for Graph ‘RNA_snn’ #> Validating object structure for DimReduc ‘pca’ #> Validating object structure for DimReduc ‘tsne’ #> Object representation is consistent with the most current Seurat version  col <- SOMACollectionCreate(uri)  # Write a v3 Assay (assay <- pbmc_small[[\"RNA\"]]) #> Assay data with 230 features for 80 cells #> Top 10 variable features: #>  PPBP, IGLL5, VDAC3, CD1C, AKR1C3, PF4, MYL9, GNLY, TREML1, CA2  (ms <- write_soma(assay, \"RNA\", soma_parent = col)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/RNA #>   arrays: var  #>   groups: X   # Write a v5 Assay (assay5 <- methods::as(pbmc_small[[\"RNA\"]], \"Assay5\")) #> Assay (v5) data with 230 features for 80 cells #> Top 10 variable features: #>  PPBP, IGLL5, VDAC3, CD1C, AKR1C3, PF4, MYL9, GNLY, TREML1, CA2  #> Layers: #>  data, counts, scale.data  (ms5 <- write_soma(assay5, \"RNA5\", soma_parent = col)) #> <SOMAMeasurement> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/RNA5 #>   arrays: var  #>   groups: X   ms5$close()  # Write a dimensional reduction (tsne <- pbmc_small[[\"tsne\"]]) write_soma(tsne, soma_parent = ms) ms$obsm #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/RNA/obsm #>   arrays: X_tsne   # Write a Seurat Graph (snn <- pbmc_small[[\"RNA_snn\"]]) #> A Graph object containing 80 cells write_soma(snn, \"snn\", soma_parent = ms) ms$obsp #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/RNA/obsp #>   arrays: snn   # Write a Seurat command log (cmd <- pbmc_small[[\"NormalizeData.RNA\"]]) #> Command: NormalizeData(object = pbmc_small) #> Time: 2018-08-27 20:32:17.136699 #> assay : RNA  #> normalization.method : LogNormalize  #> scale.factor : 10000  #> verbose : TRUE  write_soma(cmd, \"NormalizeData.RNA\", soma_parent = col) (logs <- col$get(\"seurat_commands\")) #> <SOMACollection> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/seurat_commands #>   arrays: NormalizeData.RNA  logs$get(\"NormalizeData.RNA\") #> <SOMADataFrame> #>   uri: /tmp/RtmpFgzQ65/seurat-sub29fb40177dff/seurat_commands/NormalizeData.RNA #>   dimensions: soma_joinid  #>   attributes: values   col$close()"},{"path":"/news/index.html","id":"tiledbsoma-210","dir":"Changelog","previous_headings":"","what":"tiledbsoma 2.1.0","title":"tiledbsoma 2.1.0","text":"release adds support ingestion BPCells-backed Seurat objects write_soma(), adds warnings new deprecations, updates TileDB core version 2.29.1.","code":""},{"path":"/news/index.html","id":"added-2-1-0","dir":"Changelog","previous_headings":"","what":"Added","title":"tiledbsoma 2.1.0","text":"Add support ingestion BPCells-backed Seurat objects write_soma() (#4273)","code":""},{"path":"/news/index.html","id":"changed-2-1-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"tiledbsoma 2.1.0","text":"Update TileDB core version 2.29.1. (#4284)","code":""},{"path":"/news/index.html","id":"deprecated-2-1-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"tiledbsoma 2.1.0","text":"Mark SOMANDArrayBase$set_data_type() deprecation. (#4279) Mark setting domain NULL SOMADataFrame$create() deprecation. (#4274)","code":""},{"path":"/news/index.html","id":"tiledbsoma-200","dir":"Changelog","previous_headings":"","what":"tiledbsoma 2.0.0","title":"tiledbsoma 2.0.0","text":"release first TileDB-SOMA release follows new versioning policy (see developer docs). introduces new DELETE mode deprecates removing elements Collection WRITE mode. also updates core TileDB version 2.28.1.","code":""},{"path":"/news/index.html","id":"added-2-0-0","dir":"Changelog","previous_headings":"","what":"Added","title":"tiledbsoma 2.0.0","text":"Add delete mode specified mode=\"DELETE\". (#4125)","code":""},{"path":"/news/index.html","id":"changed-2-0-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"tiledbsoma 2.0.0","text":"Update TileDB core 2.28.1. (#4077) Remove RcppSpdlog spld dependencies. Logs longer forwarded R output.","code":""},{"path":"/news/index.html","id":"deprecated-2-0-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"tiledbsoma 2.0.0","text":"Deprecate removing elements collection write mode. future, new removals need done delete mode. (#4125)","code":""},{"path":[]},{"path":"/news/index.html","id":"added-1-18-0","dir":"Changelog","previous_headings":"","what":"Added","title":"tiledbsoma 1.18.0","text":"New SOMAObject base class serve root SOMAArrayBase SOMACollectionBase (#3771) New field SOMACollectionBase$members get list members collection (#3771)","code":""},{"path":"/news/index.html","id":"changed-1-18-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"tiledbsoma 1.18.0","text":"Handshake internal_use_only = \"allowed_use\" $new(), $open(), $create() replaced environment scoping; use factory functions opening creation now mandatory (#3771) TileDBObject, TileDBArray, TileDBGroup classes removed (#3771) SOMACollection$to_list() SOMACollection$to_data_frame() removed unused public internal methods inherited TileDBGroup (#3771)","code":""},{"path":"/news/index.html","id":"removed-1-18-0","dir":"Changelog","previous_headings":"","what":"Removed","title":"tiledbsoma 1.18.0","text":"SOMAArray$object removed (#3771)","code":""},{"path":[]},{"path":"/news/index.html","id":"removed-1-17-0","dir":"Changelog","previous_headings":"","what":"Removed","title":"tiledbsoma 1.17.0","text":"TileDBURI class removed (#3644) arrow_field_from_tiledb_dim() arrow_field_from_tiledb_attr() arrow_schema_from_tiledb_schema()","code":""},{"path":"/news/index.html","id":"added-1-17-0","dir":"Changelog","previous_headings":"","what":"Added","title":"tiledbsoma 1.17.0","text":"New function get_tiledb_object_type() replace tiledb::tiledb_object_type() (#3644) New function get_tiledb_version() replace tiledb::tiledb_version() (#3644) New method SOMAArrayBase$is_sparse() replace tiledb::.sparse() (#3644) New method SOMAArrayBase$allows_duplicates() replace tiledb::allows_dups() (#3644) New method SOMADataFrame$levels() replace tiledb-r enum accessors (#3644)","code":""},{"path":"/news/index.html","id":"changed-1-17-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"tiledbsoma 1.17.0","text":"Update TileDB core 2.28.0 (#4057) TileDBArray$attributes() promoted SOMAArrayBase$attributes() returns named list instead external pointer (#3644)","code":""},{"path":"/news/index.html","id":"fixed-1-17-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"tiledbsoma 1.17.0","text":"Fix C++20 flag configuration option instead hard-coded (#4051)","code":""},{"path":"/news/index.html","id":"tiledbsoma-1160","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.16.0","title":"tiledbsoma 1.16.0","text":"Encode string metadata TILEDB_STRING_UTF8 instead TILEDB_STRING_ASCII Use S3 method dispatch integer64 instead directly calling S3 methods [c++] Replace SOMAArray read write calls ManagedQuery #3678 Remove used_shape, deprecated 1.15 scheduled removal 1.16 #3723","code":""},{"path":"/news/index.html","id":"tiledbsoma-1157","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.7","title":"tiledbsoma 1.15.7","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1156","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.6","title":"tiledbsoma 1.15.6","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1155","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.5","title":"tiledbsoma 1.15.5","text":"release contains Python-bugfix","code":""},{"path":"/news/index.html","id":"tiledbsoma-1154","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.4","title":"tiledbsoma 1.15.4","text":"release contains Python-updates spatial transcriptomics","code":""},{"path":"/news/index.html","id":"tiledbsoma-1153","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.3","title":"tiledbsoma 1.15.3","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1152","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.2","title":"tiledbsoma 1.15.2","text":"release contains Python-bugfix","code":""},{"path":"/news/index.html","id":"tiledbsoma-1151","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.1","title":"tiledbsoma 1.15.1","text":"Encode string metadata TILEDB_STRING_UTF8 instead TILEDB_STRING_ASCII #3469","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-15-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.15.0","text":"Remove unused fragment_count accessor #3054 Implement missing domain argument SOMADataFrame create #3032 Use libtiledbsoma R schema evolution #3100 Push attrnames C++ #3121 Push schema accessor libtiledbsoma #3079 Handle numeric coords properly reading arrays Remove two tiledb::schema callsites #3160 Add new Arrow--R type mapper Add transitional/non-exported parse_query_condition_new #3162 Apply new parse_query_condition #3174 Apply new non_empty_domain #3176 Support dense current domain core 2.27 #3180 Fix is_named_list bug half-named lists #3183 Expose block/random writer sparse arrays #3204 Min-sizing dataframes/arrays new shape feature #3208 Proper prefixing shape-related methods #3237 Bindings upgrade_domain #3238 Apply styler::style_pkg() #3239 Plumb old-style SOMATileDBContext new-style soma_context() #3252 Fixes dense arrays yet---released core 2.27 #3270 fixes unit-test cases dense + core 2.27 #3280 Add initial support ragged array writing Seurat v5 @mojaveazure #2523 Remove 2.27-related feature flag @johnkerl #3368 Revert #3300 @johnkerl #3358 Enforce dataframe domain lower bound == 0 @johnkerl #3300 Data refresh new shapes @johnkerl #3303 Move beyond new-shape feature flag @johnkerl #3301 Note dev installs spdlog failures @johnkerl #3324 Remove tiledb-r specific install @mojaveazure #3319 Try unbreak r-valgrind CI @johnkerl #3318 Avoid log truncation “Last 13 lines output” @johnkerl #3313 Run tests closer internal-dependency order @johnkerl #3311 Use standard name zzz.R init code @johnkerl #3332 Address two compiler warnings @johnkerl #3320 Add support writing Seurat v5 ragged arrays Update docstrings domain argument create #3396 Vignette new-shape feature #3302 Fix blockwise iterator + re-indexer return re-indexed shape instead full domain Docstring audit new shape #3399 Add check_only support domain/shape updates #3400 Adjust blockwise + re-indexer return condensed matrix, full domain #3395 [c++] Use core 2.27.0.rc5 #3410 [c++] Use core 2.27.0 #3422","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.5","text":"Fixes Python-bug #3225","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.4","text":"Add new Arrow--R type mapper #3161 Expose block/random writer sparse arrays #3204","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.3","text":"Handle numeric coords properly reading arrays 3145","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.2","text":"Fixes Python-bug #3074","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.1","text":"Fixes Python-bug #3013","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.0","text":"New resize tiledbsoma_upgrade_shape accessors part new-shape project Make use timestamp ranges libtiledbsoma Simplify timestamp ranges; strengthen assumptions tiledb_timestamp Use cached timestamps $write() $create() Fix bug blockwise iteration Lay groundwork cached SOMA contexts within objects rather re-creating contexts SOMA context objects used throughout SOMA object creation Add value-checking axis parameter initializing blockwise reads","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-13-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.1","text":"Includes fix appended enumerations #2903","code":""},{"path":"/news/index.html","id":"changes-1-13-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.1","text":"New resize tiledbsoma_upgrade_shape accessors part new-shape project Make use timestamp ranges libtiledbsoma Simplify timestamp ranges; strengthen assumptions tiledb_timestamp Use cached timestamps $write() $create() Fix bug blockwise iteration Lay groundwork cached SOMA contexts within objects rather re-creating contexts SOMA context objects used throughout SOMA object creation Add value-checking axis parameter initializing blockwise reads","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-13-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.0","text":"Updates TileDB Core dependency 2.25.0 used_shape function deprecated; shape mods upcoming scheduled TileDB-SOMA 1.15 Change $reopen(mode = ) default flip modes; require explicit mode parameter passed Add drop_levels SOMAExperimentAxisQuery -> ecosystem outgestors drop unused factor levels","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.3","text":"Updates TileDB Core dependency 2.24.2","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.2","text":"R changes; update Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.1","text":"Updates TileDB Core 2.24.1","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.0","text":"Updates TileDB Core 2.24 TileDB-R 0.28 Connect re-indexer blockwise iterator return re-indexed tables matrices","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.4","text":"Fixes couple bugs observed Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.3","text":"Fixes intermittent segfault observed Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.2","text":"New reopen method available R","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.1","text":"R changes; update Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.0","text":"Add support ingestion SeuratCommand logs Add support outgestion SeuratCommand logs Add support reading *m *p layers SOMAExperimentAxisQuery Add support blockwise iteration Make reopen() public method TileDBObjects Add support resume-mode write_soma() Push default-setting TileDBCreateOptions $initialize() instead accessors Muffle warnings missing command logs outgesting SOMA Seurat SOMADataFrame$shape() throw -yet-implemented error Disable running SeuratObject::.CalcN() outgesting SOMA Seurat Clear timestamp using $reopen() reopen current time Add support re-indexer","code":""},{"path":[]},{"path":"/news/index.html","id":"fixes-1-6-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"tiledbsoma 1.6.0","text":"SOMADataFrame, SOMASparseNDArray, SOMADenseNDArray’s write() method now correctly leaves array open write mode","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.5.0","text":"Add support /O R factors enumerated types SOMADataFrame Add support writing SummarizedExperiment SingleCellExperiment object SOMAs Add support bounding boxes sparse arrays Add support creating SOMADataFrames ordered() columns Add support /O SOMA SingleCellExperiment Add support updating obs var Write string attrs UTF-8 (Python compatibility) Optimize export obsm/varm arrays Seurat Add axis_query() method SOMAExperiment Add to_sparse_matrix() method SOMAExperimentAxisQuery Force exporting v3 assays SeuratObject v5 installed","code":""},{"path":"/news/index.html","id":"tiledbsoma-140","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.4.0","title":"tiledbsoma 1.4.0","text":"initial release tiledbsoma R package.","code":""},{"path":"/news/index.html","id":"changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.4.0","text":"Added NEWS.md file track changes package TileDBGroup gains names method retrieve names group members Added SOMAMeasurement SOMAExperiment classes spdl now used logging TileDB performance statistics can now collected analysis Added support performing axis-based queries SOMAExperiment via SOMAExperimentAxisQuery class TileDBArray class gained colnames() method returns names dimensions attributes Added internal helpers centrally validate coords value_filter arguments R6 classes’ create() method now return self rather nothing Fixed calculating relative paths 1 URIs contains file:// prefix Added PlatformConfig SOMATileDBContext classes handle SOMA TileDB configuration Add Seurat outgestors SOMAExperimentAxisQuery objects Numeric coordinates passed SOMADataFrame$read() now automatically upcast int64 necessary Add ingestors read data Seurat objects Add methods listing accessing bundled datasets, now includes SOMAExperiment containing pbmc_small dataset SeuratObject package New vignettes describing SOMA objects, reading data , querying SOMA experiments Objects added SOMACollection-based classes using add_new_*() methods now pass parent context platform config SOMAExperimentAxisQuery gained to_sparse_matrix() method retrieving data named sparse matrix SOMAExperiment gained axis_query() construct SOMAExperimentAxisQuery object Add SingleCellExperiment outgestor SOMAExperimentAxisQuery objects","code":""}]
