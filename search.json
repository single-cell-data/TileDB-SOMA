[{"path":"/articles/UsingPlatformConfig.html","id":"advanced-schema-configuration","dir":"Articles","previous_headings":"","what":"Advanced schema configuration","title":"Using PlatformConfig","text":"Default schema-level TileDB parameters set useful users. particular needs use-cases, though, can use PlatformConfig options override default schema parameters. can passed SOMADataFrameCreate, SOMASparseNDArrayCreate, et al. Coming soon: advice connect from_seurat.","code":"platform_config <- PlatformConfig$new() platform_config$set('tiledb', 'create', 'dataframe_dim_zstd_level', 8) platform_config$set('tiledb', 'create', 'sparse_nd_array_dim_zstd_level', 9) platform_config$set('tiledb', 'create', 'tile_order', 'ROW_MAJOR') platform_config$set('tiledb', 'create', 'cell_order', 'ROW_MAJOR') platform_config$set('tiledb', 'create', 'dims', list(   soma_dim_0 = list(filters = list(list(name=\"ZSTD\", COMPRESSION_LEVEL=9)), tile=100000),   soma_dim_1 = list(filters = list(list(name=\"ZSTD\", COMPRESSION_LEVEL=9)), tile=100000), )) platform_config$set('tiledb', 'create', 'attrs', list(   soma_data_a = list(filters = list(\"RLE\")) )) tdco <- TileDBCreateOptions$new(platform_config)"},{"path":"/articles/soma-experiment-queries.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Querying a SOMA experiment","text":"notebook, ’ll take quick look query SOMAExperiment using SOMAExperimentAxisQuery class. allows easy selection data SOMAMeasurement filtering annotations stored axis data frame (.e., obs var).","code":"library(tiledbsoma)"},{"path":"/articles/soma-experiment-queries.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Querying a SOMA experiment","text":"Load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object.","code":"experiment <- load_dataset(\"soma-exp-pbmc-small\") experiment #> <SOMAExperiment> #>   uri: /tmp/RtmpBJ0LT9/soma-exp-pbmc-small"},{"path":"/articles/soma-experiment-queries.html","id":"querying-basics","dir":"Articles","previous_headings":"","what":"Querying basics","title":"Querying a SOMA experiment","text":"perform query ’ll need initialize new SOMAExperimentAxisQuery object, specifying SOMAExperiment SOMAMeasurement within experiment want query. can see current experiment contains single measurement: \"RNA\". use larger (smaller) buffer sizes: Alternatively, can environment export TILEDB_SOMA_INIT_BUFFER_BYTES=2147483648 loading data. Now can construct query object. ’s created, can use query object inspect, select, extract filtered data experiment. example, can use n_obs n_vars determine number observations variables passed filtering criteria. Since didn’t specify filtering criteria, numbers match full size experiment. Number observations: Number variables: can also extract data component experiment. ’ll read obs data frame query using obs() returns iterator arrow::Table. iterator useful data large load memory allowing stream data chunks. applies var() well. load data memory can concatenate chunks iterator shown . reminder arrow:Table can easily cast tibble Alternatively, can use iterator, retrieves data chunks smaller soma.init_buffer_bytes context field. can use iterator’s method $read_next() load chunk memory. example full obs table relatively small fits one chunk. bigger SOMADataFrame can check iteration finished checking logical $read_complete(). demonstrate creating new iterator. can also access expression via X(). Similarly obs() var(), X() intended iteration, case access two different iterators, thus X() returns reader gives access iterator arrow::Table one Matrix::sparse_matrix. Let’s take look Arrow Table iterator: obs example data small enough fit one chunk. bigger data can user iterator$read_complete() check status iteration iterator$concat() concatenate rest chunks. iterator Matrix::sparse_matrix works way. Keep mind matrix format dgTMatrix memory-efficient format type can easily iterated. importantly, resulting object “view” full matrix original shape indexes data corresponding query coordinates filters (see section ).","code":"experiment$ms #> <SOMACollection> #>   uri: file:///tmp/RtmpBJ0LT9/soma-exp-pbmc-small/ms ctx <- SOMATileDBContext$new(c(soma.init_buffer_bytes = as.character(2 * 1024**3))) experiment <- SOMAExperimentOpen(experiment$uri, tiledbsoma_ctx = ctx) query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\" ) query$n_obs #> [1] 80 query$n_vars #> [1] 230 iterator <- query$obs() obs <- iterator$concat() obs #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> obs$to_data_frame() #> # A tibble: 80 × 9 #>    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents #>          <int> <fct>            <dbl>        <int> <fct>           <fct>         #>  1           0 SeuratProj…         70           47 0               A             #>  2           1 SeuratProj…         85           52 0               A             #>  3           2 SeuratProj…         87           50 1               B             #>  4           3 SeuratProj…        127           56 0               A             #>  5           4 SeuratProj…        173           53 0               A             #>  6           5 SeuratProj…         70           48 0               A             #>  7           6 SeuratProj…         64           36 0               A             #>  8           7 SeuratProj…         72           45 0               A             #>  9           8 SeuratProj…         52           36 0               A             #> 10           9 SeuratProj…        100           41 0               A             #> # ℹ 70 more rows #> # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr> iterator <- query$obs() iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator <- experiment$obs$read() iterator$read_complete() #> [1] FALSE iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator$read_complete() #> [1] TRUE reader <- query$X(layer_name = \"counts\") table_irerator <- reader$tables() table_irerator$read_next() #> Table #> 4456 rows x 3 columns #> $soma_dim_0 <int64 not null> #> $soma_dim_1 <int64 not null> #> $soma_data <double not null> reader <- query$X(layer_name = \"counts\") iterator <- reader$sparse_matrix() str(iterator$read_next()) #> Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:4456] 0 0 0 0 0 0 0 0 0 0 ... #>   ..@ j       : int [1:4456] 1 5 8 11 22 30 33 34 36 38 ... #>   ..@ Dim     : int [1:2] 80 230 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:4456] 1 1 3 1 1 4 1 5 1 1 ... #>   ..@ factors : list()"},{"path":"/articles/soma-experiment-queries.html","id":"adding-filters","dir":"Articles","previous_headings":"","what":"Adding filters","title":"Querying a SOMA experiment","text":"Adding filters requires creating SOMAAxisQuery object allows define coordinates, value filters, axis. ’ll create query obs slices first 40 rows, filters subset based nCount_RNA column. apply filter ’ll pass new SOMAExperimentAxisQuery object. Let’s see many observations query identified. , can load obs data frame memory now includes filtered observations. well X matrix two different formats: arrow::Table Matrix::sparse_matrix dgTMatrix format. re-indexed re-shaped sparse matrix see section .","code":"obs_query <- SOMAAxisQuery$new(   coords = list(soma_joinid = 0:39),   value_filter = \"nCount_RNA > 100\" ) query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\",   obs_query = obs_query ) query$n_obs #> [1] 26 obs <- query$obs(column_names = c(\"obs_id\", \"nCount_RNA\"))$concat() obs$to_data_frame() #> # A tibble: 26 × 2 #>    obs_id         nCount_RNA #>    <chr>               <dbl> #>  1 TGACTGGATTCTCA        127 #>  2 AGTCAGACTGCACA        173 #>  3 AGAGATGATCTCGC        191 #>  4 GGGTAACTCTAGTG        101 #>  5 CTAAACCTGTGCAT        168 #>  6 TTGGTACTGAATCC        135 #>  7 TACATCACGCTAAC        109 #>  8 TTACCATGAATCGC        298 #>  9 ATAGGAGAAACAGA        406 #> 10 GCGCACGACTTTAC        213 #> # ℹ 16 more rows query$X(\"counts\")$tables()$concat() #> Table #> 1485 rows x 3 columns #> $soma_dim_0 <int64 not null> #> $soma_dim_1 <int64 not null> #> $soma_data <double not null> str(query$X(\"counts\")$sparse_matrix()$concat()) #> Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:1485] 3 3 3 3 3 3 3 3 3 3 ... #>   ..@ j       : int [1:1485] 8 11 22 30 31 32 33 34 37 38 ... #>   ..@ Dim     : int [1:2] 80 230 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:1485] 13 1 6 5 2 1 2 2 1 1 ... #>   ..@ factors : list()"},{"path":"/articles/soma-experiment-queries.html","id":"export-to-an-annotated-re-indexed-sparse-matrix","dir":"Articles","previous_headings":"","what":"Export to an annotated re-indexed sparse matrix","title":"Querying a SOMA experiment","text":"component queried SOMAExperiment can exported [sparse matrix][Matrix::sparseMatrix-class] using to_sparse_matrix() method. example, let’s create sparse matrix filtered expression data. ’ll create new query returns smaller subset data make output easier read. indicate want access \"counts\" layer \"X\" collection. default, dimensions named using soma_joinid values unique observation variable. However, dimension names can come column obs var arrays uniquely identifies record. expression matrix makes sense name dimensions using cell barcodes gene names, stored obs_id var_id columns, respectively. can use method SOMAExperiment’s collections. Let’s access t-SNE coordinates stored obsm collection’s X_tsne layer, populating row names cell barcodes.","code":"query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\",   obs_query = SOMAAxisQuery$new(coords = 0:9),   var_query = SOMAAxisQuery$new(coords = 0:9) ) query$to_sparse_matrix(   collection = \"X\",   layer = \"counts\" ) #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>   [[ suppressing 10 column names '0', '1', '2' ... ]] #>                        #> 0 . 1 . . . 1 . .  3 . #> 1 . . . 1 . . . .  7 . #> 2 . . . . . . . . 11 . #> 3 . . . . . . . . 13 . #> 4 . . . 1 . . . .  3 . #> 5 . . . 1 . . . .  4 . #> 6 . . . . . . . .  6 . #> 7 . . . 1 . . . .  4 . #> 8 . . . . . . . .  2 . #> 9 . 1 . . . . . . 21 . query$to_sparse_matrix(   collection = \"X\",   layer = \"counts\",   obs_index = \"obs_id\",   var_index = \"var_id\" ) #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>   [[ suppressing 10 column names 'MS4A1', 'CD79B', 'CD79A' ... ]] #>                                     #> ATGCCAGAACGACT . 1 . . . 1 . .  3 . #> CATGGCCTGTGCAT . . . 1 . . . .  7 . #> GAACCTGATGAACC . . . . . . . . 11 . #> TGACTGGATTCTCA . . . . . . . . 13 . #> AGTCAGACTGCACA . . . 1 . . . .  3 . #> TCTGATACACGTGT . . . 1 . . . .  4 . #> TGGTATCTAAACAG . . . . . . . .  6 . #> GCAGCTCTGTTTCT . . . 1 . . . .  4 . #> GATATAACACGCAT . . . . . . . .  2 . #> AATGTTGACAGTCA . 1 . . . . . . 21 . query$to_sparse_matrix(   collection = \"obsm\",   layer = \"X_tsne\",   obs_index = \"obs_id\" ) #> 10 x 2 sparse Matrix of class \"dgTMatrix\" #>                          0           1 #> ATGCCAGAACGACT   0.8675977  -8.1007483 #> CATGGCCTGTGCAT  -7.3925306  -8.7717451 #> GAACCTGATGAACC -28.2064258   0.2410102 #> TGACTGGATTCTCA  16.3480689 -11.1633255 #> AGTCAGACTGCACA   1.9113998 -11.1929311 #> TCTGATACACGTGT   3.1475998  -9.9369312 #> TGGTATCTAAACAG  17.8526863  -9.8978901 #> GCAGCTCTGTTTCT  -6.4912187  -8.3874434 #> GATATAACACGCAT   1.3305297  -9.6807936 #> AATGTTGACAGTCA  16.9642732  -9.4295980"},{"path":"/articles/soma-experiment-queries.html","id":"export-to-seurat","dir":"Articles","previous_headings":"","what":"Export to Seurat","title":"Querying a SOMA experiment","text":"query object also contains methods loading results Seurat object (Seurat’s component classes). to_sparse_matrix() method, can specify obs_index var_index use naming dimensions resulting object.","code":"query <- SOMAExperimentAxisQuery$new(   experiment = experiment,   measurement_name = \"RNA\" )  query$to_seurat(   X_layers = c(counts = \"counts\", data = \"data\"),   obs_index = \"obs_id\",   var_index = \"var_id\" ) #> Warning: Adding a command log without an assay associated with it #> An object of class Seurat  #> 230 features across 80 samples within 1 assay  #> Active assay: RNA (230 features, 0 variable features) #>  2 layers present: counts, data #>  2 dimensional reductions calculated: pca, tsne"},{"path":"/articles/soma-objects.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"SOMA objects overview","text":"Extract bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return file path extracted dataset.","code":"uri <- extract_dataset(\"soma-exp-pbmc-small\") uri #> [1] \"/tmp/Rtmpt9qOzp/soma-exp-pbmc-small\""},{"path":"/articles/soma-objects.html","id":"somaexperiment","dir":"Articles","previous_headings":"","what":"SOMAExperiment","title":"SOMA objects overview","text":"SOMAExperiment class represents top-level container experiments include one measurements across set observations (e.g., cells biospecimens). always contains least two objects: obs: SOMADataFrame containing primary annotations observations. ms: SOMACollection individual measurements (.e., modalities). Open SOMAExperiment using file path inspect object: Note opening SOMAExperiment (SOMA object) returns pointer object disk. data actually read memory ’s requested. important full experiment may large fit memory. pre-defined fields within experiment can accessed using $ operator. example, access ms field: returns SOMACollection measurements. ’ll take closer look later. access obs field containing observation annotations:","code":"experiment <- SOMAExperimentOpen(uri) experiment #> <SOMAExperiment> #>   uri: /tmp/Rtmpt9qOzp/soma-exp-pbmc-small experiment$ms #> <SOMACollection> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/ms experiment$obs #> <SOMADataFrame> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/obs  #>   dimensions: soma_joinid  #>   attributes: orig.ident, nCount_RNA, nFeature_RNA, RNA_snn_res.0.8, letter.idents, groups,..."},{"path":"/articles/soma-objects.html","id":"somadataframe","dir":"Articles","previous_headings":"","what":"SOMADataFrame","title":"SOMA objects overview","text":"obs field contains SOMADataFrame, multi-column table user-defined schema. schema expressed Arrow Schema, defines column names value types. example, let’s inspect schema obs: Note soma_joinid field exists every SOMADataFrame acts join key objects dataset. , SOMA object accessed, pointer returned data read memory. load data memory, call read()$concat(), returns Arrow Table easily converted data frame appending $to_data_frame(). amount data can read determined soma.init_buffer_bytes configuration parameter, , default, set 16MB column. requested data larger value error thrown. system memory, can increase parameter larger value read data . Alternatively, can use iterated reader, retrieves data chunks smaller soma.init_buffer_bytes parameter. result list Arrow Tables. can also select subset rows SOMADataFrame using coords argument. retrieve required subset disk memory. example, select first 10 rows: NOTE: coords argument 0-based. TileDB columnar format, can also select subset columns: Finally, can use value_filter retrieve subset rows match certain condition. course, can combine arguments together get data need.","code":"experiment$obs$schema() #> Schema #> soma_joinid: int64 not null #> orig.ident: dictionary<values=string, indices=int8> #> nCount_RNA: double #> nFeature_RNA: int32 #> RNA_snn_res.0.8: dictionary<values=string, indices=int8> #> letter.idents: dictionary<values=string, indices=int8> #> groups: large_string #> RNA_snn_res.1: dictionary<values=string, indices=int8> #> obs_id: large_string experiment$obs$read()$concat() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> iterator <- experiment$obs$read() iterator$read_next() #> Table #> 80 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> experiment$obs$read(coords = 0:9)$concat() #> Table #> 10 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string> experiment$obs$read(0:9, column_names = c(\"obs_id\", \"nCount_RNA\"))$concat() #> Table #> 10 rows x 2 columns #> $obs_id <large_string> #> $nCount_RNA <double> experiment$obs$read(value_filter = \"nCount_RNA > 100\")$concat() #> Table #> 62 rows x 9 columns #> $soma_joinid <int64 not null> #> $orig.ident <dictionary<values=string, indices=int8>> #> $nCount_RNA <double> #> $nFeature_RNA <int32> #> $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> #> $letter.idents <dictionary<values=string, indices=int8>> #> $groups <large_string> #> $RNA_snn_res.1 <dictionary<values=string, indices=int8>> #> $obs_id <large_string>"},{"path":"/articles/soma-objects.html","id":"somacollection","dir":"Articles","previous_headings":"","what":"SOMACollection","title":"SOMA objects overview","text":"SOMACollection persistent container named SOMA objects, stored mapping string keys SOMA object values. analogous named list R. ms member SOMAExperiment implemented SOMACollection. Let’s take look: case, one member: RNA, SOMAMeasurement. specific measurement can accessed name get() method:","code":"experiment$ms #> <SOMACollection> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/ms experiment$ms$get(\"RNA\") #> <SOMAMeasurement> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/ms/RNA"},{"path":"/articles/soma-objects.html","id":"somameasurement","dir":"Articles","previous_headings":"","what":"SOMAMeasurement","title":"SOMA objects overview","text":"SOMAMeasurement unimodal container particular data type (case, RNA). contains following pre-defined fields: var: SOMADataFrame containing primary annotatinos variables (.e., features genes). X: SOMACollection 2D matrices containing feature measurements across observations. matrix within X referred layer. obsm/varm: SOMACollection 2D matrices containing derived results observations/features. Typically used store dimensionality reduction results. obsp/varp: SOMACollection 2D pairwise matrices containing derived results observations/features. Typically used store graphs pairwise relationships.","code":""},{"path":"/articles/soma-objects.html","id":"somasparsendarray","dir":"Articles","previous_headings":"","what":"SOMASparseNDArray","title":"SOMA objects overview","text":"matrix-like data structures contained within SOMAMeasurement’s pre-defined fields represented SOMASparseNDArray objects. SOMASparseNDArray sparse, N-dimensional array, offset (zero-based) integer indexing dimension, user-defined schema, includes: element type, expressed Arrow type, indicating type data contained within array, shape array, .e., number dimensions length dimension. disk, sparse array encodes non-zero records. Elements explicitly stored assumed zeros. Let’s take look X data matrices within RNA measurement: collection contains 3 layers corresponding raw, normalized, scaled slots original Seurat object. X layers can accessed using get(): returns SOMASparseNDArray. , can inspect array’s schema: see two dimensions (soma_dim_0 soma_dim_1) soma_data attribute type double. Let’s look shape: can get number non-zero elements calling nnz(): Let’s load data sparse matrix memory: Note: reading full matrix memory subsetting first 5 rows 10 columns truncate output. uses zero-based underlying representation access accesses one-based view sparse matrix functionality package Matrix imposes . Similarly SOMADataFrames, read() method can define coordinates slice obtain subset matrix disk:","code":"X <- experiment$ms$get(\"RNA\")$X X #> <SOMACollection> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/ms/RNA/X X_data <- X$get(\"data\") X_data #> <SOMASparseNDArray> #>   uri: file:///tmp/Rtmpt9qOzp/soma-exp-pbmc-small/ms/RNA/X/data  #>   dimensions: soma_dim_0, soma_dim_1  #>   attributes: soma_data X_data$schema() #> Schema #> soma_dim_0: int64 not null #> soma_dim_1: int64 not null #> soma_data: double not null X_data$shape() #> integer64 #> [1] 80  230 X_data$nnz() #> [1] 4456 X_data$read()$sparse_matrix()$concat()[1:5, 1:10] #> 5 x 10 sparse Matrix of class \"dgTMatrix\" #>                                                      #> [1,] . 4.968821 . .        . 4.968821 . . 6.062788 . #> [2,] . .        . 4.776153 . .        . . 6.714813 . #> [3,] . .        . .        . .        . . 7.143118 . #> [4,] . .        . .        . .        . . 6.932079 . #> [5,] . .        . 4.074201 . .        . . 5.161411 . X_data$read(coords = list(soma_dim_0 = 0:4, soma_dim_1 = 0:9))$sparse_matrix()$concat() #> 80 x 230 sparse Matrix of class \"dgTMatrix\" #>                                                                                 #>  [1,] . 4.968821 . .        . 4.968821 . . 6.062788 . . . . . . . . . . . . . . #>  [2,] . .        . 4.776153 . .        . . 6.714813 . . . . . . . . . . . . . . #>  [3,] . .        . .        . .        . . 7.143118 . . . . . . . . . . . . . . #>  [4,] . .        . .        . .        . . 6.932079 . . . . . . . . . . . . . . #>  [5,] . .        . 4.074201 . .        . . 5.161411 . . . . . . . . . . . . . . #>  [6,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [7,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [8,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>  [9,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [10,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [11,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [12,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [13,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [14,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [15,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [16,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [17,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [18,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [19,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [20,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [21,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [22,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [23,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [24,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [25,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [26,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [27,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [28,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [29,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [30,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [31,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [32,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [33,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [34,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [35,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [36,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [37,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [38,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [39,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [40,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [41,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [42,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [43,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [44,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [45,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [46,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [47,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [48,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [49,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [50,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [51,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [52,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [53,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [54,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [55,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [56,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [57,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [58,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [59,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [60,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [61,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [62,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [63,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [64,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [65,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [66,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [67,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [68,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [69,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [70,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [71,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [72,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [73,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [74,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [75,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [76,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [77,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [78,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [79,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #> [80,] . .        . .        . .        . . .        . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                                                 #>  [1,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . #>                                                   #>  [1,] . . . . . . . . . . . . . . . . . . . . . . #>  [2,] . . . . . . . . . . . . . . . . . . . . . . #>  [3,] . . . . . . . . . . . . . . . . . . . . . . #>  [4,] . . . . . . . . . . . . . . . . . . . . . . #>  [5,] . . . . . . . . . . . . . . . . . . . . . . #>  [6,] . . . . . . . . . . . . . . . . . . . . . . #>  [7,] . . . . . . . . . . . . . . . . . . . . . . #>  [8,] . . . . . . . . . . . . . . . . . . . . . . #>  [9,] . . . . . . . . . . . . . . . . . . . . . . #> [10,] . . . . . . . . . . . . . . . . . . . . . . #> [11,] . . . . . . . . . . . . . . . . . . . . . . #> [12,] . . . . . . . . . . . . . . . . . . . . . . #> [13,] . . . . . . . . . . . . . . . . . . . . . . #> [14,] . . . . . . . . . . . . . . . . . . . . . . #> [15,] . . . . . . . . . . . . . . . . . . . . . . #> [16,] . . . . . . . . . . . . . . . . . . . . . . #> [17,] . . . . . . . . . . . . . . . . . . . . . . #> [18,] . . . . . . . . . . . . . . . . . . . . . . #> [19,] . . . . . . . . . . . . . . . . . . . . . . #> [20,] . . . . . . . . . . . . . . . . . . . . . . #> [21,] . . . . . . . . . . . . . . . . . . . . . . #> [22,] . . . . . . . . . . . . . . . . . . . . . . #> [23,] . . . . . . . . . . . . . . . . . . . . . . #> [24,] . . . . . . . . . . . . . . . . . . . . . . #> [25,] . . . . . . . . . . . . . . . . . . . . . . #> [26,] . . . . . . . . . . . . . . . . . . . . . . #> [27,] . . . . . . . . . . . . . . . . . . . . . . #> [28,] . . . . . . . . . . . . . . . . . . . . . . #> [29,] . . . . . . . . . . . . . . . . . . . . . . #> [30,] . . . . . . . . . . . . . . . . . . . . . . #> [31,] . . . . . . . . . . . . . . . . . . . . . . #> [32,] . . . . . . . . . . . . . . . . . . . . . . #> [33,] . . . . . . . . . . . . . . . . . . . . . . #> [34,] . . . . . . . . . . . . . . . . . . . . . . #> [35,] . . . . . . . . . . . . . . . . . . . . . . #> [36,] . . . . . . . . . . . . . . . . . . . . . . #> [37,] . . . . . . . . . . . . . . . . . . . . . . #> [38,] . . . . . . . . . . . . . . . . . . . . . . #> [39,] . . . . . . . . . . . . . . . . . . . . . . #> [40,] . . . . . . . . . . . . . . . . . . . . . . #> [41,] . . . . . . . . . . . . . . . . . . . . . . #> [42,] . . . . . . . . . . . . . . . . . . . . . . #> [43,] . . . . . . . . . . . . . . . . . . . . . . #> [44,] . . . . . . . . . . . . . . . . . . . . . . #> [45,] . . . . . . . . . . . . . . . . . . . . . . #> [46,] . . . . . . . . . . . . . . . . . . . . . . #> [47,] . . . . . . . . . . . . . . . . . . . . . . #> [48,] . . . . . . . . . . . . . . . . . . . . . . #> [49,] . . . . . . . . . . . . . . . . . . . . . . #> [50,] . . . . . . . . . . . . . . . . . . . . . . #> [51,] . . . . . . . . . . . . . . . . . . . . . . #> [52,] . . . . . . . . . . . . . . . . . . . . . . #> [53,] . . . . . . . . . . . . . . . . . . . . . . #> [54,] . . . . . . . . . . . . . . . . . . . . . . #> [55,] . . . . . . . . . . . . . . . . . . . . . . #> [56,] . . . . . . . . . . . . . . . . . . . . . . #> [57,] . . . . . . . . . . . . . . . . . . . . . . #> [58,] . . . . . . . . . . . . . . . . . . . . . . #> [59,] . . . . . . . . . . . . . . . . . . . . . . #> [60,] . . . . . . . . . . . . . . . . . . . . . . #> [61,] . . . . . . . . . . . . . . . . . . . . . . #> [62,] . . . . . . . . . . . . . . . . . . . . . . #> [63,] . . . . . . . . . . . . . . . . . . . . . . #> [64,] . . . . . . . . . . . . . . . . . . . . . . #> [65,] . . . . . . . . . . . . . . . . . . . . . . #> [66,] . . . . . . . . . . . . . . . . . . . . . . #> [67,] . . . . . . . . . . . . . . . . . . . . . . #> [68,] . . . . . . . . . . . . . . . . . . . . . . #> [69,] . . . . . . . . . . . . . . . . . . . . . . #> [70,] . . . . . . . . . . . . . . . . . . . . . . #> [71,] . . . . . . . . . . . . . . . . . . . . . . #> [72,] . . . . . . . . . . . . . . . . . . . . . . #> [73,] . . . . . . . . . . . . . . . . . . . . . . #> [74,] . . . . . . . . . . . . . . . . . . . . . . #> [75,] . . . . . . . . . . . . . . . . . . . . . . #> [76,] . . . . . . . . . . . . . . . . . . . . . . #> [77,] . . . . . . . . . . . . . . . . . . . . . . #> [78,] . . . . . . . . . . . . . . . . . . . . . . #> [79,] . . . . . . . . . . . . . . . . . . . . . . #> [80,] . . . . . . . . . . . . . . . . . . . . . ."},{"path":"/articles/soma-reading.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Reading from SOMA objects","text":"tutorial ’ll learn read data various SOMA objects. assume familiarity SOMA objects, recommended go vignette(\"soma-objects\") first. core feature SOMA ability read subsets data disk memory slices. SOMA uses Apache Arrow intermediate -memory storage. , slices can converted native R objects, like data frames matrices.","code":"library(tiledbsoma)"},{"path":"/articles/soma-reading.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Reading from SOMA objects","text":"Load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object. small dataset easily fits memory, ’ll focus operations can easily scale larger datasets well.","code":"experiment <- load_dataset(\"soma-exp-pbmc-small\")"},{"path":"/articles/soma-reading.html","id":"soma-dataframe","dir":"Articles","previous_headings":"","what":"SOMA DataFrame","title":"Reading from SOMA objects","text":"’ll start obs dataframe. Simply calling read()$concat() method load data memory Arrow Table. easily converted data.frame using Arrow’s methods:","code":"obs <- experiment$obs obs$read()$concat() ## Table ## 80 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read()$concat()$to_data_frame() ## # A tibble: 80 × 9 ##    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents ##          <int> <fct>            <dbl>        <int> <fct>           <fct>         ##  1           0 SeuratProj…         70           47 0               A             ##  2           1 SeuratProj…         85           52 0               A             ##  3           2 SeuratProj…         87           50 1               B             ##  4           3 SeuratProj…        127           56 0               A             ##  5           4 SeuratProj…        173           53 0               A             ##  6           5 SeuratProj…         70           48 0               A             ##  7           6 SeuratProj…         64           36 0               A             ##  8           7 SeuratProj…         72           45 0               A             ##  9           8 SeuratProj…         52           36 0               A             ## 10           9 SeuratProj…        100           41 0               A             ## # ℹ 70 more rows ## # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr>"},{"path":"/articles/soma-reading.html","id":"slicing","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Slicing","title":"Reading from SOMA objects","text":"Slices data can read passing coordinates read() method. , let’s take look schema obs: SOMA object, can slice across indexed column (“dimension” TileDB parlance). can use dimnames() retrieve names SOMA object’s indexed dimensions: case, single dimension called soma_joinid. schema can see contains integers. Let’s look ways slice dataframe. Select single row: Select multiple, non-contiguous rows: Select multiple, contiguous rows:","code":"obs$schema() ## Schema ## soma_joinid: int64 not null ## orig.ident: dictionary<values=string, indices=int8> ## nCount_RNA: double ## nFeature_RNA: int32 ## RNA_snn_res.0.8: dictionary<values=string, indices=int8> ## letter.idents: dictionary<values=string, indices=int8> ## groups: large_string ## RNA_snn_res.1: dictionary<values=string, indices=int8> ## obs_id: large_string obs$dimnames() ## [1] \"soma_joinid\" obs$read(coords = 0)$concat() ## Table ## 1 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read(coords = c(0, 2))$concat() ## Table ## 2 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string> obs$read(coords = 0:4)$concat() ## Table ## 5 rows x 9 columns ## $soma_joinid <int64 not null> ## $orig.ident <dictionary<values=string, indices=int8>> ## $nCount_RNA <double> ## $nFeature_RNA <int32> ## $RNA_snn_res.0.8 <dictionary<values=string, indices=int8>> ## $letter.idents <dictionary<values=string, indices=int8>> ## $groups <large_string> ## $RNA_snn_res.1 <dictionary<values=string, indices=int8>> ## $obs_id <large_string>"},{"path":"/articles/soma-reading.html","id":"selecting-columns","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Selecting columns","title":"Reading from SOMA objects","text":"TileDB columnar format, possible select subset columns read using column_names argument:","code":"obs$read(coords = 0:4, column_names = c(\"obs_id\", \"groups\"))$concat() ## Table ## 5 rows x 2 columns ## $obs_id <large_string> ## $groups <large_string>"},{"path":"/articles/soma-reading.html","id":"filtering","dir":"Articles","previous_headings":"SOMA DataFrame","what":"Filtering","title":"Reading from SOMA objects","text":"addition slicing coordinates can also apply filters data using value_filter argument. expressions pushed TileDB engine efficiently applied data disk. examples. Identify cells \"g1\" group: Identify cells \"g1\" \"g2\" group: Altenratively, can use %% operator: Identify cells \"g1\" group 60 features:","code":"obs$read(value_filter = \"groups == 'g1'\")$concat()$to_data_frame() ## # A tibble: 44 × 9 ##    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents ##          <int> <fct>            <dbl>        <int> <fct>           <fct>         ##  1           1 SeuratProj…         85           52 0               A             ##  2           5 SeuratProj…         70           48 0               A             ##  3           6 SeuratProj…         64           36 0               A             ##  4           7 SeuratProj…         72           45 0               A             ##  5           8 SeuratProj…         52           36 0               A             ##  6           9 SeuratProj…        100           41 0               A             ##  7          11 SeuratProj…        191           61 0               A             ##  8          15 SeuratProj…        168           44 0               A             ##  9          17 SeuratProj…        135           45 0               A             ## 10          18 SeuratProj…         79           43 0               A             ## # ℹ 34 more rows ## # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr> obs$read(value_filter = \"groups == 'g1' | groups == 'g2'\")$concat()$to_data_frame() ## # A tibble: 80 × 9 ##    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents ##          <int> <fct>            <dbl>        <int> <fct>           <fct>         ##  1           0 SeuratProj…         70           47 0               A             ##  2           1 SeuratProj…         85           52 0               A             ##  3           2 SeuratProj…         87           50 1               B             ##  4           3 SeuratProj…        127           56 0               A             ##  5           4 SeuratProj…        173           53 0               A             ##  6           5 SeuratProj…         70           48 0               A             ##  7           6 SeuratProj…         64           36 0               A             ##  8           7 SeuratProj…         72           45 0               A             ##  9           8 SeuratProj…         52           36 0               A             ## 10           9 SeuratProj…        100           41 0               A             ## # ℹ 70 more rows ## # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr> obs$read(value_filter = \"groups %in% c('g1', 'g2')\")$concat()$to_data_frame() ## # A tibble: 80 × 9 ##    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents ##          <int> <fct>            <dbl>        <int> <fct>           <fct>         ##  1           0 SeuratProj…         70           47 0               A             ##  2           1 SeuratProj…         85           52 0               A             ##  3           2 SeuratProj…         87           50 1               B             ##  4           3 SeuratProj…        127           56 0               A             ##  5           4 SeuratProj…        173           53 0               A             ##  6           5 SeuratProj…         70           48 0               A             ##  7           6 SeuratProj…         64           36 0               A             ##  8           7 SeuratProj…         72           45 0               A             ##  9           8 SeuratProj…         52           36 0               A             ## 10           9 SeuratProj…        100           41 0               A             ## # ℹ 70 more rows ## # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr> obs$read(value_filter = \"groups == 'g1' & nFeature_RNA > 60\")$concat()$to_data_frame() ## # A tibble: 20 × 9 ##    soma_joinid orig.ident  nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents ##          <int> <fct>            <dbl>        <int> <fct>           <fct>         ##  1          11 SeuratProj…        191           61 0               A             ##  2          20 SeuratProj…        298           65 1               B             ##  3          21 SeuratProj…        406           74 1               B             ##  4          24 SeuratProj…        463           77 1               B             ##  5          29 SeuratProj…        353           80 1               B             ##  6          50 SeuratProj…        371           75 1               B             ##  7          54 SeuratProj…        443           77 1               B             ##  8          55 SeuratProj…        417           75 0               A             ##  9          56 SeuratProj…        502           81 1               B             ## 10          57 SeuratProj…        324           76 1               B             ## 11          59 SeuratProj…        443           81 0               A             ## 12          60 SeuratProj…        787           88 0               A             ## 13          61 SeuratProj…        612           69 1               B             ## 14          62 SeuratProj…        286           68 0               A             ## 15          63 SeuratProj…        462           86 1               B             ## 16          64 SeuratProj…        872           96 1               B             ## 17          67 SeuratProj…        328           72 1               B             ## 18          68 SeuratProj…        389           73 1               B             ## 19          69 SeuratProj…        754           83 0               A             ## 20          79 SeuratProj…        233           76 1               B             ## # ℹ 3 more variables: groups <chr>, RNA_snn_res.1 <fct>, obs_id <chr>"},{"path":"/articles/soma-reading.html","id":"soma-sparsendarray","dir":"Articles","previous_headings":"","what":"SOMA SparseNDArray","title":"Reading from SOMA objects","text":"SOMASparseNDArray, let’s consider X layer containing \"counts\" data: Similar SOMADataFrame, can load data memory Arrow Table: [Matrix::sparseMatrix()]:","code":"counts <- experiment$ms$get(\"RNA\")$X$get(\"counts\") counts ## <SOMASparseNDArray> ##   uri: file:///tmp/RtmpD8qK7F/soma-exp-pbmc-small/ms/RNA/X/counts  ##   dimensions: soma_dim_0, soma_dim_1  ##   attributes: soma_data counts$read()$tables()$concat() ## Table ## 4456 rows x 3 columns ## $soma_dim_0 <int64 not null> ## $soma_dim_1 <int64 not null> ## $soma_data <double not null> counts$read()$sparse_matrix()$concat() ## 80 x 230 sparse Matrix of class \"dgTMatrix\" ##                                                                                 ##  [1,] . 1  .   . .  1 . .  3 . . 1 . . . . . . . . . .  1 . . . .  . . .  4 . . ##  [2,] . .  .   1 .  . . .  7 . . . . . . . . . . . . 1  1 . 2 . 1  . . .  4 3 1 ##  [3,] . .  .   . .  . . . 11 . . 1 . . . . . . . . . .  . 1 . . .  . . .  4 2 . ##  [4,] . .  .   . .  . . . 13 . . 1 . . . . . . . . . .  6 . . . .  . . .  5 2 1 ##  [5,] . .  .   1 .  . . .  3 . . . . . . . . . . . . .  . . . . .  . . .  4 3 . ##  [6,] . .  .   1 .  . . .  4 . . . . 1 . . . . . . . .  2 1 . . .  . . .  4 1 1 ##  [7,] . .  .   . .  . . .  6 . . . . . . . . . . . . .  4 . . . .  . . .  3 1 1 ##  [8,] . .  .   1 .  . . .  4 . . . . . . . . . . . . .  1 1 . . .  . . .  2 3 . ##  [9,] . .  .   . .  . . .  2 . . . . . . . . . . . . .  . . . . .  . . .  2 2 . ## [10,] . 1  .   . .  . . . 21 . . 1 . . . . . . . . . .  4 . 1 . .  . . .  2 1 1 ## [11,] 2 2  .  14 3  1 3 .  2 . . . 1 . 3 . . . . 1 1 1  2 2 . 2 .  1 1 1  . . . ## [12,] 2 4  5  28 .  6 1 4  9 2 1 3 . 1 . 3 1 1 . . . .  . . 1 2 4  . . .  . . . ## [13,] 4 3  2  18 2  2 . 1  2 . 1 2 1 . 1 . . . . . 1 .  4 . 1 1 . 15 . .  . . . ## [14,] 4 3  2   7 4  2 . 1  4 1 . . . 1 . 1 2 . . . 1 .  1 . . . .  . 1 .  . . . ## [15,] 2 2  5  15 .  2 2 2  4 1 . 1 . . 1 . . 1 . . . 2  . 2 2 . 1  . . .  . . . ## [16,] 3 3  8  28 .  8 . 2  . 1 . 2 . 3 1 . 1 . 1 1 . .  . . 3 . 1  . . 1  . 2 . ## [17,] 3 1  1   7 3  2 2 1  3 . 1 2 1 . . . . . 2 1 . .  4 . . 1 .  . . 1  . . . ## [18,] 4 2  5  26 3  2 1 2  6 . 1 . 2 . . 1 . 1 1 1 . 2  2 . 1 . 1 23 1 .  . . . ## [19,] 2 2  5  10 3  1 1 .  5 1 . 1 2 1 . . 1 . . . 1 1  6 1 . 1 .  . . .  . . . ## [20,] 3 5 12  16 2  2 2 1  7 . 1 . . . . 2 . 3 1 . . .  2 1 1 1 .  . . 1  . . . ## [21,] . .  .   7 .  . 1 .  1 . . . . . . . . . . . . .  3 . . . .  . . .  . . . ## [22,] . .  .  22 .  3 . 1  . . . . . . . . . . . . . .  . . . . .  . . .  . 2 . ## [23,] . .  1   . .  . 1 .  . . . 1 1 . . . . . . . . .  . . . . .  . . .  . . . ## [24,] . .  .  10 .  . . 1  1 . . . . . . . . . . . . .  . 1 . . .  . . .  . . . ## [25,] 1 .  .   6 .  . . .  1 . . . 1 . . . . . . . . .  . . . . .  . . .  1 1 . ## [26,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [27,] . .  .   4 .  1 . .  . . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [28,] . .  1   3 .  . . .  . . . . . . . . . . . . . .  . 1 . . .  . . .  . . . ## [29,] . .  .   7 .  1 . 2  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [30,] . 1  .  13 .  . . .  1 . . . 1 . . . . . . . . .  . . 1 . .  . . .  . . . ## [31,] . 1  .   . .  . . .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [32,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . 1 . . .  . . .  7 . . ## [33,] . 2  .   . .  . . .  . . . . . . . . . . . . . .  . . . 1 .  . . .  . 1 . ## [34,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  . 1 . . .  . . .  . 1 . ## [35,] . .  .   1 .  . . .  . . . 1 . . . . . . . . . .  . . . 1 .  . . .  . . . ## [36,] . .  .   . .  . . .  . . . 1 . 1 . . . . . . . .  1 . . . .  . . .  . . . ## [37,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  1 . . ## [38,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . 1 . .  . . .  . 2 . ## [39,] . .  .   . .  . . .  . . . . . 1 . . . . . . . .  4 . . . .  . . .  1 . . ## [40,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . 1 .  . . .  . . . ## [41,] . .  .   . .  . . .  . . . . . . . . . . . . . .  7 . . . .  . . .  . 1 . ## [42,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  1 . . . .  . . .  2 . . ## [43,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  3 . . . .  . . .  3 . . ## [44,] . .  .   . .  . . .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . . . ## [45,] . .  .   . .  . . .  7 . . 1 . . . . . . . . . .  6 1 1 . .  . . .  3 . . ## [46,] . .  .   1 .  . . .  1 . . . . . . . . . . . . .  1 . . 3 .  . . . 15 . . ## [47,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  1 1 . ## [48,] . .  .   1 .  . . .  1 . . . . 1 . . . . . . . .  1 . . . .  . . .  3 . . ## [49,] . .  .   . .  . . .  5 . . . . . . . . . . . . .  . . . . .  . . .  6 . . ## [50,] . .  .   . .  . . .  3 . . . . . . . . . . . . .  1 . . . .  . . .  4 1 . ## [51,] . 1  .  10 .  . . .  1 . . . . . 1 . . . . . . .  . 1 . . .  . . .  . . . ## [52,] . .  .  10 .  1 . .  2 . . . . . . . . . . . . .  1 . . . .  . . .  . 2 . ## [53,] . 1  .   4 .  1 . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [54,] . 1  .   1 .  . . 1  . . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [55,] . 2  .   6 .  2 . 1  1 . . 1 . . 1 . . . . . . 1  . . . . .  . . .  . . . ## [56,] . 2  .  28 .  . 1 .  1 . . . . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [57,] . .  .  10 .  . . .  1 . . 1 . . . . . . . . . 1  . . . . .  . . .  . 1 . ## [58,] . .  .  13 .  1 . 1  1 . . . 1 . . . . . . . . 1  . 1 . . .  . . .  . . . ## [59,] . 3  .   5 .  1 1 .  2 . . . . . . . . . . . . .  1 . . . .  . . .  . . . ## [60,] . .  .   8 .  . . 1  1 . . . . . . . . . . . . .  2 . 1 . .  . . .  . . . ## [61,] . .  . 108 . 21 . 3  . . . 1 . . 1 . . . . . . 2 12 . . 1 .  . . .  . 1 . ## [62,] . .  .  93 . 21 . 2  1 . . . . . . . . . . . . .  3 . 2 . .  . . .  . 1 . ## [63,] . .  .  41 .  3 . 1  . . . . . . . . . . . . . .  1 . 1 1 .  . . .  . . . ## [64,] . 4  8  42 4  5 . 4  5 . . 3 . . . 1 . . . . 1 .  3 . 1 1 .  . . 2  . . . ## [65,] . 1  . 138 . 11 . 5  . . . 1 . . 1 . . . . . . .  . . . 1 .  . . .  . . . ## [66,] . .  .  77 . 11 . 2  . . . . . . . . . . . . . 1  1 . . . .  . . .  . 1 . ## [67,] . .  .  76 . 10 . 1  . . . . . . 1 . . . . . . .  2 . . . .  . . .  . . . ## [68,] 1 .  .  15 .  1 . 1  . . . . . . . . . . . . . .  . . . . .  . . .  . 1 . ## [69,] . .  1  19 .  2 . 1  1 . . . . . . . . . . . . .  . . . 1 1  . . .  . . . ## [70,] . .  . 104 . 11 . 5  4 . . 1 . . . . . . . . . .  2 . . . .  . . .  1 1 . ## [71,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [72,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [73,] . .  .   . .  . . .  1 . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [74,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [75,] . .  .   2 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [76,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . 1 . 1  . . .  . . . ## [77,] . .  .   1 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [78,] . .  .   . .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [79,] . .  .   2 .  . . .  . . . . . . . . . . . . . .  . . . . .  . . .  . . . ## [80,] . .  .   7 .  1 . .  . . . . 1 . . . . . . . . .  . . . 1 .  . . .  . . . ##                                                                                ##  [1,] 1  5 . 1  . 1 . . . 3 3 . 1 3 . 1 1 1 1  2 . 1 2 1 2 1  .  . .  . 1 .  . ##  [2,] .  2 . 1  1 1 5 2 2 2 3 . . 1 2 . . 2 .  . . 3 2 1 . .  .  . .  . . .  1 ##  [3,] 2  1 1 .  1 . . 1 . 1 . . 1 2 1 . 2 . .  1 1 2 2 1 . .  .  . .  . 9 .  1 ##  [4,] 2  2 . .  1 1 . 1 2 6 4 2 . 5 4 . . . .  1 2 3 3 1 2 1  .  . .  . 8 .  1 ##  [5,] .  2 . . 36 . 2 . 1 5 2 . . 2 3 . 2 1 . 54 . 2 2 . . .  .  . .  1 1 .  3 ##  [6,] 1  . 2 .  . . . 2 2 3 1 1 1 4 1 1 . . .  2 1 . 1 . . 1  .  . .  . . 1  . ##  [7,] .  1 3 1  . . 1 1 . 4 1 . . 3 3 1 . . .  1 2 . . . 2 1  .  . .  . 3 .  . ##  [8,] 1 12 2 1  . 1 1 . 2 . 2 1 1 2 4 1 . . 1  1 2 . . 1 1 .  .  . .  . 3 .  . ##  [9,] 2  . 3 1  . . . 1 3 1 1 . 1 3 2 . 1 . .  1 . 1 3 2 1 .  .  . .  . . .  . ## [10,] 1  9 . 1  . 1 1 . 1 6 1 . 1 . . . . . 1  3 1 . . . 1 .  .  . .  . 3 .  . ## [11,] .  . . .  . . . . 1 . . . . . . . . . .  1 . . . . . .  .  . .  . . .  . ## [12,] .  . . .  . . . . 1 1 1 . . 2 . . . . .  2 1 . 1 . . .  .  . .  . . .  . ## [13,] .  . 1 .  . . . . . . 1 . . 1 . . . . .  . . . . . . .  .  . .  . . 1  . ## [14,] .  . . .  . . . . . . . . . 1 . . . . .  1 . . . . . .  .  . .  2 . .  . ## [15,] .  1 . .  . . . . . . . . 1 5 . . . . .  . . 1 . . . .  1  . .  . . .  . ## [16,] .  . 1 .  . . . . . . . . 1 . . . . . .  . . 1 . . . .  1  . .  . . .  . ## [17,] .  . . .  . . . . . 2 1 . . . . . . . .  . . . . 1 . .  .  . .  . . .  2 ## [18,] .  . . .  . . . . . . 3 . . 1 1 . . . .  . . . . . . .  1  . .  1 . 1  . ## [19,] .  1 . .  . . . . . 1 1 . 1 . 1 . . . .  . . 1 . . . .  .  1 1  . . .  . ## [20,] .  . 1 .  . . 1 . . . 1 . . . 1 . . . .  . . 1 . . . .  .  . .  . . .  . ## [21,] .  1 . .  . . . . . 1 . . . . 1 1 . . .  . . . . . . .  .  . .  2 . .  . ## [22,] .  . . .  . . . . . 2 . . . . . . . . .  2 . . . . . .  .  . .  1 . .  . ## [23,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [24,] .  . . .  . . . . . 2 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [25,] .  . . .  . . . 1 . 1 3 . . 1 . . . . .  1 . 1 . 1 . .  1  . .  . . 1  . ## [26,] .  1 . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [27,] .  . . 1  . . . . . 1 . . . 1 . . . . .  . . . . 1 . .  .  . .  1 . .  . ## [28,] .  . . .  . . . . . . . . . 1 . . . . .  . . 1 . 1 . .  .  . .  . . .  . ## [29,] .  . . .  1 . . . 1 . . . . . . . . . .  . . . . . 1 .  1  . .  . . .  . ## [30,] .  1 1 .  . . . . . . 1 . . 1 . . 1 . .  3 . . . . . .  .  . .  1 . .  . ## [31,] .  2 . .  1 . . . . . . . 1 2 . . . . .  1 . . 3 . . .  1  1 . 35 . .  . ## [32,] 2  . . .  . . . . . . . . . 2 1 . . . .  . . . . . . .  .  3 . 14 2 .  . ## [33,] .  . . .  . . . . . . . . . . . . . . .  1 . . 1 . . .  .  2 . 12 . .  . ## [34,] .  . . .  . . . . . 2 . . . 2 1 . . . . 15 1 1 1 . 1 .  .  3 . 30 5 .  . ## [35,] .  . . .  1 . . . . 2 . . . . . . . . .  . . . 1 . . .  .  2 . 20 4 .  . ## [36,] .  . . .  . . . 1 . . . . . . . . 1 . .  . . . 3 . . .  .  4 . 27 . .  2 ## [37,] .  . . .  . . . . . 1 . . . . . . 1 . .  . . 1 4 . 2 .  1  8 . 28 . .  . ## [38,] .  . . 1  . . . . . . . . . 1 . . . . .  . 1 . 2 . . .  1  6 . 10 . .  . ## [39,] .  . . .  . . . . . . . . . 3 1 . . . .  . . . 1 . . .  1  1 . 25 . .  1 ## [40,] 2  . . .  . . . . . . . . 1 1 . . . . .  1 1 . 1 . . .  . 11 . 27 7 .  1 ## [41,] .  . . .  . . . . . 2 2 . . 1 1 1 . . .  2 . . 2 . . .  .  1 1 31 8 .  . ## [42,] .  1 . .  . . . . . 1 2 . . . . . . . .  1 . . 1 . 1 .  1  4 . 22 5 1  1 ## [43,] .  3 . .  . . . . . 4 . . . . 2 . . . .  3 1 1 4 . . .  1  1 2  7 5 .  1 ## [44,] .  1 . .  . . . . . . 1 . . 1 . . . . .  1 . . . . . .  1  2 1  2 . .  2 ## [45,] .  1 . .  . . . 1 . 4 . 1 . 2 1 . . . .  . . . 2 . . .  .  1 2  4 7 . 47 ## [46,] .  1 . .  . . . . 1 4 . . . . 2 . . . .  1 . . . 2 . .  .  2 . 14 1 .  . ## [47,] 2  . . .  . . . . 1 . . . . 2 . . . . .  1 . . . . . .  1  2 . 16 6 1  1 ## [48,] .  2 1 .  . . . 1 . . 1 . . 3 1 . . . .  1 . . . . . .  .  1 2  4 7 1  1 ## [49,] .  . . .  2 . . . . . . . . . 5 . . . .  . . . . . . . 39  5 . 29 6 1  1 ## [50,] .  2 1 .  . . . . . 2 . . . 1 2 . . . .  1 3 . 1 . 1 1  .  1 3  8 1 1  1 ## [51,] .  . . 1  . . . 1 . . 1 . . . . 1 . . .  . . 1 . . 1 .  .  . .  5 . .  . ## [52,] .  . . .  . 1 . . . . 1 . . 2 . . 1 . .  1 . . . 1 1 .  .  . .  3 . .  2 ## [53,] .  . . 1  . . . . . 1 . . . . . . . . .  . . . . . 1 .  .  . .  . . .  . ## [54,] .  . . .  . . . . . . 1 . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [55,] .  . 1 .  . . . . . . 1 . . 2 . . . . .  . . . . . . .  .  . .  . . .  . ## [56,] .  . . .  . . . . 2 2 . . 2 . . . . . .  1 . 1 . . . .  .  . .  . . .  . ## [57,] .  . . .  1 . . . 3 . . . . 1 . . 1 . .  . . . . . 1 .  1  . .  5 1 1  2 ## [58,] .  . . .  . . . . . 1 . . . . . 1 . . .  3 . . . . . .  .  . .  . 1 .  . ## [59,] .  . . .  1 . . . . . . . . 2 . . . . .  1 . . . . . .  .  . .  . . .  1 ## [60,] .  . . .  . . . . 1 1 1 . 1 1 . . . . .  . . 1 . . 1 .  2  . .  . . 1  . ## [61,] .  1 . .  1 . . 1 . 2 . 1 . 4 1 . . . .  . . . . . . .  3  . .  . . .  . ## [62,] .  1 . .  . . . . . . . . . . . 1 . . .  2 . 1 . 1 2 .  .  . .  1 . .  . ## [63,] .  1 . .  . . . . 1 . . . . . . . . . .  1 . 1 . . . .  .  1 .  . . .  . ## [64,] .  . . .  . . . . 1 5 2 . . 4 . . . . .  1 . . . . 2 .  2  . .  . . 1  . ## [65,] 2  1 . .  1 . . . 1 2 3 . . 2 . . . . .  3 1 4 . . . .  .  1 .  1 1 .  . ## [66,] 1  . . .  . . . . 1 2 1 . . 4 . . 1 . .  . . . . . 1 .  .  . .  3 . 1  1 ## [67,] .  . . .  1 . . . . . . . . 1 . . . . .  1 . 2 . . . .  1  . .  . . .  . ## [68,] .  1 . .  . . . . 1 1 . . . . . . . . .  5 . . . . . .  .  . .  1 . .  . ## [69,] .  . . .  . . . . . 2 . . . . . . . . . 13 . . . . 1 .  .  1 .  . . .  . ## [70,] .  . . .  2 . . . . . . . . 1 1 . . . .  2 . . 1 . . .  .  . 1  1 . .  . ## [71,] .  . . .  . . . . . 1 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [72,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [73,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  1 ## [74,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [75,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [76,] .  1 . .  . . . . . 1 . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [77,] .  . . .  . . . . . . . . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [78,] .  . . .  . . . . . . 1 . . . . . . . .  . . . . . . .  .  . .  . . .  . ## [79,] .  . . .  . . . . . . . . . . 1 . . . .  . . . . . . .  .  . .  . . .  . ## [80,] .  . . .  . . . . 1 1 1 . . . . . . . .  . . . . . . 1  .  . .  . 1 .  . ##                                                                                ##  [1,] . .  . . . .  . . . . . 1 . . . 1  . . . . . .  .  .   1 .  1  . .  .  . ##  [2,] . 3  . . 2 .  2 . . 1 . 2 . . . .  . . . . . .  .  1   1 .  1  . .  .  . ##  [3,] . 2  . . 2 .  . . . . . 2 . . . .  . . . . 1 .  .  1   1 .  .  . .  1  . ##  [4,] . .  2 . 4 .  . . 1 . . . 1 . . .  . . . 1 . 1  .  .   . .  .  2 .  1  . ##  [5,] 1 1  . . 1 .  . 1 . . . . . . . .  . . . . 1 2  .  .   . .  .  . .  .  1 ##  [6,] . 1  . . 1 .  . . . . . 1 1 . . .  . . . . . .  .  .   1 .  .  . .  .  . ##  [7,] . 2  1 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  1 .  .  . ##  [8,] . .  . 1 . .  1 . . . . . 1 . . .  1 . . . . .  .  1   . .  .  . .  .  . ##  [9,] . .  . . . .  . . . . . 2 2 . 1 .  . . . . 1 .  .  .   1 .  1  1 .  .  . ## [10,] . 2  . . 6 .  2 . . . . 1 . . . .  . . . . . .  .  .   . .  .  . .  4  . ## [11,] . .  . . . .  . . . . . . . . . .  . 1 . . . 1  .  .   1 .  1  . .  .  . ## [12,] 1 .  . . 1 .  . 2 . . . . 2 . . 1  . . . . 1 1  .  .   4 .  .  . .  1  . ## [13,] . .  . . . .  . . . . . . 1 1 . .  . . . . . .  .  .   . .  .  . .  1  . ## [14,] . .  . . . .  . . . . . . . . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [15,] . .  . . 1 .  . . . . . . 1 . . 1  . . . . . .  .  .   . .  .  . .  1  . ## [16,] . .  . 1 1 .  . . . . 1 . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [17,] . .  . . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [18,] . .  . . 1 .  . . . . . . 1 . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [19,] . .  . . . .  . . . . . . . . . .  . . . . . 1  .  .   1 .  .  . .  1  . ## [20,] . .  . . . .  . 1 . . . 2 1 . . .  . . . . . .  .  .   . .  .  . .  1  . ## [21,] 1 .  . . . .  . . . . . . 1 . . .  . . . . . 2 18 30  50 1 10 14 3  3  4 ## [22,] . .  1 . . .  1 . 1 . . . . 1 . .  . . . . . .  5 12  29 2  6 13 2 13  7 ## [23,] . .  . . . .  1 1 . . . . . . . .  . . . . . . 25 51  25 2  5  3 .  5  1 ## [24,] . .  . . . .  1 . . . . . . . . .  . . . . . .  5 22  49 4  9 10 .  .  6 ## [25,] . .  . . 3 .  1 . . . . . 1 . . .  . . . . . . 25 85  98 1  7 16 1 11  5 ## [26,] . .  . . . .  . . . . . . . . . .  . . . . . .  6  3  11 .  1  4 .  .  1 ## [27,] . .  . . 1 .  . . . . . . . 1 . .  . . . . . . 24 54  59 1  1 13 1  2  6 ## [28,] . .  . . . .  . . . . . . . . . .  . . . . . . 40 55  28 1  2 12 .  3  4 ## [29,] . .  . . 1 .  . . . . 1 1 . . . .  . . . . . . 16 35  34 3  8 19 1  5  5 ## [30,] . .  1 . . .  . . . . . . 1 . . 1  . . . 1 . . 11 17  16 .  7 12 . 10  1 ## [31,] 4 .  . . . .  . . . . . 1 . . . 1  . . . . . .  1  .   . .  .  3 .  .  . ## [32,] 4 1  2 . 2 .  . . . . . 1 . . . 1  . . 1 . . .  .  .   . .  .  . .  1  . ## [33,] 2 .  5 . . .  1 . . 1 . . . 1 . 1  . . 1 . . .  .  .   1 .  .  4 .  .  . ## [34,] 7 2 14 1 . .  1 . . . . 1 . . . .  . . 1 . . 2  .  1   . .  .  3 .  1  2 ## [35,] 2 1  . . 1 .  . . . . . 1 . . 2 .  . . . . . 2  .  1   2 .  .  6 .  .  . ## [36,] 4 1 29 . . .  2 1 . . . . 1 . . .  . . . . . 1  1  .   . .  .  7 .  1  . ## [37,] 3 1  1 . 1 .  . . . . . . 1 . . .  . . . 2 . 1  .  1   . .  .  3 .  .  . ## [38,] 3 2  7 . . .  1 . . . . 1 1 . 3 .  . . . . . 1  .  .   1 .  1  4 .  .  . ## [39,] 2 1  5 . 1 .  1 . . . . . 2 . . .  . . . . . 1  .  .   . .  .  5 .  .  . ## [40,] 5 . 25 . 2 .  1 1 . . . 1 1 . 2 2  . . . . 1 .  .  .   . .  . 15 .  .  1 ## [41,] 2 1  . 1 1 1  1 1 1 . . . 1 . . 1  1 . 1 . . 2  .  .   . .  .  2 .  5  . ## [42,] 3 1 14 . 2 .  . 2 . . 1 1 2 1 1 1  1 . . 1 . 1  .  .   1 .  .  . .  1  . ## [43,] 1 2 27 1 1 .  2 . . 3 . 3 1 . . .  1 1 . . 1 2  .  .   1 .  .  1 .  1  . ## [44,] 1 .  3 . 1 .  1 1 . . . . 1 1 . 1  . 1 . 1 1 .  .  .   . .  .  1 .  .  . ## [45,] . 1 13 . 1 1  . 1 1 1 . 1 1 . . 1  . 1 2 1 2 2  .  .   . .  .  . .  .  . ## [46,] 2 2 17 1 2 .  . 1 . 3 . . . 1 . 1  . 2 1 . . 1  .  .   . .  .  . .  .  . ## [47,] 8 1  7 . 4 .  1 . 1 3 . . 1 . 1 1  . . . . . .  .  .   . .  1  . .  1  . ## [48,] 4 1  3 1 1 .  1 1 . . 1 7 2 1 4 .  . . 1 1 . 1  .  .   1 .  .  . .  .  . ## [49,] 5 1 16 1 2 1 17 1 . . 1 . . 1 1 1  . . . 1 . 2  .  .   . .  .  . .  1  . ## [50,] 2 1 12 . 4 1  . . . . 2 1 2 . 1 . 13 . . . 1 .  .  .   . .  2  . .  .  . ## [51,] . .  3 . 2 .  . 1 . . . . . . . .  . . . . . .  2 20  41 . 13 11 .  2  6 ## [52,] . .  1 . 1 .  . . . . . . 1 . . .  . . 1 . . 1  2  6   4 .  7 21 .  2  5 ## [53,] . .  . . . .  1 . . . . . . . . .  . . . . . .  .  1   3 .  5  2 .  2  1 ## [54,] . .  . . . .  . . . . . . . . . .  . . . . . .  4  .   3 .  1  5 .  .  1 ## [55,] . .  . . 2 .  1 . . . . . . . . .  . . . . . .  3 10  14 .  4 21 .  2  6 ## [56,] . .  . . . .  . . . . . . . . . .  . . 1 . . 2  .  4  17 1  3 13 .  1  4 ## [57,] . 1  . . 3 .  1 . . . . . 1 . . .  . . . . . 1  1  8   7 .  1 16 .  1  3 ## [58,] . .  . . 1 .  . . . . . . 1 . . .  . . . . . 1  1  6   6 .  1  9 .  1  2 ## [59,] . .  . . 3 .  2 . . . . . . . . 2  . . . . . .  2  .   9 .  2 16 .  2  4 ## [60,] . .  . . 1 .  . . . . . . 1 . . .  . . . . 1 1  .  .   6 .  . 17 .  9  5 ## [61,] . .  . 2 . .  1 1 . . . . . 1 . 1  1 . . 1 1 1  .  .  76 .  .  2 .  2  1 ## [62,] . .  1 . 2 .  . . . . . . . . . .  . . . . . .  2  .  20 .  .  8 .  2  3 ## [63,] . .  . . 3 .  . . . . . 1 1 . . 1  . . . . . .  .  1  24 .  3  6 .  .  2 ## [64,] . .  . . . .  1 1 . . . . 1 . . .  . . . . . .  2 10  79 2  1  9 1  1  5 ## [65,] 1 .  1 1 1 .  1 2 . . . . . . . 1  . . 1 . . 1  1  .  53 2  2 11 .  1 14 ## [66,] 1 .  1 . 3 .  . 2 . . . . . 1 . .  . . . . . 4  9 41  53 1  4 14 1  6 11 ## [67,] . .  . . 2 .  . . . . . . 2 1 . .  . . . . 1 .  1 11  87 1  6 10 .  1  3 ## [68,] . .  . . . .  1 . . . . . . . . .  . . . . . 1 23 32  76 1  1 10 .  3  4 ## [69,] . .  . . 4 .  . . . . . . . . . .  . . . . . .  4 17  42 .  .  6 1  2  8 ## [70,] 1 .  . . 2 .  . . . 1 . 2 . . . .  . . . . . 2  .  . 114 .  .  7 1  4  4 ## [71,] . .  8 . . .  . . . . . . . . . .  . . . . . .  .  3   3 .  .  . .  .  . ## [72,] . .  5 . . .  . . . . . . . . . .  . . . . . .  1  .   1 .  .  . .  .  . ## [73,] . .  4 . . .  . . . . . . . . . 1  . . . . . .  .  .   1 .  .  . .  .  . ## [74,] . . 10 . . .  . . . . . . . . . .  . . . 1 . .  .  .   . .  .  . .  .  . ## [75,] . . 11 . . .  . . . . . . . . . .  . . . . . .  .  .   1 .  .  . .  .  . ## [76,] . . 30 . . .  . . . . . . . . . .  . . . . . .  1  .   . .  .  . .  .  . ## [77,] . .  8 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [78,] . .  5 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [79,] . .  9 . . .  . . . . . . . . . .  . . . . . .  .  .   . .  .  . .  .  . ## [80,] . .  2 . . .  . . . . . . . . . .  . . . . . .  2  7  22 .  . 14 .  6  2 ##                                                                                ##  [1,]  1  . . .  1 . . . .  1 .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ##  [2,]  1  . . .  . . . . .  . .  1 .  . .  1 1 1 . . .  .  . . . .   .  . .  . ##  [3,]  .  . . .  1 . . 1 .  . .  . .  . .  . . . . . .  .  . . 1 .   .  . .  . ##  [4,]  .  . . .  2 . . . .  . .  . 1  . .  . . . . . .  .  . . . .   .  1 .  . ##  [5,]  1  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . 1  . ##  [6,]  2  1 . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ##  [7,]  .  1 . .  . . . . .  . .  . .  1 .  . . . . . .  .  . . . 1   .  . .  1 ##  [8,]  1  . . .  . . . . .  . .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ##  [9,]  1  . . .  . . . . .  . .  . 1  . .  . . . . . .  .  . . . .   .  . .  . ## [10,]  1  1 . .  . . . . .  . .  . .  . .  1 . . . . .  .  . . . .   .  . .  . ## [11,]  1  . . .  . . . . .  . .  . .  . .  . . . . . .  3  . . . .   4  . .  1 ## [12,]  .  1 . .  . . . 1 .  . .  . 1  . .  . . . . . .  8  . . 1 .  10  4 .  4 ## [13,]  1  . . .  . . . . 1  . .  . .  . .  . . . . . .  2  . . . .   4  4 .  3 ## [14,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  2  . . . .   4  1 .  . ## [15,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . . .   8  . .  4 ## [16,]  .  1 . .  . . . . .  . .  . .  . .  . . . . . .  9  . . 4 .  23  8 .  8 ## [17,]  1  1 . .  . . . 1 .  . .  . .  . .  . . . . . .  .  . . 1 .   7  1 .  1 ## [18,]  2  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . 1 .   .  5 .  2 ## [19,]  .  . 1 .  . . . . .  . .  . .  . .  . . . . . .  1  . . . .   4  . .  2 ## [20,]  2  . . .  . . . . .  . .  . .  . .  . . . . . .  5  . . 1 .   6  1 .  4 ## [21,] 15  1 . .  2 1 . 1 1  2 1  3 5 12 .  2 . . . 1 5  .  . . . .   .  1 .  . ## [22,]  9  2 . 1 14 1 1 3 1 27 1  4 1  6 .  . 4 . 1 . 3 13  . . 4 .  18  5 1  8 ## [23,]  1  6 1 . 10 1 . 1 .  . .  2 .  2 1  . . . 1 . .  2  . . 1 .   1  . .  1 ## [24,]  5  . . 4  8 . . 2 1  1 2  1 .  1 1  1 4 . . . .  1  . . 1 .   2  . .  1 ## [25,]  7 36 2 1 11 1 1 . 1  1 1  1 1  6 2 14 4 1 . 1 3  .  . . . .   .  . 2  . ## [26,]  3  1 1 1  4 1 . 1 1  1 .  . 1  . 2  1 1 1 . 1 .  1  . . . .   3  . .  . ## [27,]  4  5 4 7  6 1 1 . .  . 1  . .  . 1  2 3 3 . 1 1  .  . . . .   .  . .  . ## [28,]  4  . 1 1  7 1 2 1 .  . .  2 .  . 3  . . 2 2 . 5  .  . . . .   1  . 1  . ## [29,] 11  3 1 1 22 . . 1 2  1 2 15 2  5 .  1 2 1 . . .  7  . . 1 .   7  . 1  4 ## [30,]  7  5 . 2 37 . 1 3 1  1 1  2 1  2 1  2 . . 5 . 4  6  . . 2 .   7  1 .  1 ## [31,]  .  1 . .  3 . . . .  . .  . .  . .  . . . . . .  .  . . . .   2  . .  . ## [32,]  .  . . .  4 . . . .  . .  . .  . .  . . . . . .  1  . . . .   4  . .  1 ## [33,]  1  . . .  9 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [34,]  .  . . .  6 . . 1 .  . .  . .  . .  . . . . . .  2  . . . .   .  . .  . ## [35,]  .  . . .  1 . . . .  . .  . .  . .  . . . . . 1  .  . . 1 .   .  . .  . ## [36,]  .  . . .  3 . . . .  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [37,]  1  1 . 1 14 . . . .  . .  . .  . .  . . . . . 1  1  . . . .   .  . .  . ## [38,]  .  1 . .  2 . . . .  1 .  . .  . .  . . . . . 1  .  . . . .   .  . .  . ## [39,]  .  1 . .  1 . . . .  . .  . .  . .  . . . . . 2  .  . . . .   .  . .  . ## [40,]  4  . . .  4 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [41,]  1  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  1 . . .   .  . .  . ## [42,]  1  1 . .  3 . . . .  . .  1 .  . .  . . . . . .  .  . . . .   4  1 .  . ## [43,]  .  . . .  . . . 1 .  . .  . .  1 .  . . . . . .  .  . . . .   .  . .  . ## [44,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [45,]  1  2 . .  . . . . .  . .  . .  . .  . . . . . .  1  . . . .   1  . .  . ## [46,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  3  . . . .   2  . .  1 ## [47,]  .  1 . .  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [48,]  .  . . .  . . . 1 .  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [49,]  .  . . 1  1 . . . .  . .  . .  . .  . . . . . 1  1  . . . .   .  . .  . ## [50,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [51,]  8  2 1 4  5 . . . .  1 .  4 .  3 .  3 2 . 1 1 . 12  . . 1 .   8  . .  4 ## [52,]  8  4 . . 12 . . . .  1 1  5 .  . .  2 2 . . . 2  4  . . . .   3  2 .  5 ## [53,]  7  . . 1  4 . . . .  1 1  2 .  . 1  . . . . . .  2  . . . .   5  . .  . ## [54,]  3  1 . .  2 . . . .  . .  . .  . .  1 . . . . 1  1  . . . .   2  . 1  . ## [55,] 10  2 . 1 16 2 1 2 .  3 1  . 1  . .  3 4 2 1 . 1  5  . . . .   3  . .  3 ## [56,] 15  3 . . 10 . . 2 .  6 2  5 .  . .  1 2 . 1 . 3  5  . . 4 .   7  1 .  3 ## [57,] 18  6 . 3  6 1 . 5 1  1 1  2 .  . .  1 . 1 . . 1  7  . . . .   6  1 1  6 ## [58,] 19  4 . .  2 . . 1 .  2 1  3 1  . .  . 2 2 . . 3 14  . . . .   5  2 1  3 ## [59,]  4  2 . . 12 2 . 2 .  2 .  2 3  . .  1 1 . 1 . .  5  . . . .   9  . 2  6 ## [60,] 17  5 . 2 16 1 1 . .  4 .  3 1  . .  1 . . 2 . 2 11  . . . .   4  . 2  2 ## [61,]  5  1 . 1  8 . . 1 .  2 .  . 2  3 4  3 . . . . . 75 16 . 6 3 102 25 2 11 ## [62,]  3  . . 1 13 . . . .  2 .  . 1 10 1  1 5 . . . 4 52  1 5 6 3  78 39 2 26 ## [63,]  1  . . . 21 . . 1 1  2 .  . 1  1 .  . 1 1 2 . . 11  2 2 5 1  23  5 .  5 ## [64,]  5  4 . 2  9 . . . .  2 .  . .  2 7  2 . 1 . . 2 19  4 4 4 3  25  2 1  2 ## [65,]  .  2 . . 20 . . . 2  . .  1 3  3 7  2 6 . 1 . 6 54  8 2 6 .  69 16 1 31 ## [66,]  3  5 . 2 10 2 . . 1  . .  2 1  4 .  3 2 1 . . 2 23  5 3 5 1  24  6 1 21 ## [67,]  6 10 . 2 23 1 . 1 .  3 .  . 1  4 2  3 7 . . . 5 45  8 6 6 3  43 11 6 21 ## [68,]  2  6 . 1  5 . . . 1  1 1  . 1  1 1  1 2 1 . . 1 10  4 4 5 .   8  3 3  2 ## [69,]  .  4 . . 28 . . . .  . .  . 1  3 2  4 2 . . . . 23  7 2 3 1  10  4 5  3 ## [70,]  3  2 . . 13 . . . .  2 .  . 1  6 .  3 . . . . . 37  . 1 5 2  50  9 1 10 ## [71,]  1  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   1  . .  . ## [72,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [73,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [74,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [75,]  .  . . 1  1 . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [76,]  .  2 . .  . . . . 1  . .  . .  . .  . 1 . . . .  .  . . . .   .  . .  . ## [77,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [78,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [79,]  .  . . .  . . . . .  . .  . .  . .  . . . . . .  .  . . . .   .  . .  . ## [80,]  3  3 . 1 10 . . . .  . .  3 1  3 1  2 1 1 . . 4  5  . 1 1 .   5  . .  1 ##                                                                               ##  [1,]  .   . .  . . .  .  1  . .  .  .  . .  .  2 .  .  2  .  .  .  .  . .  . ##  [2,]  .   . .  . . .  .  1  . .  .  .  . 1  .  . .  .  .  .  .  .  1  . .  . ##  [3,]  .   . .  . . .  1  1  . .  1  .  . .  .  1 .  .  1  2  .  2  .  1 .  1 ##  [4,]  .   . .  . . .  .  1  3 .  .  .  . .  .  2 .  3  .  .  1  1  .  1 .  . ##  [5,]  .   . .  1 . .  1  2  . .  1  .  1 .  .  3 .  2  .  3  1  .  .  . .  . ##  [6,]  .   1 .  . . .  .  .  . .  1  .  1 .  .  2 .  1  .  2  .  1  1  . .  . ##  [7,]  .   . .  . . .  .  .  . .  .  .  . .  .  2 .  .  2  .  .  .  1  . .  . ##  [8,]  .   . .  . . .  .  1  . .  .  .  . .  .  1 .  .  1  .  1  .  1  . .  . ##  [9,]  .   . .  . . .  .  .  1 .  .  .  . .  1  . .  .  .  .  .  .  1  . .  . ## [10,]  .   . .  . . .  .  2  . .  .  .  1 .  .  3 1  .  .  .  1  .  2  . .  . ## [11,]  2   . .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  .  . .  . ## [12,] 10   . .  . 2 .  .  1  . 1  .  .  1 .  .  . .  .  .  .  .  1  1  . .  . ## [13,]  6   . .  . . .  .  .  1 .  .  .  1 .  .  1 .  .  .  .  2  1  .  . .  . ## [14,]  1   . .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  .  . .  . ## [15,]  5   . .  . 1 .  .  .  2 .  1  .  . .  .  . .  .  1  2  1  1  2  . .  . ## [16,] 16   . .  . . .  3  2  . .  .  .  1 .  .  2 .  .  .  .  .  .  5  . 1  . ## [17,]  5   . .  . 1 .  .  .  . .  .  .  . .  .  4 .  .  .  .  .  .  .  . .  . ## [18,] 11   . .  . 1 .  1  .  . 2  .  .  . .  .  . .  .  .  .  1  .  .  . .  . ## [19,]  5   1 .  . . .  .  .  . 1  .  .  . .  .  . .  1  .  .  1  .  .  . .  . ## [20,]  8   1 .  . . .  .  .  . 1  1  .  . .  .  1 .  .  1  .  .  .  .  . .  . ## [21,]  2  13 4  . . .  2  .  . .  .  .  1 4  .  . .  3  5  6  1  .  4  3 6  1 ## [22,] 12  28 .  . 2 .  3  .  . .  1  .  3 1  7  . .  6  7  5  .  1 15  . 4  5 ## [23,]  1  15 .  1 . .  1  1  . .  .  .  . 1  1  . .  1  6  1  .  1  8  . .  . ## [24,]  5  11 .  . . .  6  .  1 .  .  .  3 .  1  . .  4  5  5  1  .  5  . 2  . ## [25,]  1  13 .  . . .  5  2  2 2  .  .  1 1  1  . .  8  4  3  2  .  4  3 .  . ## [26,]  .   7 1  . . .  1  .  . .  .  .  1 .  .  . .  3  3  2  .  .  2  . .  2 ## [27,]  3  37 .  . . .  3  .  1 .  .  .  1 5  2  . .  5  1  1  .  .  8  1 1  4 ## [28,]  .   5 .  . . .  1  1  1 .  .  .  . 1  .  . .  .  2  1  1  .  2  1 .  1 ## [29,]  5  20 2  1 . .  4  2  1 1  .  .  2 .  2  3 .  7 10  6  2  2 11  1 3  2 ## [30,]  3  18 3  . . .  2  1  . .  .  .  3 2  1  3 . 13 12  4  .  . 18  1 3  7 ## [31,]  .   1 .  . . .  1  3  . .  .  .  1 .  .  1 .  .  1  .  2  1  3  . .  . ## [32,]  2   . .  . . .  2  .  . .  .  1  . .  .  4 .  .  .  1  .  .  .  1 .  . ## [33,]  .   . .  . . .  .  1  1 .  .  .  . .  .  5 .  .  .  2  1  1  .  . .  . ## [34,]  1   . .  . . .  1  .  1 .  .  .  4 .  .  1 .  .  .  .  1  .  .  . .  . ## [35,]  .   . .  . . .  2  3  1 .  .  .  1 .  1  1 .  .  .  1  .  .  .  . .  . ## [36,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  1  .  .  1  .  .  . .  . ## [37,]  .   1 .  . . .  1  .  1 .  .  .  4 .  .  1 .  .  .  1  .  .  1  . 1  . ## [38,]  .   1 .  . . .  2  1  1 .  .  .  1 .  .  . .  .  .  1  1  .  .  . .  . ## [39,]  1   . .  . . .  .  .  1 .  .  .  . .  .  . .  .  .  .  .  1  1  . .  . ## [40,]  .   . .  1 . .  1  3  1 .  .  .  1 .  .  . .  .  .  .  2  1  1  . .  . ## [41,]  .   . .  . . .  2  1  . .  .  1  . .  .  . .  .  .  3  .  1  .  1 .  . ## [42,]  .   . .  . 1 .  .  1  . .  1  .  . .  .  . .  .  .  1  1  1  1  . .  . ## [43,]  .   . .  1 . .  .  .  . .  .  .  1 .  .  . .  .  .  .  1  .  3  1 .  . ## [44,]  .   . .  . . .  .  .  . .  .  .  . .  .  2 .  .  .  .  .  .  .  . .  . ## [45,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  2  1  .  1  .  . .  . ## [46,]  3   . .  . . .  .  .  . .  .  .  . .  .  1 .  .  .  .  1  1  .  . .  . ## [47,]  .   . .  . . .  .  2  . .  .  .  1 .  .  . .  .  .  .  2  .  .  1 .  . ## [48,]  .   1 .  . . .  .  1  . .  1  .  1 .  .  1 .  .  .  1  2  .  .  . .  . ## [49,]  .   . .  . . .  1  1  . .  .  .  . .  .  3 .  .  .  2  1  1  2  . .  . ## [50,]  .   . .  . . .  .  1  . .  .  .  2 .  .  . .  .  .  1  1  .  1  . .  . ## [51,]  8  16 .  . . .  4  3  1 .  .  .  9 2  2  3 . 15  7  8  2  . 21  2 2  5 ## [52,]  4  32 .  . . .  1  3  1 .  .  .  3 .  1  1 . 17 12  8  2  1 25  3 1  3 ## [53,]  .   7 .  . . .  2  .  . .  .  .  1 1  3  . .  8  7  6  1  .  6 16 1  4 ## [54,]  .   9 .  . . .  .  1  1 .  .  .  . 1  .  . . 11  6  2  .  . 10  . 1  1 ## [55,]  7  11 .  . . .  1  2  . .  .  .  4 2  .  . . 18 32  9 50  3 26  1 3 11 ## [56,]  7  17 .  . . .  5  2  . .  1  .  2 3  1  1 . 13 33  9  1  3 26 11 4  9 ## [57,] 13  33 .  2 1 .  .  .  . .  .  .  3 .  1  . . 36 12 10  1  1 16  3 5  2 ## [58,]  6  10 .  1 2 .  .  1  2 2  .  .  2 1  .  . . 17 19  8  1 27 15  5 5  5 ## [59,]  6  15 1  . . .  1  2  3 .  .  .  . 1  3  1 . 12 18  5  3  1 11  4 3  7 ## [60,]  4  25 .  . . .  1  .  . .  .  .  6 3  2  1 . 27 29 10  1  1 22  6 6 10 ## [61,] 50  61 1  . 7 2  9  1  4 2  .  2  5 6  4  3 . 12  6  1  5  . 10  8 1  . ## [62,] 53  31 8  1 9 5  4  .  3 .  .  .  1 1  .  1 4  7  7  2  .  .  5  1 1 12 ## [63,] 10  25 .  1 1 .  5  1  . 3  .  .  5 .  2  . 1  7  1  1  .  .  5  1 .  2 ## [64,]  9  14 3 33 . .  7  2  1 2  1  .  1 2  .  2 .  4  3  6  .  . 16  . 3  1 ## [65,] 68  58 1  . 6 3  2  1  . 3  1  . 22 5  1 64 1  8 11  6  2  .  2  . .  3 ## [66,] 36 112 2  . 1 3  5  .  1 1  .  . 10 4 39  2 . 10  7  4  5  .  3  . 1  4 ## [67,] 49  37 3  . 4 . 12  1 38 2 21  .  9 8  1  3 .  4  9  4  4  2 16  1 .  4 ## [68,]  3  18 6  . 1 .  7  1  . .  .  1  1 2  3  1 1  2  4  2  .  2  3  1 .  . ## [69,]  9  29 1  1 . . 10  3  . 1  1 32  3 4  5  1 .  6  1  2  1  1  4  1 .  . ## [70,] 26 125 .  3 5 1 18 43  1 8  .  .  3 5  1  1 .  6  4  7  3  2  5  2 1  1 ## [71,]  .   5 .  . . .  .  .  . 1  .  .  . .  .  . .  .  .  .  .  .  3  . .  . ## [72,]  .   1 .  . . .  .  .  . .  .  .  . 1  .  . .  .  .  .  .  .  4  . .  . ## [73,]  .   . 1  . . .  .  .  1 .  .  .  . .  .  . .  .  .  1  .  .  2  . .  . ## [74,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  1  .  .  6  . .  . ## [75,]  .   5 .  . . .  1  .  . .  .  .  . .  .  . .  .  1  1  .  .  3  . .  . ## [76,]  .   1 .  . . .  .  .  2 .  .  .  . .  .  . .  .  .  .  .  . 17  . .  . ## [77,]  .   3 .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  3  . .  . ## [78,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  6  . .  . ## [79,]  .   . .  . . .  .  .  . .  .  .  . .  .  . .  .  .  .  .  .  4  . .  . ## [80,]  4  16 5  . . .  4  3  2 .  .  .  4 .  1  . .  7  5  1  1  1  3  . 2  1 ##                                                                               ##  [1,]  . .  2  . .  3 1 . . . .  . . . . . 1 .  .  .  .  .  .  .  . . .  .  . ##  [2,]  . .  .  . .  . . . . . .  . . . . . 1 .  .  .  .  .  .  .  . . .  .  . ##  [3,]  . .  1  1 .  3 . . . . .  4 . . 1 . . .  1  .  1  .  .  .  . . .  .  . ##  [4,]  . .  2  . .  3 . . 1 . .  2 1 . . 1 . .  .  1  .  1  .  .  . . .  .  . ##  [5,]  1 .  1  . .  1 . . . . .  1 . . . 1 . .  .  1  .  1  1  .  . . .  .  . ##  [6,]  . .  .  . .  3 . . . . .  2 . . . . . .  .  .  .  1  .  .  . . .  .  . ##  [7,]  . .  .  . .  3 . . . . .  . . . . . . .  1  .  .  .  .  .  . . .  .  . ##  [8,]  1 .  1  . .  1 . . . . .  1 . . . . . .  .  .  .  1  1  .  . . .  .  . ##  [9,]  . .  1  . .  . . . . . .  1 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [10,]  . .  .  . .  3 . . . . .  3 . . . . . .  .  .  .  1  .  .  . . .  .  . ## [11,]  . .  .  . .  . . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [12,]  1 .  1  . 1  1 . . 2 . .  2 . . . . . .  .  1  1  1  .  .  . . .  .  . ## [13,]  . .  .  . .  2 . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [14,]  . .  .  . .  . . . . . .  . . . . . . 1  .  1  .  .  .  .  . . .  .  . ## [15,]  . .  .  . .  1 . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [16,]  . .  .  1 .  . . . . . .  1 . . . 1 . .  .  .  .  .  .  .  . . .  .  . ## [17,]  . .  .  . .  . . . . . .  . . . . . . .  .  .  .  1  .  .  . . .  .  . ## [18,]  . .  .  . .  . . . . . .  1 . . 1 . . .  .  .  .  .  1  .  . . .  .  . ## [19,]  . .  .  . .  2 . . . . .  . . . . . . .  .  1  .  .  .  .  . . .  .  . ## [20,]  . .  .  . .  3 . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [21,]  1 .  2  6 .  6 . . . 1 .  6 1 . . . 2 1  .  .  .  4  .  .  . 1 .  .  . ## [22,]  1 . 10  3 1  4 2 . . 1 1 15 1 2 . 1 1 .  .  1  .  5  .  .  . . .  .  . ## [23,]  . .  4  4 .  . . . . . .  2 . 4 . . 1 .  .  1  .  3  .  .  . . .  .  . ## [24,]  . .  2  6 .  . . . . . .  4 . . . . 1 .  .  .  .  5  .  .  . . .  .  . ## [25,]  . .  2  1 1  1 . 1 2 . .  7 . . . . 1 .  .  .  1 12  1  .  . . .  .  . ## [26,]  . .  2  2 .  1 . . . . .  3 . . . . 1 .  .  .  .  1  .  .  . . .  .  . ## [27,]  . .  1  4 .  . . . . . 1  6 . 3 . . 1 .  .  1  . 15  1  .  . . .  .  . ## [28,]  . .  6  4 .  1 . 2 . 1 .  . . . . . . 1  .  .  .  2  .  .  . . .  .  . ## [29,]  . 1  5  9 .  3 1 . . 1 3  4 . 1 2 . . .  .  .  .  3  .  .  . . .  .  . ## [30,]  1 .  6  8 .  6 . 2 . . . 20 . 3 1 1 2 .  .  1  .  1  .  .  . 2 1  .  . ## [31,]  6 .  6  8 .  8 . . . . .  . . . . 2 . .  .  .  .  .  2  .  . . .  .  . ## [32,]  2 .  .  . .  2 . . . . .  1 . 1 . . 2 .  .  .  .  1  1  .  . . .  .  . ## [33,]  2 .  .  3 .  3 . . . . .  1 . . . . 1 .  1  .  .  .  .  .  . . .  .  . ## [34,]  1 .  .  1 .  5 . . . . .  . 1 . . 1 . .  .  .  .  .  .  .  . . .  .  . ## [35,]  . .  .  2 .  2 . . . . .  . 1 . . . . .  .  .  .  .  .  .  . . .  .  . ## [36,]  1 .  .  5 .  1 . . . . .  . . . . 1 . .  .  .  .  .  .  .  . 1 .  .  . ## [37,]  2 .  1  6 1  5 . . . . .  1 . . . 3 . .  1  .  .  2  1  .  . . .  .  . ## [38,]  1 .  1  6 .  1 . . . . .  . . . . 1 . .  .  .  .  .  1  .  . . .  .  . ## [39,]  2 .  .  1 1  3 . . . . .  . . . . 1 . .  .  .  .  1  1  .  . . .  .  . ## [40,]  6 .  .  6 .  2 . . . . .  . . . . 2 . .  3  .  .  .  .  .  . . .  .  . ## [41,]  2 .  1  3 .  7 . . . . .  1 . . . . . .  .  .  .  .  .  .  . . .  .  . ## [42,]  . .  .  . .  4 . . . . .  2 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [43,]  . .  .  . .  2 . . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [44,]  . .  .  . .  2 . . . . .  . . . . . . .  .  1  .  1  .  .  . . .  .  . ## [45,]  . .  1  . .  5 1 . . . .  5 . . . . . .  .  .  .  1  .  .  . . .  .  . ## [46,]  . .  1  . .  1 . . . . .  1 . . . . 1 .  .  .  .  .  .  .  . . .  .  . ## [47,]  1 .  .  . .  1 . . . . .  . . . . 1 1 .  .  .  .  1  .  .  . . .  .  . ## [48,]  . .  1  . .  4 . . . . .  . . . . 1 . .  .  .  .  2  .  .  . . .  .  . ## [49,]  . .  .  . .  1 . . . . .  2 . . . . . .  1  .  .  .  .  .  . . .  .  . ## [50,]  . .  .  . .  2 1 . . . .  . . . . . . .  .  .  .  .  .  .  . . .  .  . ## [51,]  . 1 17 12 .  5 . 3 . 2 1  9 2 6 . 1 2 1  .  .  .  5  2  .  . . .  .  . ## [52,]  5 1 13 12 2 10 2 3 5 4 2 20 3 4 5 6 2 . 26  .  .  3  .  .  . . .  .  . ## [53,]  1 3  1  2 1  1 2 . 1 2 .  9 . 1 . . . 1  .  1  .  .  .  .  . . .  .  . ## [54,]  2 .  2  4 .  4 1 1 . 1 1  3 . . . 1 2 .  .  1  .  .  .  .  . . .  .  . ## [55,] 14 .  9 35 3 17 1 2 2 1 .  6 6 4 4 1 2 1  2  2  .  1  .  .  . . .  .  . ## [56,]  4 1 12 16 4  8 . 1 4 3 3  9 . 3 . 2 1 6  2 25  .  1  .  .  . . .  .  . ## [57,] 18 1 14 24 1 33 3 6 3 . 1 91 . . 5 7 . 4  1  .  .  .  .  .  . . .  .  . ## [58,]  9 .  8  9 2  8 1 1 1 1 2 11 3 4 2 2 6 1  .  1  .  1  .  .  . . .  .  . ## [59,]  5 1  7  9 1 14 1 5 . . 3 18 . 2 1 6 3 .  .  .  .  1  .  .  . . .  .  . ## [60,] 11 1 13 30 1 19 2 6 2 . 5 18 3 8 4 3 6 2  1  .  .  2  1  .  . . .  .  . ## [61,]  . .  5  8 .  4 . 6 . . . 18 . . . 2 1 .  .  .  .  6  1  .  . . .  .  . ## [62,]  . .  4  8 .  7 . . . . 1  2 . . . . . 1  .  .  .  7  .  .  . . .  .  . ## [63,]  . .  5  3 .  4 . 3 1 . .  9 1 . . 1 . 1  .  .  .  2  .  1  . . .  .  . ## [64,]  . .  3  3 .  3 . 1 . 1 . 11 1 . . . 1 .  1  .  .  6  .  .  . . .  .  . ## [65,]  . . 11 13 .  2 . 1 . . 1 12 . 1 . 2 2 .  1  .  . 24  1  .  . . .  .  . ## [66,]  . .  9  8 1  2 2 3 . . 1 11 1 1 . . 1 .  1  .  . 16  2  .  . 2 .  .  . ## [67,]  1 .  9  7 .  . 1 3 . . .  7 . . . . . 1  1  .  . 28  1  .  . . .  .  . ## [68,]  . .  4  5 .  1 . . . . .  5 1 . . . 1 1  .  .  .  3  .  .  . . .  .  . ## [69,]  1 .  5  8 .  6 1 1 1 . 1  4 1 . . . . .  1  1  .  6  1  .  . . .  .  . ## [70,]  . .  2  3 2  4 . 4 1 . 4 25 1 1 . . 1 2  .  .  .  3  1  .  1 . .  .  . ## [71,]  . .  .  . .  . . . . . .  1 . . . . . .  .  . 43 18  4 14 11 1 8  6 14 ## [72,]  . .  .  . .  . . . . . .  2 . . . . . .  .  . 41  8  4 11  3 5 3  5  5 ## [73,]  . .  .  . .  . . . . . .  . . . . . . .  .  . 36 12  2 14 13 3 2  9  8 ## [74,]  . .  .  1 .  . . . . . .  3 . . . . . .  .  . 55 18  2 18  8 3 2 10 11 ## [75,]  . .  .  . .  1 . . . . .  . . 1 . . . .  .  . 58 18  2 23  8 2 3  7 15 ## [76,]  . .  .  . .  1 . . . . .  2 . . . . . .  .  . 54 28 15 62 29 7 9 23  6 ## [77,]  . .  .  . .  . . . . . .  3 . . . . . .  .  . 66 11  2  9  3 3 3 12  4 ## [78,]  . .  .  1 .  . . . . . .  . . 1 . 1 . .  .  . 34 13  1 14  6 1 3  6  3 ## [79,]  . .  .  . .  . . . . . .  4 . 1 . . . .  .  . 30 16  3  6  5 1 4 11  5 ## [80,]  . .  1  4 .  1 . 1 . . 1  7 . 1 . . . 1  1  .  6  9  2  .  2 2 2  1  2 ##                                                                               ##  [1,]  .  .  . .  1  . .  .  1 . . .  . . . . .  .  1  .  .  .  .  . . . .  . ##  [2,]  .  1  . 1  .  . .  1  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  1 ##  [3,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [4,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  .  1 . . .  . ##  [5,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [6,]  .  .  . .  1  . .  .  . . 1 .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [7,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  1  . . . .  . ##  [8,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ##  [9,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [10,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  1  .  .  . . . .  . ## [11,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [12,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  . 29  .  .  . . . .  . ## [13,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 1 . .  . ## [14,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [15,]  .  .  . .  1  . 1  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [16,]  .  .  . .  1  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [17,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [18,]  1  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [19,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [20,]  .  .  . .  .  . 1  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [21,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  1  .  . . . 1  . ## [22,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [23,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [24,]  .  .  . .  .  3 .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [25,]  .  .  . .  .  . .  .  5 . . .  . . . . .  .  .  .  1  1  .  . . . .  . ## [26,]  .  1  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [27,]  .  .  . .  .  . .  .  2 . . .  . . . . 1  .  .  .  .  .  .  . 1 . .  . ## [28,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [29,]  .  1  . 1  .  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [30,]  .  .  . .  .  . .  .  2 . . .  . 1 . . 1  .  .  .  1  .  .  . . . .  . ## [31,]  .  .  . 1  .  . .  .  . . . 1  . . . . .  .  .  .  . 27  2 35 5 7 5 14 ## [32,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  2  5  . 3 . 3  1 ## [33,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  1  3 15 9 1 1  4 ## [34,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  . 10  4  3 2 1 .  9 ## [35,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  8 10 29 6 . 3  7 ## [36,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  5  8 11 3 1 1 10 ## [37,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  2 10 12 22 6 5 1 10 ## [38,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  7 10 15 8 4 2  2 ## [39,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  4  3 18 2 1 1  4 ## [40,]  .  .  . .  .  . 1  .  2 . . .  . . . . .  .  .  .  1 11 13 18 5 1 1  7 ## [41,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  1  3  1 10 4 . 3  6 ## [42,]  .  .  . 1  .  . .  .  . . . .  . . . . 1  .  .  .  .  .  8  . 1 . . 13 ## [43,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  2  . . . .  . ## [44,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  1  3 . . .  . ## [45,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [46,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 2 . .  . ## [47,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  6  .  4 9 . .  6 ## [48,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  3  1 . . .  . ## [49,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  1  2  3  3 3 . .  5 ## [50,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  2  . . . .  3 ## [51,]  .  .  . 1  1  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [52,]  .  .  . 1  .  . 1  .  2 . . .  . . . . .  .  .  .  1  1  .  . . . .  . ## [53,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [54,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . 1 . .  . ## [55,]  .  .  . 1  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [56,]  .  .  . .  .  . .  .  2 . . .  . . . . 1  .  .  .  .  .  .  . . . .  . ## [57,]  .  1  . .  1  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  1 . . .  . ## [58,]  .  .  . .  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [59,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  1  . . . .  1 ## [60,]  .  2  . 2  .  . .  .  2 . . .  . . . . .  .  .  .  2  .  .  1 . . .  . ## [61,]  .  1  . .  .  . 1  .  1 . . .  . . . . .  .  .  .  1  .  .  . . . .  . ## [62,]  .  1  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [63,]  .  .  . .  .  . .  .  . . . .  . . . . .  .  .  .  .  .  .  1 . . .  1 ## [64,]  .  .  . 2  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [65,]  .  1  . .  2  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [66,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [67,]  .  .  . 1  1  . .  .  3 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [68,]  .  .  . .  .  . .  .  1 . . .  1 . . . .  .  .  .  .  .  .  . . . .  . ## [69,]  .  .  . .  .  . .  .  1 . . .  . . . . .  .  .  .  .  .  .  . . . .  . ## [70,]  .  .  . 1  .  . .  .  2 . . .  . . . . .  .  .  .  .  .  .  1 1 . .  . ## [71,]  5  8  1 2  3  6 3  4  2 3 4 4  3 5 4 . 5  2  1  .  .  .  .  . . . .  . ## [72,]  3  2  3 5  .  4 3  3  . . 1 1  1 1 . . 4  .  .  . 41  .  .  . . . .  . ## [73,]  5  .  3 4  1  4 2  5  1 2 2 .  4 4 3 3 1  4  1  6  .  .  .  . . . .  . ## [74,]  5 12  2 4  2  3 3  2  2 7 . 4  1 2 4 1 4  .  .  1  .  .  .  . . . .  . ## [75,]  2  8  3 1  1  4 2 14  1 4 2 2  3 4 8 1 .  .  .  .  2  .  .  . . . .  1 ## [76,] 42  7 11 6 14  3 9 32 10 . 3 6  8 1 1 2 . 20 25 26  1  .  .  . . . .  . ## [77,]  2  3  6 .  2  4 .  2 37 1 1 2  . 4 2 1 1  2  .  1  .  .  .  . . . .  . ## [78,]  1  2  5 4  . 20 .  .  . 3 2 2 13 1 . 2 .  2  3  .  1  .  .  . . . .  . ## [79,]  2  6  3 .  4  5 1  8  2 5 4 .  2 . . 3 .  1  1  .  1  .  .  . . . .  . ## [80,]  1  .  . 1  1  . .  .  3 2 . .  . . 1 . .  .  1  1  1  .  .  . . . .  . ##                                                    ##  [1,]  . 1 .  . . . .  . . . . . 1 . . 1  . 1 .  . ##  [2,]  . . 1  . . . .  1 . . 1 1 . . . .  . . 1  . ##  [3,]  . 1 .  . . . .  . . . . 1 . . . .  . . .  . ##  [4,]  . 1 .  . . . .  . . . . . . . . 3  . . .  . ##  [5,]  . 2 1  . . . .  . . . . 2 1 . . .  . . .  . ##  [6,]  . . 1  . . . .  . . . 1 1 . . . 1  . . .  . ##  [7,]  . . .  . . . .  . . . . . . . . 1  . 1 .  . ##  [8,]  . 1 .  . . . .  . . . . . 1 . . .  . . .  . ##  [9,]  . . .  . . . .  . . . . . . . . 1  . . .  . ## [10,]  . . .  . . . .  . . . 1 . . . . .  . . .  . ## [11,]  . . .  . . . .  . . . . . 1 . . .  . . .  . ## [12,]  . 1 .  . . . .  . . . . . . . . 2  . . .  . ## [13,]  . . .  . . . .  . . 1 1 . . . . .  . . .  . ## [14,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [15,]  . 1 .  . . . .  . . . 1 . . . . 1  . . .  . ## [16,]  . . .  . . . .  1 . . . . 2 . . .  . . .  . ## [17,]  . . .  . . . .  . . . . . 1 . . .  . . .  . ## [18,]  . . .  . . . .  . 1 . . . . . . .  . . .  . ## [19,]  . . .  . . . .  1 . . 1 . 1 . . .  . . .  . ## [20,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [21,]  . 1 .  . . . .  . . . . . . . . .  . . .  . ## [22,]  . . .  . . . .  . . . 2 . . . . .  . . .  . ## [23,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [24,]  . . .  . . . .  . . . . . . . . .  1 . .  . ## [25,]  . . .  . . . .  . . . . . . . . .  . . 1  . ## [26,]  . . .  . . . .  . . . . . . . . .  1 . .  . ## [27,]  . . .  . 1 . .  1 . . . . . . . 1  . . .  . ## [28,]  . . .  . . . .  1 . . 1 . 1 . . .  . . .  . ## [29,]  . . .  . 1 . 1  1 . . . . . . . .  . . .  . ## [30,]  . . .  . . . .  . . . . 1 . . . .  2 . .  . ## [31,]  . 1 .  . 4 2 1  1 1 3 2 3 3 . 4 7  1 . 3  . ## [32,]  3 1 4  1 . 1 .  1 . . 2 1 . 1 1 3  . . 5  . ## [33,]  5 2 2  1 . 1 1  1 . 4 1 1 2 3 . 2 58 1 1  . ## [34,]  7 2 1  1 3 1 1  1 . . 1 3 1 2 1 .  . 2 3  . ## [35,]  1 4 1  . . . .  1 2 1 1 . 1 . . 1  . 1 . 10 ## [36,]  . 1 2  . 1 . 1  . 1 2 1 2 3 . . 3  1 3 .  . ## [37,]  3 . 3  1 7 1 2  1 1 3 3 2 1 . 4 3  . 2 1  . ## [38,]  1 2 2  . 4 . 2  . 1 . . . 2 . 2 5  2 1 2  1 ## [39,]  . 1 2  1 . 1 1  1 . 1 3 1 1 1 1 .  1 2 .  . ## [40,]  2 3 6 51 3 1 . 25 3 . 1 1 2 2 2 1  . 1 2  1 ## [41,]  6 1 2  . 1 1 1  1 . . . 2 . . . .  . . 3  . ## [42,]  . . 1  . . . .  . . . 1 1 2 1 1 2  1 1 .  . ## [43,]  . . .  . . . 1  . . . 2 . . . . 1  . . .  . ## [44,]  . . .  . . . .  . . . . . . . . 1  . 1 .  . ## [45,]  . . 1  1 . . .  . . . . . . . . .  . . .  . ## [46,]  . . .  . . . .  . . . 1 . . . . 2  . . .  . ## [47,] 10 1 3  . . . .  . . . . 1 . . . 2  1 1 3  . ## [48,]  . 1 2  . . . .  . 1 . . . 1 . . .  . 2 1  . ## [49,]  9 . .  . . . 1  . . . . 1 . 1 . 1  . . 3  . ## [50,]  . . 1  . . . .  . . . . . . . 1 1  . 1 .  . ## [51,]  . . .  . 1 . .  2 . . . . . . . .  . . .  . ## [52,]  . . .  . . . .  . . 1 . . . . . .  1 1 .  . ## [53,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [54,]  . . .  . 1 . .  . . . . . . . . .  . . .  . ## [55,]  . . .  . . 1 .  . . . . . 1 . . 2  2 . .  . ## [56,]  . . .  . . . .  3 . . . . . . . .  . . .  . ## [57,]  . . .  . . . .  2 . . . . . . . .  1 . .  . ## [58,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [59,]  . . .  . 1 . .  . . . . . . . . .  . . .  . ## [60,]  . . .  . 1 . .  . . . . . . . . .  . 3 .  . ## [61,]  . 1 1  . . . .  1 . . . . . . 1 .  2 . 1  . ## [62,]  . . .  . . . .  . . . . . . . . 1  . . 1  . ## [63,]  . . .  . . . .  1 . . . . . . . .  . . .  . ## [64,]  . 1 .  . 1 . .  1 . . . . . . . .  . . .  . ## [65,]  . . .  . 3 . .  1 . . 1 . 1 . . 2  4 . .  . ## [66,]  . . .  . 2 . .  2 . . 1 . 1 . . 1  2 . .  . ## [67,]  . 2 .  . . . .  4 . . . . . . 1 1  1 1 .  . ## [68,]  . . .  . . . .  1 . . . . . . . .  . . 1  . ## [69,]  . . .  . 1 . .  . . . . . 1 . . .  3 . .  . ## [70,]  . . .  . . . .  . . . 1 . . . . .  1 . .  . ## [71,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [72,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [73,]  . . .  . . . .  . . . . . . . . 1  . . .  . ## [74,]  . . .  . . . .  . . . . . . . 2 .  . . .  . ## [75,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [76,]  . . .  1 . . .  1 . . . . . . . 1  . 1 .  . ## [77,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [78,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [79,]  . . .  . . . .  . . . . . . . . .  . . .  . ## [80,]  . . .  . . . .  . . . 1 . . . . .  . . .  ."},{"path":"/articles/soma-reading.html","id":"slicing-1","dir":"Articles","previous_headings":"SOMA SparseNDArray","what":"Slicing","title":"Reading from SOMA objects","text":"Just SOMADataFrame, can also retrieve subsets data SOMASparseNDArray can fit memory. Unlike SOMADataFrames, SOMASparseNDArrays always indexed using zero-based offset integer dimension, named soma_dim_N. Therefore, array N-dimensional, read() method can accept list length N specifies slice array. SOMASparseNDArray dimensions always named soma_dim_N N dimension number. use schema() dimnames() retrieve dimension names. example, ’s fetch first 5 rows matrix:","code":"counts$schema() ## Schema ## soma_dim_0: int64 not null ## soma_dim_1: int64 not null ## soma_data: double not null counts$read(coords = list(soma_dim_0 = 0:4))$tables()$concat() ## Table ## 258 rows x 3 columns ## $soma_dim_0 <int64 not null> ## $soma_dim_1 <int64 not null> ## $soma_data <double not null>"},{"path":"/articles/soma-shapes.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"SOMA shapes","text":"TileDB-SOMA 1.15 ’re proud support intuitive extensible notion shape. Please also see Academy tutorial.","code":""},{"path":"/articles/soma-shapes.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"SOMA shapes","text":"Let’s load bundled SOMAExperiment containing subsetted version 10X genomics PBMC dataset provided SeuratObject. return SOMAExperiment object. obs dataframe domain, soft limit values can written . (’ll get error try read write soma_joinid values outside range, important data-integrity reassurance.) domain see matches data populated inside . (usually case. might , ’ve created dataframe written data yet — point ’s empty still shape.) data — cells — add experiment later, able resize obs, maxdomain hard limit. var dataframe’s domain similar: Likewise, N-dimensional arrays within experiment shapes well. ’s important difference: dataframe domain gives inclusive lower upper bounds soma_joinid writes, shape N-dimensional arrays upper bound plus 1. Since 80 cells 230 genes , X’s shape reflects . N-dimensional arrays similar: particular, X array experiment — experiments — sparse. means needn’t number every row cell matrix. Nonetheless, shape serves soft limit reads writes: ’ll get exception trying read write outside . general rule ’ll see following: X array’s shape nobs x nvar obsm array’s shape nobs x number, maybe 20 obsp array’s shape nobs x nobs varm array’s shape nvar x number, maybe 20 varp array’s shape nvar x nvar","code":"library(tiledbsoma)  exp <- load_dataset(\"soma-exp-pbmc-small\") exp #> <SOMAExperiment> #>   uri: /tmp/RtmpX4Doa9/soma-exp-pbmc-small exp$obs$domain() #> $soma_joinid #> [1]  0 79 exp$obs$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 head(as.data.frame(exp$obs$read()$concat())) #>   soma_joinid    orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 #> 1           0 SeuratProject         70           47               0 #> 2           1 SeuratProject         85           52               0 #> 3           2 SeuratProject         87           50               1 #> 4           3 SeuratProject        127           56               0 #> 5           4 SeuratProject        173           53               0 #> 6           5 SeuratProject         70           48               0 #>   letter.idents groups RNA_snn_res.1         obs_id #> 1             A     g2             0 ATGCCAGAACGACT #> 2             A     g1             0 CATGGCCTGTGCAT #> 3             B     g2             0 GAACCTGATGAACC #> 4             A     g2             0 TGACTGGATTCTCA #> 5             A     g2             0 AGTCAGACTGCACA #> 6             A     g1             0 TCTGATACACGTGT var <- exp$ms$get(\"RNA\")$var var$domain() #> $soma_joinid #> [1]   0 229 var$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 obs <- exp$obs var <- exp$ms$get(\"RNA\")$var X   <- exp$ms$get(\"RNA\")$X$get(\"data\") obs$domain() #> $soma_joinid #> [1]  0 79 var$domain() #> $soma_joinid #> [1]   0 229 X$shape() #> integer64 #> [1] 80  230 X$maxshape() #> integer64 #> [1] 9223372036854775728 9223372036854775578 obsm <- exp$ms$get(\"RNA\")$obsm obsm$names() #> [1] \"X_pca\"  \"X_tsne\" obsp <- exp$ms$get(\"RNA\")$obsp obsp$names() #> [1] \"RNA_snn\" list(     obsm$get(\"X_pca\")$shape(),     obsm$get(\"X_pca\")$maxshape() ) #> [[1]] #> integer64 #> [1] 80 19 #>  #> [[2]] #> integer64 #> [1] 9223372036854775728 9223372036854775789 list(     obsp$get(\"RNA_snn\")$shape(),     obsp$get(\"RNA_snn\")$maxshape() ) #> [[1]] #> integer64 #> [1] 80 80 #>  #> [[2]] #> integer64 #> [1] 9223372036854775728 9223372036854775728"},{"path":"/articles/soma-shapes.html","id":"advanced-usage-dataframes-with-non-standard-index-columns","dir":"Articles","previous_headings":"","what":"Advanced usage: dataframes with non-standard index columns","title":"SOMA shapes","text":"SOMA data model, SOMASparseNDArray SOMADenseNDArray objects always int64 dimensions named soma_dim_0, soma_dim_1, , numeric soma_data attribute contents array. Furthermore, always case. dataframes, though, must soma_joinid column type int64, can one index columns addtion — , soma_joinid can non-index column. really, dataframes capable , via index-column names specify creation time. Let’s create couple dataframes, data, different choices index-column names. Now let’s look domain maxdomain dataframes. see soma_joinid slot dataframe’s domain requested. Another point domain specified string-type index columns. can set create one two ways: either case domain slot string-typed index column read back ('', ''). Now let’s look dataframe. soma_joinid index column . fine, long within data write , index-column values uniquely identify row. domain reads back written:","code":"exp$ms$get(\"RNA\")$X$get(\"data\")$schema() #> Schema #> soma_dim_0: int64 not null #> soma_dim_1: int64 not null #> soma_data: double not null exp$obs$schema() #> Schema #> soma_joinid: int64 not null #> orig.ident: dictionary<values=string, indices=int8> #> nCount_RNA: double #> nFeature_RNA: int32 #> RNA_snn_res.0.8: dictionary<values=string, indices=int8> #> letter.idents: dictionary<values=string, indices=int8> #> groups: large_string #> RNA_snn_res.1: dictionary<values=string, indices=int8> #> obs_id: large_string sdfuri1 <- withr::local_tempdir(\"sdf1\") sdfuri2 <- withr::local_tempdir(\"sdf2\") asch <- arrow::schema(     arrow::field(\"soma_joinid\", arrow::int64(), nullable = FALSE),     arrow::field(\"mystring\", arrow::large_utf8(), nullable = FALSE),     arrow::field(\"myint\", arrow::int32(), nullable = FALSE),     arrow::field(\"myfloat\", arrow::float32(), nullable = FALSE) )  soma_joinid = c(0, 1) mystring    = c(\"hello\", \"world\") myint       = c(33, 44) myfloat     = c(4.5, 5.5)  tbl <- arrow::arrow_table(     soma_joinid = c(soma_joinid),     mystring = c(mystring),     myint = c(myint),     myfloat = c(myfloat) ) sdf1 <- SOMADataFrameCreate(   sdfuri1,   asch,   index_column_names = c(\"soma_joinid\", \"mystring\"),   domain = list(soma_joinid = c(0, 9), mystring = NULL) ) sdf1$write(tbl) sdf1$close() sdf1 <- SOMADataFrameOpen(sdfuri1) sdf1$index_column_names() #> [1] \"soma_joinid\" \"mystring\" domain = list(soma_joinid = (0, 9), mystring = NULL) domain = list(soma_joinid = (0, 9), mystring = c('', '')) sdf1$domain() #> $soma_joinid #> [1] 0 9 #>  #> $mystring #> [1] \"\" \"\" sdf1$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 #>  #> $mystring #> [1] \"\" \"\" sdf2 <- SOMADataFrameCreate(   sdfuri2,   asch,   index_column_names = c(\"myfloat\", \"myint\"),   domain = list(myfloat = c(0, 9999), myint = c(-1000, 1000)) ) sdf2$write(tbl) sdf2$close() sdf2 <- SOMADataFrameOpen(sdfuri1) sdf2$index_column_names() #> [1] \"soma_joinid\" \"mystring\" sdf2$domain() #> $soma_joinid #> [1] 0 9 #>  #> $mystring #> [1] \"\" \"\" sdf2$maxdomain() #> $soma_joinid #> integer64 #> [1] 0                   9223372036854773759 #>  #> $mystring #> [1] \"\" \"\""},{"path":"/articles/soma-shapes.html","id":"advanced-usage-using-resize-at-the-dataframearray-level","dir":"Articles","previous_headings":"","what":"Advanced usage: using resize at the dataframe/array level","title":"SOMA shapes","text":"TileDB-SOMA Python API, method resizing dataframes arrays within experiment. present yet offer corresponding method TileDB-SOMA R API, simple reason low demand . Nonetheless, completeness, offer guidance resizes dataframes arrays within TileDB-SOMA experiment. N-dimensional arrays upgraded, created using TileDB-SOMA 1.15 higher, simply following: array’s $tiledbsoma_has_upgraded_shape() reports FALSE, invoke $tiledbsoma_upgrade_shape() method. Otherwise invoke $.resize() method. Let’s fresh unpack pre-1.15 experiment: see X array upgraded, shape reports maxshape: Given pre-1.15 TileDB-SOMA-R arrays created maxshape leaving room growth, arrays shape resized . 1.15 onward, course, ’ve see , arrays created room growth can resize upward.","code":"exp <- load_dataset(\"soma-exp-pbmc-small-pre-1.15\") exp #> <SOMAExperiment> #>   uri: /tmp/RtmpX4Doa9/soma-exp-pbmc-small-pre-1.15 X <- exp$ms$get(\"RNA\")$X$get(\"data\") X$tiledbsoma_has_upgraded_shape() #> [1] FALSE X$shape() #> integer64 #> [1] 80  230 X$maxshape() #> integer64 #> [1] 80  230"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aaron Wolen. Maintainer, author. Dirk Eddelbuettel. Author. Paul Hoffman. Author. John Kerl. Author. TileDB, Inc.. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wolen , Eddelbuettel D, Hoffman P, Kerl J (2025). tiledbsoma: 'TileDB' Stack Matrices, Annotated ('SOMA'). R package version 1.16.1, https://github.com/single-cell-data/TileDB-SOMA.","code":"@Manual{,   title = {tiledbsoma: 'TileDB' Stack of Matrices, Annotated ('SOMA')},   author = {Aaron Wolen and Dirk Eddelbuettel and Paul Hoffman and John Kerl},   year = {2025},   note = {R package version 1.16.1},   url = {https://github.com/single-cell-data/TileDB-SOMA}, }"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The 'tiledbsoma' R package has been written by a team comprised of"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"members from Chan Zuckerberg Initiative (CZI) and TileDB, Inc., as"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"part of the 'SOMA' (\"Stack of Matrices, Annotated\") initative."},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The repository provides detailed commit statistics across the C++,"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"Python, and R components of the implementation:"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"https://github.com/single-cell-data/TileDB-SOMA/graphs/contributors"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The package also includes code written by other contributors as"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"detailed below:"},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"-- libtiledbsoma/src/external/{src,include}/thread_pool/ ----------------------------------------"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The thread_pool implementation is from TileDB, Inc., and part of TileDB Embedded released at"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"https://github.com/tiledb-inc/tiledb"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* @copyright Copyright (c) 2017-2022 TileDB, Inc."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"*            Copyright (c) 2011 The LevelDB Authors. All rights reserved."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"*"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* Redistribution and use in source and binary forms, with or without"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* modification, are permitted provided that the following conditions are met:"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* Redistributions of source code must retain the above copyright notice, this"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* list of conditions and the following disclaimer."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"*"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* Redistributions in binary form must reproduce the above copyright notice,"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* this list of conditions and the following disclaimer in the documentation"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* and/or other materials provided with the distribution."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"*"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* Neither the name of Google Inc. nor the names of its contributors may be used"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* to endorse or promote products derived from this software without specific"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* prior written permission."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"*"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"-- apis/r/src/nanoarrow.{h,cc}/ -------------------------------------------------------------"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"The nanoarrow package was written by Dewey Dunnington and other and released at"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"https://github.com/apache/arrow-nanoarrow"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// Licensed to the Apache Software Foundation (ASF) under one"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// or more contributor license agreements.  See the NOTICE file"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// distributed with this work for additional information"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// regarding copyright ownership.  The ASF licenses this file"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// to you under the Apache License, Version 2.0 (the"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// \"License\"); you may not use this file except in compliance"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// with the License.  You may obtain a copy of the License at"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"//"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"//   http://www.apache.org/licenses/LICENSE-2.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"//"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// Unless required by applicable law or agreed to in writing,"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// software distributed under the License is distributed on an"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// KIND, either express or implied.  See the License for the"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// specific language governing permissions and limitations"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"// under the License."},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"TileDB Stack of Matrices, Annotated (SOMA)","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"R implementation SOMA API specification.","code":""},{"path":[]},{"path":"/index.html","id":"release-packages","dir":"","previous_headings":"","what":"Release packages","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"TileDB-SOMA releases can installed R-universe, serves macOS binaries source package Unix-like platforms. Installing source Unix-like platforms requires cmake, git, recent-enough C++ compiler (g++ version 10.* ). Alternatively, tiledbsoma can installed directly Conda, serves binaries multiple architectures. Note, ’re using mamba drop-replacement conda accelerate install process.","code":"install.packages('tiledbsoma', repos = c('https://tiledb-inc.r-universe.dev',                                          'https://cloud.r-project.org')) mamba install -c conda-forge -c tiledb r-tiledbsoma"},{"path":"/index.html","id":"from-source","dir":"","previous_headings":"","what":"From source","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"install latest tiledbsoma development version (main branch), use remotes::install_github(): note fmt spdlog packages: encounter install-time error like undefined symbol: _ZTIN3fmt2v912format_errorE uninstall systemversions fmt spdlog. Linux, means dpkg -l | egrep \"lib(spdlog|fmt)\" now come empty. encounter install-time error like fatal error: spdlog/spdlog.h: file directory additionally recursively remove /usr/local/lib/cmake/spdlog, since system uninstall spdlog fails remove properly.","code":"remotes::install_github(\"https://github.com/single-cell-data/TileDB-SOMA\", subdir = \"apis/r\")"},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"From source","what":"Requirements","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Source installation requires tiledb R package – turn depends either local installation TileDB Core library provided build artifacts. general, source installation TileDB Core packages requires cmake git installed; common tools operating system provides readily. R package dependencies listed DESCRIPTION file can installed via e.g. remotes::install_deps(\".\", dependencies=TRUE) also install suggested packages. order build vignettes, knitr rmarkdown required (installed), testthat testing. testthat invoked directly pkgbuild also needed (installed listed DESCRIPTION). addition, R package also depends libtiledbsoma library repository. either installed package (described next section), can used system library (one found). system installation can provided following steps libtiledbsoma directory.","code":""},{"path":"/index.html","id":"development-setup","dir":"","previous_headings":"From source","what":"Development setup","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"set install local clone git repository: Clone repository: git clone https://github.com/single-cell-data/TileDB-SOMA.git. Change R API package directory: cd TileDB-SOMA/apis/r. Optionally, clean files repo: ./cleanup (needed first time). Optionally, add optional package test data: install.packages(\"pbmc3k.tiledb\",  repos=\"https://ghrr.github.io/drat\"). edited src/*.cpp files changed function signatures, running Rscript -e 'Rcpp::compileAttributes()' update Rcpp-generated glue code. changed C++ function header documentation, run Rscript -e 'roxygen2::roxygenise()' update corresponding R files. Build R package source tarball repository sources: R CMD build . (also include libtiledbsoma source via repository soft-link); dependencies required described previous section). Optionally, check test package tarball skipping vignettes manuals (need texlive equivalent): R CMD check ---vignettes ---manual tiledbsoma_*.tar.gz. Finally, install package tarball: R CMD INSTALL tiledbsoma_*.tar.gz. installation presence two C++ libraries (TileDB Core, TileDB-SOMA) tested . TileDB Core builds can downloaded needed, TileDB-SOMA library built needed. (plan provide downloadable artifact .) installed successfully, package sources can edited re-installed iteratively. optional clean step ensures full rebuild, optional copy libtiledbsoma ensures updated .","code":""},{"path":"/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Please see https://github.com/single-cell-data/TileDB-SOMA/issues.","code":""},{"path":"/index.html","id":"information-for-developers","dir":"","previous_headings":"","what":"Information for developers","title":"TileDB Stack of Matrices, Annotated (SOMA)","text":"Please see TileDB-SOMA wiki. main branch implements updated specification. Please also see main-old branch implementation original specification.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Class allows blockwise read iteration SOMA reads","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"tiledbsoma::ReadIter -> BlockwiseReadIterBase","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"array underlying SOMA array axis axis iterate blockwise fashion axes_to_reindex axes re-index coords list CoordsStrider objects coords_axis CoordsStrider axis reindex_disable_on_axis Additional axes re-indexed reindexable Shorthand see iterator poised re-indexed ","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"tiledbsoma::ReadIter$concat()","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"BlockwiseReadIterBase$new() BlockwiseReadIterBase$read_complete() BlockwiseReadIterBase$read_next() BlockwiseReadIterBase$clone()","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Create","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$new(   sr,   array,   coords,   axis,   ...,   reindex_disable_on_axis = NA )"},{"path":"/reference/BlockwiseReadIterBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Named list CoordsStrider objects; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-read-complete-","dir":"Reference","previous_headings":"","what":"Method read_complete()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Check iterated read complete ","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$read_complete()"},{"path":"/reference/BlockwiseReadIterBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"TRUE read complete, otherwise FALSE","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-read-next-","dir":"Reference","previous_headings":"","what":"Method read_next()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"Read next chunk iterated read. read complete, throws iterationCompleteWarning warning returns NULL","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$read_next()"},{"path":"/reference/BlockwiseReadIterBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"NULL next blockwise chunk iterated read","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseReadIterBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"","code":"BlockwiseReadIterBase$clone(deep = FALSE)"},{"path":"/reference/BlockwiseReadIterBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator Base Class — BlockwiseReadIterBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Class allows blockwise read iteration SOMA reads sparse matrices","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"tiledbsoma::ReadIter -> tiledbsoma::BlockwiseReadIterBase -> BlockwiseSparseReadIter","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"repr Representation sparse matrix return","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"tiledbsoma::BlockwiseReadIterBase$read_complete() tiledbsoma::BlockwiseReadIterBase$read_next()","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"BlockwiseSparseReadIter$new() BlockwiseSparseReadIter$concat() BlockwiseSparseReadIter$clone()","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Create","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$new(   sr,   array,   coords,   axis,   ...,   repr = \"T\",   reindex_disable_on_axis = NA )"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Named list CoordsStrider objects; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored repr Representation sparse matrix return; choose : “T”: returns TsparseMatrix “R”: returns RsparseMatrix “C”: returns CsparseMatrix Note: passing repr “R” “C” available re-indexing enabled axes 0 1, respectively reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"Concatenate remainder blockwise iterator","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$concat()"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"sparse matrix (determined self$repr) remainder iterator","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseSparseReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"","code":"BlockwiseSparseReadIter$clone(deep = FALSE)"},{"path":"/reference/BlockwiseSparseReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Sparse Matrices — BlockwiseSparseReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Class allows blockwise read iteration SOMA reads Arrow Tables","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"tiledbsoma::ReadIter -> tiledbsoma::BlockwiseReadIterBase -> BlockwiseTableReadIter","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"tiledbsoma::BlockwiseReadIterBase$initialize() tiledbsoma::BlockwiseReadIterBase$read_complete() tiledbsoma::BlockwiseReadIterBase$read_next()","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"BlockwiseTableReadIter$concat() BlockwiseTableReadIter$clone()","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Concatenate remainder blockwise iterator","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"","code":"BlockwiseTableReadIter$concat()"},{"path":"/reference/BlockwiseTableReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"Arrow Table remainder iterator","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/BlockwiseTableReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"","code":"BlockwiseTableReadIter$clone(deep = FALSE)"},{"path":"/reference/BlockwiseTableReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Blockwise Read Iterator for Arrow Tables — BlockwiseTableReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ConfigList.html","id":null,"dir":"Reference","previous_headings":"","what":"A Configuration List — ConfigList","title":"A Configuration List — ConfigList","text":"R6 mapping type configuring various “parameters”. Essentially, serves nested map inner map ScalarMap: {<param>: {<key>: <value>}}","code":""},{"path":"/reference/ConfigList.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A Configuration List — ConfigList","text":"tiledbsoma::MappingBase -> ConfigList","code":""},{"path":"/reference/ConfigList.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A Configuration List — ConfigList","text":"tiledbsoma::MappingBase$initialize() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/ConfigList.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A Configuration List — ConfigList","text":"ConfigList$get() ConfigList$set() ConfigList$setv() ConfigList$clone()","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$get(param, key = NULL, default = quote(expr = ))"},{"path":"/reference/ConfigList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"param Outer key “parameter” fetch key Inner key fetch; pass NULL return  map param default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/ConfigList.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"value key param map, default key found","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$set(param, key, value)"},{"path":"/reference/ConfigList.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"param Outer key “parameter” set key Inner key set value Value add key, NULL remove entry key; optionally provide param value ScalarMap update param keys values value","code":""},{"path":"/reference/ConfigList.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"\\[chainable\\] Invisibly returns self value added key param","code":""},{"path":[]},{"path":"/reference/ConfigList.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$setv(...)"},{"path":"/reference/ConfigList.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"... Ignored","code":""},{"path":"/reference/ConfigList.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"A Configuration List — ConfigList","text":"Nothing; setv() disabled ConfigList objects","code":""},{"path":"/reference/ConfigList.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A Configuration List — ConfigList","text":"objects class cloneable method.","code":""},{"path":"/reference/ConfigList.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"A Configuration List — ConfigList","text":"","code":"ConfigList$clone(deep = FALSE)"},{"path":"/reference/ConfigList.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Configuration List — ConfigList","text":"deep Whether make deep clone.","code":""},{"path":"/reference/CoordsStrider.html","id":null,"dir":"Reference","previous_headings":"","what":"The Coordinate Strider — CoordsStrider","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider allows creating coordinate slices interated manner. Alternatively, can chunk existing vector coordinates","code":""},{"path":"/reference/CoordsStrider.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider operates using 64-bit integer objects; , accessing fields, strider$start strider$stride return integer64 object, functions differently regular integer. Use caution convert back integers numerics necessary","code":""},{"path":"/reference/CoordsStrider.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The Coordinate Strider — CoordsStrider","text":"coords set, coordinates iterate start set, starting point iterated coordinates; otherwise minimum value self$coords end set, end point iterated coordinates; otherwise maximum value self$coords stride stride, many coordinates generate per iteration; note: field settable, reset iterator","code":""},{"path":[]},{"path":"/reference/CoordsStrider.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The Coordinate Strider — CoordsStrider","text":"CoordsStrider$new() CoordsStrider$print() CoordsStrider$length() CoordsStrider$has_next() CoordsStrider$next_element()","code":""},{"path":"/reference/CoordsStrider.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The Coordinate Strider — CoordsStrider","text":"Create coordinate strider","code":""},{"path":"/reference/CoordsStrider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$new(coords, ..., stride = NULL, start = NULL, end = NULL)"},{"path":"/reference/CoordsStrider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Coordinate Strider — CoordsStrider","text":"coords integer vector coordinates ... Ignored stride stride many coordinates yield per iteration; default, try yield coordinates per iteration start coords missing, starting coordinate generate end coords missing, ending coordinate generate","code":""},{"path":"/reference/CoordsStrider.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The Coordinate Strider — CoordsStrider","text":"Print coordinate strider screen","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$print()"},{"path":"/reference/CoordsStrider.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"The Coordinate Strider — CoordsStrider","text":"Get length (span) coordinates within strider","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$length()"},{"path":"/reference/CoordsStrider.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"length (span) coordinate strider","code":""},{"path":"/reference/CoordsStrider.html","id":"method-has-next-","dir":"Reference","previous_headings":"","what":"Method has_next()","title":"The Coordinate Strider — CoordsStrider","text":"Determine coordinates yield","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$has_next()"},{"path":"/reference/CoordsStrider.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"TRUE coordinates yield FALSE otherwise","code":""},{"path":"/reference/CoordsStrider.html","id":"method-next-element-","dir":"Reference","previous_headings":"","what":"Method next_element()","title":"The Coordinate Strider — CoordsStrider","text":"Generate next set coordinates yield. coordinates yield, raises stopIteration error","code":""},{"path":"/reference/CoordsStrider.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coordinate Strider — CoordsStrider","text":"","code":"CoordsStrider$next_element()"},{"path":"/reference/CoordsStrider.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The Coordinate Strider — CoordsStrider","text":"integer vector next set coordinates","code":""},{"path":"/reference/CoordsStrider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Coordinate Strider — CoordsStrider","text":"","code":"strider <- CoordsStrider$new(start = 1L, end = 200L, stride = 60L) while (strider$has_next()) {   str(strider$next_element()) } #> integer64 [1:60] 1 2 3 4 5 6 7 8 ...  #> integer64 [1:60] 61 62 63 64 65 66 67 68 ...  #> integer64 [1:60] 121 122 123 124 125 126 127 128 ...  #> integer64 [1:20] 181 182 183 184 185 186 187 188 ..."},{"path":"/reference/EphemeralCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral Collections — EphemeralCollection","title":"Ephemeral Collections — EphemeralCollection","text":"Ephemeral version SOMACollections; ephemeral collections equivalent SOMA collections stored -memory instead -disk","code":""},{"path":"/reference/EphemeralCollection.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral Collections — EphemeralCollection","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralCollection","code":""},{"path":"/reference/EphemeralCollection.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral Collections — EphemeralCollection","text":"soma_type SOMA object type","code":""},{"path":"/reference/EphemeralCollection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral Collections — EphemeralCollection","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralCollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral Collections — EphemeralCollection","text":"EphemeralCollection$clone()","code":""},{"path":"/reference/EphemeralCollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral Collections — EphemeralCollection","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralCollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collections — EphemeralCollection","text":"","code":"EphemeralCollection$clone(deep = FALSE)"},{"path":"/reference/EphemeralCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collections — EphemeralCollection","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral Collection Base — EphemeralCollectionBase","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Base class ephemeral collections; ephemeral collections equivalent SOMA collections stored -memory instead -disk","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> EphemeralCollectionBase","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"uri “ephemeral-collection:<MEMORY_ADDRESS>” soma_type Dummy field ephemeral objects compatibility SOMA collections platform_config Dummy field ephemeral objects compatibility SOMA collections tiledbsoma_ctx Dummy field ephemeral objects compatibility SOMA collections object Dummy field ephemeral objects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list()","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"EphemeralCollectionBase$new() EphemeralCollectionBase$create() EphemeralCollectionBase$open() EphemeralCollectionBase$close() EphemeralCollectionBase$exists() EphemeralCollectionBase$print() EphemeralCollectionBase$get_tiledb_config() EphemeralCollectionBase$length() EphemeralCollectionBase$names() EphemeralCollectionBase$set() EphemeralCollectionBase$get() EphemeralCollectionBase$remove() EphemeralCollectionBase$set_metadata() EphemeralCollectionBase$get_metadata() EphemeralCollectionBase$add_new_collection() EphemeralCollectionBase$add_new_dataframe() EphemeralCollectionBase$add_new_dense_ndarray() EphemeralCollectionBase$add_new_sparse_ndarray() EphemeralCollectionBase$clone()","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Create ephemeral collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$new(...)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"... Ignored","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Create new, empty ephemeral collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$create()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns new ephemeral collection class class(self)","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$open(mode)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"mode Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$close()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Invisibly returns NULL","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$exists()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns FALSE ephemeral collections exist -disk","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Special method printing object representation console","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$print()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Prints details ephemeral collection invisibly returns ","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-tiledb-config-","dir":"Reference","previous_headings":"","what":"Method get_tiledb_config()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get_tiledb_config(param = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"param Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Returns NULL ephemeral collections -disk configuration","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Retrieve number items collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$length()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"length collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Retrieve names members. (lifecycle: maturing)","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$names()"},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"character vector member names.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Add object ephemeral collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$set(object, name = NULL, relative = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object TileDB object (eg. TileDBGroup) add collection name name add object relative Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"[chainable] Invisibly returns self object added name","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Get objects ephemeral collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get(name)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"name Name object collection get","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object named name","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Remove objects ephemeral collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$remove(name)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"name Name object remove collection","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"[chainable] Invisibly returns self object name removed","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$set_metadata(metadata)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"metadata Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$get_metadata(key = NULL)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"empty list","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-collection-","dir":"Reference","previous_headings":"","what":"Method add_new_collection()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_collection(object, key)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"object, key Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-dataframe-","dir":"Reference","previous_headings":"","what":"Method add_new_dataframe()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_dataframe(key, schema, index_column_names)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, schema, index_column_names Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-dense-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_dense_ndarray()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_dense_ndarray(key, type, shape)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, type, shape Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-add-new-sparse-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_sparse_ndarray()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Dummy method ephemeral cobjects compatibility SOMA collections","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$add_new_sparse_ndarray(key, type, shape)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"key, type, shape Ignored ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"Throws error method supported ephemeral objects","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralCollectionBase.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"","code":"EphemeralCollectionBase$clone(deep = FALSE)"},{"path":"/reference/EphemeralCollectionBase.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral Collection Base — EphemeralCollectionBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral SOMA Experiment — EphemeralExperiment","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"Ephemeral version SOMAExperiments; ephemeral experiments equivalent SOMA experiments stored -memory instead -disk","code":""},{"path":"/reference/EphemeralExperiment.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralExperiment","code":""},{"path":"/reference/EphemeralExperiment.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"obs SOMADataFrame containing annotations observation axis. contents soma_joinid column define observation index domain obs_id. observations SOMAExperiment must defined data frame ms SOMACollection named SOMAMeasurements soma_type SOMA object type","code":""},{"path":"/reference/EphemeralExperiment.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralExperiment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"EphemeralExperiment$clone()","code":""},{"path":"/reference/EphemeralExperiment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralExperiment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"","code":"EphemeralExperiment$clone(deep = FALSE)"},{"path":"/reference/EphemeralExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral SOMA Experiment — EphemeralExperiment","text":"deep Whether make deep clone.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":null,"dir":"Reference","previous_headings":"","what":"Ephemeral SOMA Measurement — EphemeralMeasurement","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"Ephemeral version SOMAMeasurements; ephemeral measurements equivalent SOMA measurements stored -memory instead -disk","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> tiledbsoma::EphemeralCollectionBase -> EphemeralMeasurement","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"var SOMADataFrame containing primary annotations variable axis, variables measurement (.e., annotates columns X). contents soma_joinid column define variable index domain, var_id. variables measurement must defined data frame X SOMACollection SOMASparseNDArrays; contain measured feature values indexed [obsid, varid] obsm SOMACollection SOMADenseNDArrays containing annotations observation axis. array indexed obsid shape obs obsp SOMACollection SOMASparseNDArrays containing pairwise annotations observation axis indexed [obsid_1, obsid_2] varm SOMACollection SOMADenseNDArrays containing annotations variable axis. array indexed varid shape var varp SOMACollection SOMASparseNDArrays containing pairwise annotations variable axis indexed [varid_1, varid_2] soma_type SOMA object type","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::EphemeralCollectionBase$add_new_collection() tiledbsoma::EphemeralCollectionBase$add_new_dataframe() tiledbsoma::EphemeralCollectionBase$add_new_dense_ndarray() tiledbsoma::EphemeralCollectionBase$add_new_sparse_ndarray() tiledbsoma::EphemeralCollectionBase$close() tiledbsoma::EphemeralCollectionBase$create() tiledbsoma::EphemeralCollectionBase$exists() tiledbsoma::EphemeralCollectionBase$get() tiledbsoma::EphemeralCollectionBase$get_metadata() tiledbsoma::EphemeralCollectionBase$get_tiledb_config() tiledbsoma::EphemeralCollectionBase$initialize() tiledbsoma::EphemeralCollectionBase$length() tiledbsoma::EphemeralCollectionBase$names() tiledbsoma::EphemeralCollectionBase$open() tiledbsoma::EphemeralCollectionBase$print() tiledbsoma::EphemeralCollectionBase$remove() tiledbsoma::EphemeralCollectionBase$set() tiledbsoma::EphemeralCollectionBase$set_metadata()","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"EphemeralMeasurement$clone()","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"objects class cloneable method.","code":""},{"path":"/reference/EphemeralMeasurement.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"","code":"EphemeralMeasurement$clone(deep = FALSE)"},{"path":"/reference/EphemeralMeasurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ephemeral SOMA Measurement — EphemeralMeasurement","text":"deep Whether make deep clone.","code":""},{"path":"/reference/IntIndexer.html","id":null,"dir":"Reference","previous_headings":"","what":"The SOMA Re-Indexer — IntIndexer","title":"The SOMA Re-Indexer — IntIndexer","text":"re-indexer unique integer indices","code":""},{"path":[]},{"path":"/reference/IntIndexer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The SOMA Re-Indexer — IntIndexer","text":"IntIndexer$new() IntIndexer$get_indexer() IntIndexer$clone()","code":""},{"path":"/reference/IntIndexer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The SOMA Re-Indexer — IntIndexer","text":"Create new re-indexer","code":""},{"path":"/reference/IntIndexer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$new(data)"},{"path":"/reference/IntIndexer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"data Integer keys used build index (hash) table","code":""},{"path":"/reference/IntIndexer.html","id":"method-get-indexer-","dir":"Reference","previous_headings":"","what":"Method get_indexer()","title":"The SOMA Re-Indexer — IntIndexer","text":"Get underlying indices target data","code":""},{"path":"/reference/IntIndexer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$get_indexer(target, nomatch_na = FALSE)"},{"path":"/reference/IntIndexer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"target Data re-index nomatch_na Set non-matches NA instead -1","code":""},{"path":"/reference/IntIndexer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The SOMA Re-Indexer — IntIndexer","text":"vector 64-bit integers target re-indexed","code":""},{"path":"/reference/IntIndexer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The SOMA Re-Indexer — IntIndexer","text":"objects class cloneable method.","code":""},{"path":"/reference/IntIndexer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The SOMA Re-Indexer — IntIndexer","text":"","code":"IntIndexer$clone(deep = FALSE)"},{"path":"/reference/IntIndexer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SOMA Re-Indexer — IntIndexer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/MappingBase.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Base Mapping Type — MappingBase","title":"R6 Base Mapping Type — MappingBase","text":"Virtual base mapping type R6 objects; defines internal data structure (private$.data) named list along behavior methods getting (self$get()) setting (self$set()) items map","code":""},{"path":"/reference/MappingBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"# S3 method for class 'MappingBase' x[[i, ..., default = NULL]]  # S3 method for class 'MappingBase' x[[i, ...]] <- value  # S3 method for class 'MappingBase' as.list(x, ...)  # S3 method for class 'MappingBase' length(x)  # S3 method for class 'MappingBase' names(x)"},{"path":"/reference/MappingBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"x mapping object key fetch set; see $get() $set() methods ... Ignored default Default value fetch found; defaults NULL value Value add , NULL remove entry ","code":""},{"path":"/reference/MappingBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Base Mapping Type — MappingBase","text":"[[: value map, default found [[<-: x value added .list: map list length: number items map names: keys map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Base Mapping Type — MappingBase","text":"MappingBase$new() MappingBase$keys() MappingBase$values() MappingBase$items() MappingBase$get() MappingBase$set() MappingBase$setv() MappingBase$remove() MappingBase$update() MappingBase$length() MappingBase$to_list() MappingBase$print() MappingBase$clone()","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$new(...)"},{"path":"/reference/MappingBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"... Ignored","code":""},{"path":"/reference/MappingBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"virtual class directly instantiated","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$keys()"},{"path":"/reference/MappingBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"keys map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$values()"},{"path":"/reference/MappingBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"list containing map values","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$items()"},{"path":"/reference/MappingBase.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"Return items map list","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$get(key, default = quote(expr = ))"},{"path":"/reference/MappingBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key fetch default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/MappingBase.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"value key map, default key found","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$set(key, value)"},{"path":"/reference/MappingBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/MappingBase.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self value added key","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$setv(...)"},{"path":"/reference/MappingBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"... Named arguments add self","code":""},{"path":"/reference/MappingBase.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self values ... added map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$remove(key)"},{"path":"/reference/MappingBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"key Key remove","code":""},{"path":"/reference/MappingBase.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self key removed map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$update(map)"},{"path":"/reference/MappingBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"map mapping type update current map ","code":""},{"path":"/reference/MappingBase.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Invisibly returns self value map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$length()"},{"path":"/reference/MappingBase.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"number items map","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$to_list()"},{"path":"/reference/MappingBase.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"map list","code":""},{"path":[]},{"path":"/reference/MappingBase.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$print()"},{"path":"/reference/MappingBase.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Base Mapping Type — MappingBase","text":"[chainable] Prints information map stdout invisibly returns self","code":""},{"path":"/reference/MappingBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Base Mapping Type — MappingBase","text":"objects class cloneable method.","code":""},{"path":"/reference/MappingBase.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Base Mapping Type — MappingBase","text":"","code":"MappingBase$clone(deep = FALSE)"},{"path":"/reference/MappingBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Base Mapping Type — MappingBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/PlatformConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Platform Configuration — PlatformConfig","title":"Platform Configuration — PlatformConfig","text":"R6 mapping type configuring various “parameters” multiple “platforms”, essentially serves multi-nested map inner map ScalarMap contained within ConfigList (middle map): {platform: {param: {key: value}}}","code":""},{"path":"/reference/PlatformConfig.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Platform Configuration — PlatformConfig","text":"tiledbsoma::MappingBase -> PlatformConfig","code":""},{"path":"/reference/PlatformConfig.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Platform Configuration — PlatformConfig","text":"tiledbsoma::MappingBase$initialize() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/PlatformConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Platform Configuration — PlatformConfig","text":"PlatformConfig$platforms() PlatformConfig$params() PlatformConfig$get() PlatformConfig$get_params() PlatformConfig$set() PlatformConfig$setv() PlatformConfig$clone()","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$platforms()"},{"path":"/reference/PlatformConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"names “platforms” (outer keys)","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$params(platform = NULL)"},{"path":"/reference/PlatformConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform “platform” pull parameter names (middle keys) ; pass TRUE return possible parameter names","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"parameter names (middle keys) platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$get(   platform,   param = NULL,   key = NULL,   default = quote(expr = ) )"},{"path":"/reference/PlatformConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) fetch param name “paramters” platform fetch; NULL, returns configuration platform key “key” (inner key) param platform fetch; NULL param passed, returns map param platform default Default value fetch key found; defaults null","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"value key param platform map, default key found","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$get_params(platform)"},{"path":"/reference/PlatformConfig.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) fetch","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"ConfigList platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$set(platform, param, key, value)"},{"path":"/reference/PlatformConfig.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"platform name “platform” (outer key) set param Name “parameter” (middle key) platform set key Inner key set value Value add key, NULL remove entry key; optionally provide platfomr, param, value ScalarMap update  param platform keys values value","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"\\[chainable\\] Invisibly returns self value added key param platform","code":""},{"path":[]},{"path":"/reference/PlatformConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$setv(...)"},{"path":"/reference/PlatformConfig.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"... Ignored","code":""},{"path":"/reference/PlatformConfig.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Platform Configuration — PlatformConfig","text":"Nothing; setv() disabled PlatformConfig objects","code":""},{"path":"/reference/PlatformConfig.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Platform Configuration — PlatformConfig","text":"objects class cloneable method.","code":""},{"path":"/reference/PlatformConfig.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform Configuration — PlatformConfig","text":"","code":"PlatformConfig$clone(deep = FALSE)"},{"path":"/reference/PlatformConfig.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform Configuration — PlatformConfig","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Read Iterator Base class — ReadIter","title":"SOMA Read Iterator Base class — ReadIter","text":"SOMA Read Iterator Base class SOMA Read Iterator Base class","code":""},{"path":"/reference/ReadIter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMA Read Iterator Base class — ReadIter","text":"Class allows read iteration SOMA reads.","code":""},{"path":[]},{"path":"/reference/ReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Read Iterator Base class — ReadIter","text":"ReadIter$new() ReadIter$read_complete() ReadIter$read_next() ReadIter$concat() ReadIter$clone()","code":""},{"path":"/reference/ReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Read Iterator Base class — ReadIter","text":"Create (lifecycle: maturing)","code":""},{"path":"/reference/ReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$new(sr)"},{"path":"/reference/ReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Base class — ReadIter","text":"sr soma read pointer","code":""},{"path":"/reference/ReadIter.html","id":"method-read-complete-","dir":"Reference","previous_headings":"","what":"Method read_complete()","title":"SOMA Read Iterator Base class — ReadIter","text":"Check iterated read complete . (lifecycle: maturing)","code":""},{"path":"/reference/ReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$read_complete()"},{"path":"/reference/ReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Base class — ReadIter","text":"logical","code":""},{"path":"/reference/ReadIter.html","id":"method-read-next-","dir":"Reference","previous_headings":"","what":"Method read_next()","title":"SOMA Read Iterator Base class — ReadIter","text":"Read next chunk iterated read. (lifecycle: maturing). read complete, retunrs NULL raises warning.","code":""},{"path":"/reference/ReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$read_next()"},{"path":"/reference/ReadIter.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator Base class — ReadIter","text":"NULL one arrow::Table, matrixZeroBasedView","code":""},{"path":"/reference/ReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Read Iterator Base class — ReadIter","text":"Concatenate remainder iterator","code":""},{"path":"/reference/ReadIter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$concat()"},{"path":"/reference/ReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Read Iterator Base class — ReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/ReadIter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator Base class — ReadIter","text":"","code":"ReadIter$clone(deep = FALSE)"},{"path":"/reference/ReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator Base class — ReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAArrayBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Array Base Class — SOMAArrayBase","title":"SOMA Array Base Class — SOMAArrayBase","text":"Adds SOMA-specific functionality TileDBArray class.  (lifecycle: maturing)","code":""},{"path":"/reference/SOMAArrayBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Array Base Class — SOMAArrayBase","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBArray -> SOMAArrayBase","code":""},{"path":"/reference/SOMAArrayBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Array Base Class — SOMAArrayBase","text":"soma_type Retrieve SOMA object type.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Array Base Class — SOMAArrayBase","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBArray$attributes() tiledbsoma::TileDBArray$attrnames() tiledbsoma::TileDBArray$close() tiledbsoma::TileDBArray$colnames() tiledbsoma::TileDBArray$dimensions() tiledbsoma::TileDBArray$dimnames() tiledbsoma::TileDBArray$get_metadata() tiledbsoma::TileDBArray$index_column_names() tiledbsoma::TileDBArray$maxshape() tiledbsoma::TileDBArray$ndim() tiledbsoma::TileDBArray$non_empty_domain() tiledbsoma::TileDBArray$open() tiledbsoma::TileDBArray$print() tiledbsoma::TileDBArray$schema() tiledbsoma::TileDBArray$set_metadata() tiledbsoma::TileDBArray$shape() tiledbsoma::TileDBArray$tiledb_array() tiledbsoma::TileDBArray$tiledb_schema()","code":""},{"path":"/reference/SOMAArrayBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Array Base Class — SOMAArrayBase","text":"SOMAArrayBase$clone()","code":""},{"path":"/reference/SOMAArrayBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Array Base Class — SOMAArrayBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAArrayBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Array Base Class — SOMAArrayBase","text":"","code":"SOMAArrayBase$clone(deep = FALSE)"},{"path":"/reference/SOMAArrayBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Array Base Class — SOMAArrayBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Index obs/var soma_joinids given query result. Retrieve index given obs var coordinates query result. Coordinates outside query result return arrow::null().","code":""},{"path":[]},{"path":"/reference/SOMAAxisIndexer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"SOMAAxisIndexer$new() SOMAAxisIndexer$by_obs() SOMAAxisIndexer$by_var() SOMAAxisIndexer$clone()","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Create new SOMAAxisIndexer object.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$new(query)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"query SOMAExperimentAxisQuery object build indices .","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-by-obs-","dir":"Reference","previous_headings":"","what":"Method by_obs()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Get index given obs coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$by_obs(coords)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"coords vector arrow::Array numeric coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-by-var-","dir":"Reference","previous_headings":"","what":"Method by_var()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"Get index given var coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$by_var(coords)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"coords vector arrow::Array numeric coordinates.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisIndexer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"","code":"SOMAAxisIndexer$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisIndexer.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result Indexer — SOMAAxisIndexer","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Axis Query — SOMAAxisQuery","title":"SOMA Axis Query — SOMAAxisQuery","text":"Construct single-axis query object combination coordinates /value filters use SOMAExperimentAxisQuery. (lifecycle: maturing) Per dimension, SOMAAxisQuery can value : None (.e., coords = NULL value_filter = NULL) - read values Coordinates - set coordinates axis dataframe index, expressed type format supported SOMADataFrame's read() method. SOMA value_filter across columns axis dataframe, expressed string , combination coordinates value filter.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQuery.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"SOMA Axis Query — SOMAAxisQuery","text":"coords coordinates query. value_filter value filter query.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQuery.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Axis Query — SOMAAxisQuery","text":"SOMAAxisQuery$new() SOMAAxisQuery$clone()","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Axis Query — SOMAAxisQuery","text":"Create new SOMAAxisQuery object.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Axis Query — SOMAAxisQuery","text":"","code":"SOMAAxisQuery$new(value_filter = NULL, coords = NULL)"},{"path":"/reference/SOMAAxisQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Axis Query — SOMAAxisQuery","text":"value_filter Optional string containing logical expression used filter returned values. coords Optional indices specifying rows read: either vector appropriate type named list vectors corresponding dimension.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Axis Query — SOMAAxisQuery","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisQuery.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Axis Query — SOMAAxisQuery","text":"","code":"SOMAAxisQuery$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisQuery.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Axis Query — SOMAAxisQuery","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"Access SOMAExperimentAxisQuery results.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"obs arrow::Table containing obs query slice. var arrow::Table containing var query slice. measurement_name. X_layers named list arrow::Tables X layer.","code":""},{"path":[]},{"path":"/reference/SOMAAxisQueryResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"SOMAAxisQueryResult$new() SOMAAxisQueryResult$clone()","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"Create new SOMAAxisQueryResult object.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"","code":"SOMAAxisQueryResult$new(obs, var, X_layers)"},{"path":"/reference/SOMAAxisQueryResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"obs, var arrow::Table containing obs var query slice. X_layers named list arrow::Tables, one X layer.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAAxisQueryResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"","code":"SOMAAxisQueryResult$clone(deep = FALSE)"},{"path":"/reference/SOMAAxisQueryResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query Result — SOMAAxisQueryResult","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollection.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Collection — SOMACollection","title":"SOMA Collection — SOMACollection","text":"Contains key-value mapping keys string names values SOMA-defined foundational composed type, including SOMACollection, SOMADataFrame, SOMADenseNDArray, SOMASparseNDArray, SOMAExperiment.  (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollection.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Collection — SOMACollection","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> SOMACollection","code":""},{"path":"/reference/SOMACollection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Collection — SOMACollection","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$close() tiledbsoma::TileDBGroup$get_metadata() tiledbsoma::TileDBGroup$length() tiledbsoma::TileDBGroup$names() tiledbsoma::TileDBGroup$open() tiledbsoma::TileDBGroup$print() tiledbsoma::TileDBGroup$remove() tiledbsoma::TileDBGroup$set_metadata() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$initialize() tiledbsoma::SOMACollectionBase$set()","code":""},{"path":"/reference/SOMACollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Collection — SOMACollection","text":"SOMACollection$clone()","code":""},{"path":"/reference/SOMACollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Collection — SOMACollection","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMACollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection — SOMACollection","text":"","code":"SOMACollection$clone(deep = FALSE)"},{"path":"/reference/SOMACollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection — SOMACollection","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollectionBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Collection Base Class — SOMACollectionBase","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Base class objects containing persistent collection SOMA objects, mapping string keys SOMA object.  (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SOMA Collection Base Class — SOMACollectionBase","text":"SOMA object.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Collection Base Class — SOMACollectionBase","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> SOMACollectionBase","code":""},{"path":"/reference/SOMACollectionBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Collection Base Class — SOMACollectionBase","text":"soma_type Retrieve SOMA object type.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Collection Base Class — SOMACollectionBase","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$close() tiledbsoma::TileDBGroup$get_metadata() tiledbsoma::TileDBGroup$length() tiledbsoma::TileDBGroup$names() tiledbsoma::TileDBGroup$open() tiledbsoma::TileDBGroup$print() tiledbsoma::TileDBGroup$remove() tiledbsoma::TileDBGroup$set_metadata() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list()","code":""},{"path":"/reference/SOMACollectionBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Collection Base Class — SOMACollectionBase","text":"SOMACollectionBase$new() SOMACollectionBase$create() SOMACollectionBase$set() SOMACollectionBase$get() SOMACollectionBase$add_new_collection() SOMACollectionBase$add_new_dataframe() SOMACollectionBase$add_new_dense_ndarray() SOMACollectionBase$add_new_sparse_ndarray() SOMACollectionBase$clone()","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Create new SOMACollection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$new(   uri,   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   internal_use_only = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"uri URI TileDB group platform_config Optional storage-engine specific configuration tiledbsoma_ctx optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp internal_use_only Character value signal 'permitted' call, new() considered internal called directly.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA object collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$create(internal_use_only = NULL)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"internal_use_only Character value signal 'permitted' call, create() considered internal called directly.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA object collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$set(object, name = NULL, relative = NULL)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"object SOMA object. name name use object. Defaults object URI's base name. relative optional logical value indicating whether new object's URI relative collection's URI. NULL (default), object's URI assumed relative unless tiledb:// URI.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Retrieve SOMA object name. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$get(name)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"name name object retrieve. mode Mode open ","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-collection-","dir":"Reference","previous_headings":"","what":"Method add_new_collection()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA collection collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_collection(object, key)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"object SOMA collection object. key key added.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-dataframe-","dir":"Reference","previous_headings":"","what":"Method add_new_dataframe()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA dataframe collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_dataframe(   key,   schema,   index_column_names,   domain,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. schema Arrow schema argument passed DataFrame$create() index_column_names Index column names passed DataFrame$create() domain SOMADataFrameCreate. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-dense-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_dense_ndarray()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA DenseNdArray collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_dense_ndarray(   key,   type,   shape,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-add-new-sparse-ndarray-","dir":"Reference","previous_headings":"","what":"Method add_new_sparse_ndarray()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"Add new SOMA SparseNdArray collection. (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$add_new_sparse_ndarray(   key,   type,   shape,   platform_config = NULL )"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"key key added. type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object platform_config platform configuration object platform_config platform configuration object","code":""},{"path":"/reference/SOMACollectionBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Collection Base Class — SOMACollectionBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMACollectionBase.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Collection Base Class — SOMACollectionBase","text":"","code":"SOMACollectionBase$clone(deep = FALSE)"},{"path":"/reference/SOMACollectionBase.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Collection Base Class — SOMACollectionBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMACollectionCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA Collection — SOMACollectionCreate","title":"Create SOMA Collection — SOMACollectionCreate","text":"Factory function create SOMADataFrame writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA Collection — SOMACollectionCreate","text":"","code":"SOMACollectionCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMACollectionCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA Collection — SOMACollectionCreate","text":"uri URI TileDB object ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists “resume”: attempt create new TileDB object; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMACollectionOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Collection — SOMACollectionOpen","title":"Open SOMA Collection — SOMACollectionOpen","text":"Factory function open SOMACollection reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMACollectionOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Collection — SOMACollectionOpen","text":"","code":"SOMACollectionOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMACollectionOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Collection — SOMACollectionOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMAContextBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Base SOMA Context — SOMAContextBase","title":"Base SOMA Context — SOMAContextBase","text":"R6 mapping class SOMA context options. class used basis platform-specific contexts checks SOMA-specific context options","code":""},{"path":"/reference/SOMAContextBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Base SOMA Context — SOMAContextBase","text":"tiledbsoma::MappingBase -> tiledbsoma::ScalarMap -> SOMAContextBase","code":""},{"path":"/reference/SOMAContextBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Base SOMA Context — SOMAContextBase","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/SOMAContextBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Base SOMA Context — SOMAContextBase","text":"SOMAContextBase$new() SOMAContextBase$set() SOMAContextBase$clone()","code":""},{"path":[]},{"path":"/reference/SOMAContextBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$new(config = NULL)"},{"path":"/reference/SOMAContextBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"config ...","code":""},{"path":"/reference/SOMAContextBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Base SOMA Context — SOMAContextBase","text":"virtual class directly instantiated","code":""},{"path":[]},{"path":"/reference/SOMAContextBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$set(key, value)"},{"path":"/reference/SOMAContextBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/SOMAContextBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Base SOMA Context — SOMAContextBase","text":"[chainable] Invisibly returns self value added key","code":""},{"path":"/reference/SOMAContextBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Base SOMA Context — SOMAContextBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAContextBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Base SOMA Context — SOMAContextBase","text":"","code":"SOMAContextBase$clone(deep = FALSE)"},{"path":"/reference/SOMAContextBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base SOMA Context — SOMAContextBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMADataFrame — SOMADataFrame","title":"SOMADataFrame — SOMADataFrame","text":"SOMADataFrame multi-column table must contain column called soma_joinid type int64, contains unique value row intended act join key objects, SOMASparseNDArray.  (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMADataFrame — SOMADataFrame","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBArray -> tiledbsoma::SOMAArrayBase -> SOMADataFrame","code":""},{"path":"/reference/SOMADataFrame.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMADataFrame — SOMADataFrame","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBArray$attributes() tiledbsoma::TileDBArray$attrnames() tiledbsoma::TileDBArray$close() tiledbsoma::TileDBArray$colnames() tiledbsoma::TileDBArray$dimensions() tiledbsoma::TileDBArray$dimnames() tiledbsoma::TileDBArray$get_metadata() tiledbsoma::TileDBArray$index_column_names() tiledbsoma::TileDBArray$ndim() tiledbsoma::TileDBArray$non_empty_domain() tiledbsoma::TileDBArray$open() tiledbsoma::TileDBArray$print() tiledbsoma::TileDBArray$schema() tiledbsoma::TileDBArray$set_metadata() tiledbsoma::TileDBArray$tiledb_array() tiledbsoma::TileDBArray$tiledb_schema()","code":""},{"path":"/reference/SOMADataFrame.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMADataFrame — SOMADataFrame","text":"SOMADataFrame$create() SOMADataFrame$write() SOMADataFrame$read() SOMADataFrame$update() SOMADataFrame$shape() SOMADataFrame$maxshape() SOMADataFrame$domain() SOMADataFrame$maxdomain() SOMADataFrame$tiledbsoma_has_upgraded_domain() SOMADataFrame$tiledbsoma_resize_soma_joinid_shape() SOMADataFrame$tiledbsoma_upgrade_domain() SOMADataFrame$change_domain() SOMADataFrame$clone()","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMADataFrame — SOMADataFrame","text":"Create (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$create(   schema,   index_column_names = c(\"soma_joinid\"),   domain = NULL,   platform_config = NULL,   internal_use_only = NULL )"},{"path":"/reference/SOMADataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"schema arrow::schema. index_column_names vector column names use user-defined index columns.  named columns must exist schema, least one index column name required. domain optional list specifying domain index column. slot list must name name index column, value length-two vector consisting minimum maximum values storable index column. example, single int64-valued index column soma_joinid, domain might list(soma_joinid=c(100, 200)) indicate values 100 200, inclusive, can stored column.  provided, sequence must length index_column_names, index-column domain specified.  omitted entirely, NULL given dimension, corresponding index-column domain use empty range, data writes fail \"range set outside current domain\". Unless particular reason , always provide desired domain create time: optional strongly recommended parameter.  See also change_domain allows expand domain create. platform_config platform configuration object internal_use_only Character value signal 'permitted' call, create() considered internal called directly.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMADataFrame — SOMADataFrame","text":"Write (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$write(values)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"values arrow::Table arrow::RecordBatch containing columns, including index columns. schema values must match schema SOMADataFrame.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMADataFrame — SOMADataFrame","text":"Read (lifecycle: maturing) Read user-defined subset data, addressed dataframe indexing column, optionally filtered.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$read(   coords = NULL,   column_names = NULL,   value_filter = NULL,   result_order = \"auto\",   iterated = FALSE,   log_level = \"auto\" )"},{"path":"/reference/SOMADataFrame.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"coords Optional named list indices specifying rows read; (named) list element corresponds dimension name. column_names Optional character vector column names return. value_filter Optional string containing logical expression used filter returned values. See tiledb::parse_query_condition information. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). iterated Option boolean indicated whether data read call (FALSE, default value) several iterated steps. log_level Optional logging level default value \"warn\".","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"arrow::Table TableReadIter","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"SOMADataFrame — SOMADataFrame","text":"Update (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$update(values, row_index_name = NULL)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"values data.frame, arrow::Table, arrow::RecordBatch. row_index_name optional scalar character. provided, values argument data.frame row names, row names extracted added new column data.frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMADataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMADataFrame — SOMADataFrame","text":"Update existing SOMADataFrame add remove columns based input: columns present current SOMADataFrame absent new values dropped columns absent current SOMADataFrame present new values added columns present left alone, exception values different type column, entire update fail attribute types changed. Furthermore, values must contain number rows current SOMADataFrame.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-shape-","dir":"Reference","previous_headings":"","what":"Method shape()","title":"SOMADataFrame — SOMADataFrame","text":"Retrieve shape; SOMADataFrames shapeless, simply raises error","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$shape()"},{"path":"/reference/SOMADataFrame.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"None, instead .NotYetImplemented() error raised","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-maxshape-","dir":"Reference","previous_headings":"","what":"Method maxshape()","title":"SOMADataFrame — SOMADataFrame","text":"Retrieve maxshape; SOMADataFrames shapeless, simply raises error","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$maxshape()"},{"path":"/reference/SOMADataFrame.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"None, instead .NotYetImplemented() error raised","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-domain-","dir":"Reference","previous_headings":"","what":"Method domain()","title":"SOMADataFrame — SOMADataFrame","text":"Returns named list minimum/maximum pairs, one per index column, currently storable index column dataframe. can resized maxdomain. (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$domain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Named list minimum/maximum values.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-maxdomain-","dir":"Reference","previous_headings":"","what":"Method maxdomain()","title":"SOMADataFrame — SOMADataFrame","text":"Returns named list minimum/maximum pairs, one per index column, limits dataframe can domain resized. (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$maxdomain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Named list minimum/maximum values.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-has-upgraded-domain-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_has_upgraded_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Returns TRUE array upgraded resizeable domain feature TileDB-SOMA 1.15: array created support, upgrade_domain applied . (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_has_upgraded_domain()"},{"path":"/reference/SOMADataFrame.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"Logical","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-resize-soma-joinid-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_resize_soma_joinid_shape()","title":"SOMADataFrame — SOMADataFrame","text":"Increases shape dataframe soma_joinid index column, indeed index column, leaving index columns -. soma_joinid index column, change made.  special case upgrade_domain (WIP 1.15), simpler keystroke, handles common case dataframe domain expansion.  Raises error dataframe already domain: case please call tiledbsoma_upgrade_domain (WIP 1.15).","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_resize_soma_joinid_shape(new_shape)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_shape integer, greater equal 1 + soma_joinid domain slot.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"return value","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-tiledbsoma-upgrade-domain-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_upgrade_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Allows set domain SOMADataFrame, SOMADataFrame domain set yet.  argument must tuple pairs low/high values desired domain, one pair per index column. string index columns, must offer low/high pair (\"\", \"\"), NULL.  check_only True, returns whether operation succeed attempted, reason . domain requested must contained within maxdomain returns.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$tiledbsoma_upgrade_domain(new_domain, check_only = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_domain named list, keyed index-column name, values two-element vectors containing desired lower upper bounds domain. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"return value check_only FALSE. check_only TRUE, returns empty string error detected, else description error.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-change-domain-","dir":"Reference","previous_headings":"","what":"Method change_domain()","title":"SOMADataFrame — SOMADataFrame","text":"Allows set domain SOMADataFrame, SOMADataFrame already domain set yet.  argument must tuple pairs low/high values desired domain, one pair per index column. string index columns, must offer low/high pair (\"\", \"\"), NULL.  check_only True, returns whether operation succeed attempted, reason . return value domain must contained within requested new_domain, requested new_domain must contained within return value maxdomain. (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$change_domain(new_domain, check_only = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"new_domain named list, keyed index-column name, values two-element vectors containing desired lower upper bounds domain. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMADataFrame.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADataFrame — SOMADataFrame","text":"return value check_only FALSE. check_only TRUE, returns empty string error detected, else description error.","code":""},{"path":"/reference/SOMADataFrame.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMADataFrame — SOMADataFrame","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMADataFrame.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADataFrame — SOMADataFrame","text":"","code":"SOMADataFrame$clone(deep = FALSE)"},{"path":"/reference/SOMADataFrame.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADataFrame — SOMADataFrame","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADataFrameCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA DataFrame — SOMADataFrameCreate","title":"Create SOMA DataFrame — SOMADataFrameCreate","text":"Factory function create SOMADataFrame writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrameCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA DataFrame — SOMADataFrameCreate","text":"","code":"SOMADataFrameCreate(   uri,   schema,   index_column_names = c(\"soma_joinid\"),   domain = NULL,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   soma_context = NULL )"},{"path":"/reference/SOMADataFrameCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA DataFrame — SOMADataFrameCreate","text":"uri URI TileDB object schema Arrow schema argument SOMA dataframe index_column_names vector column names use user-defined index columns; named columns must exist schema, least one index column name required domain optional list 2-element vectors specifying domain index column. vector pair consisting minimum maximum values storable index column. example, single int64-valued index column, domain might c(100, 200) indicate values 100 200, inclusive, can stored column.  provided, list must length index_column_names, index-column domain specified.  omitted entirely, NULL given dimension, corresponding index-column domain use minimum maximum possible values column's datatype.  makes DataFrame growable. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists “resume”: attempt create new TileDB object; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMADataFrameOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA DataFrame — SOMADataFrameOpen","title":"Open SOMA DataFrame — SOMADataFrameOpen","text":"Factory function open SOMADataFrame reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMADataFrameOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA DataFrame — SOMADataFrameOpen","text":"","code":"SOMADataFrameOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   soma_context = NULL )"},{"path":"/reference/SOMADataFrameOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA DataFrame — SOMADataFrameOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMADenseNDArray — SOMADenseNDArray","title":"SOMADenseNDArray — SOMADenseNDArray","text":"SOMADenseNDArray dense, N-dimensional array primitive type, offset (zero-based) int64 integer indexing dimension domain [0, maxInt64). SOMADenseNDArray user-defined schema, includes: type: primitive type, expressed Arrow type (e.g., int64, float32, etc), indicating type data contained within array. shape: shape array, .e., number length dimension. soft limit can increased using resize, maxshape. maxshape: hard limit shape may increased using resize. dimensions must positive, non-zero length, must 1 dimensions. default \"fill\" value SOMADenseNDArray zero null value array type (e.g., Arrow.float32 defaults 0.0). write method currently limited writing 2-d matrices. (lifecycle: maturing)","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMADenseNDArray — SOMADenseNDArray","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBArray -> tiledbsoma::SOMAArrayBase -> tiledbsoma::SOMANDArrayBase -> SOMADenseNDArray","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMADenseNDArray — SOMADenseNDArray","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBArray$attributes() tiledbsoma::TileDBArray$attrnames() tiledbsoma::TileDBArray$close() tiledbsoma::TileDBArray$colnames() tiledbsoma::TileDBArray$dimensions() tiledbsoma::TileDBArray$dimnames() tiledbsoma::TileDBArray$get_metadata() tiledbsoma::TileDBArray$index_column_names() tiledbsoma::TileDBArray$maxshape() tiledbsoma::TileDBArray$ndim() tiledbsoma::TileDBArray$non_empty_domain() tiledbsoma::TileDBArray$open() tiledbsoma::TileDBArray$print() tiledbsoma::TileDBArray$schema() tiledbsoma::TileDBArray$set_metadata() tiledbsoma::TileDBArray$shape() tiledbsoma::TileDBArray$tiledb_array() tiledbsoma::TileDBArray$tiledb_schema() tiledbsoma::SOMANDArrayBase$create() tiledbsoma::SOMANDArrayBase$resize() tiledbsoma::SOMANDArrayBase$set_data_type() tiledbsoma::SOMANDArrayBase$tiledbsoma_has_upgraded_shape() tiledbsoma::SOMANDArrayBase$tiledbsoma_upgrade_shape()","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMADenseNDArray — SOMADenseNDArray","text":"SOMADenseNDArray$read_arrow_table() SOMADenseNDArray$read_dense_matrix() SOMADenseNDArray$write() SOMADenseNDArray$clone()","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-read-arrow-table-","dir":"Reference","previous_headings":"","what":"Method read_arrow_table()","title":"SOMADenseNDArray — SOMADenseNDArray","text":"Read 'arrow::Table' (lifecycle: maturing)","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADenseNDArray — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$read_arrow_table(   coords = NULL,   result_order = \"auto\",   log_level = \"auto\" )"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADenseNDArray — SOMADenseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value \"warn\".","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADenseNDArray — SOMADenseNDArray","text":"arrow::Table.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-read-dense-matrix-","dir":"Reference","previous_headings":"","what":"Method read_dense_matrix()","title":"SOMADenseNDArray — SOMADenseNDArray","text":"Read dense matrix (lifecycle: maturing)","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADenseNDArray — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$read_dense_matrix(   coords = NULL,   result_order = \"ROW_MAJOR\",   log_level = \"warn\" )"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADenseNDArray — SOMADenseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value \"warn\".","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMADenseNDArray — SOMADenseNDArray","text":"matrix object","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMADenseNDArray — SOMADenseNDArray","text":"Write matrix data array. (lifecycle: maturing) general write methods higher-dimensional array added.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADenseNDArray — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$write(values, coords = NULL)"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADenseNDArray — SOMADenseNDArray","text":"values matrix. Character dimension names ignored SOMANDArray's use integer indexing. coords list integer vectors, one dimension, length equal number values write. NULL, default, values taken row column names values.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMADenseNDArray — SOMADenseNDArray","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMADenseNDArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMADenseNDArray — SOMADenseNDArray","text":"","code":"SOMADenseNDArray$clone(deep = FALSE)"},{"path":"/reference/SOMADenseNDArray.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMADenseNDArray — SOMADenseNDArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMADenseNDArrayCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA Dense Nd Array — SOMADenseNDArrayCreate","title":"Create SOMA Dense Nd Array — SOMADenseNDArrayCreate","text":"Factory function create SOMADenseNDArray writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA Dense Nd Array — SOMADenseNDArrayCreate","text":"","code":"SOMADenseNDArrayCreate(   uri,   type,   shape,   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMADenseNDArrayCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA Dense Nd Array — SOMADenseNDArrayCreate","text":"uri URI TileDB object type Arrow type defining type element array. shape vector integers defining shape array. platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMADenseNDArrayOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Dense Nd Array — SOMADenseNDArrayOpen","title":"Open SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"Factory function open SOMADenseNDArray reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"","code":"SOMADenseNDArrayOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMADenseNDArrayOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Dense Nd Array — SOMADenseNDArrayOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMAExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Experiment — SOMAExperiment","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment specialized SOMACollection, representing one modes measurement across single collection cells (aka \"multimodal dataset\") pre-defined fields: obs ms (see Active Bindings details). (lifecycle: maturing)","code":""},{"path":"/reference/SOMAExperiment.html","id":"adding-new-objects-to-a-collection","dir":"Reference","previous_headings":"","what":"Adding new objects to a collection","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment class provides number type-specific methods adding new object collection, add_new_sparse_ndarray() add_new_dataframe(). methods create new object add member SOMAExperiment. new object always inherit parent context (see SOMATileDBContext) , default, platform configuration (see PlatformConfig). However, user can override default platform configuration passing custom configuration platform_config argument.","code":""},{"path":"/reference/SOMAExperiment.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Experiment — SOMAExperiment","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> SOMAExperiment","code":""},{"path":"/reference/SOMAExperiment.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Experiment — SOMAExperiment","text":"obs SOMADataFrame containing primary annotations observation axis. contents soma_joinid column define observation index domain, obs_id. observations SOMAExperiment must defined dataframe. ms SOMACollection named SOMAMeasurements.","code":""},{"path":"/reference/SOMAExperiment.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Experiment — SOMAExperiment","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$close() tiledbsoma::TileDBGroup$get_metadata() tiledbsoma::TileDBGroup$length() tiledbsoma::TileDBGroup$names() tiledbsoma::TileDBGroup$open() tiledbsoma::TileDBGroup$print() tiledbsoma::TileDBGroup$remove() tiledbsoma::TileDBGroup$set_metadata() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$initialize() tiledbsoma::SOMACollectionBase$set()","code":""},{"path":"/reference/SOMAExperiment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperiment$axis_query() SOMAExperiment$update_obs() SOMAExperiment$update_var() SOMAExperiment$clone()","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-axis-query-","dir":"Reference","previous_headings":"","what":"Method axis_query()","title":"SOMA Experiment — SOMAExperiment","text":"Subset extract data SOMAMeasurement querying obs/var axes.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$axis_query(measurement_name, obs_query = NULL, var_query = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"measurement_name name measurement query. obs_query, var_query SOMAAxisQuery object obs/var axis.","code":""},{"path":"/reference/SOMAExperiment.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Experiment — SOMAExperiment","text":"SOMAExperimentAxisQuery object.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-update-obs-","dir":"Reference","previous_headings":"","what":"Method update_obs()","title":"SOMA Experiment — SOMAExperiment","text":"Update obs SOMADataFrame add remove columns. See SOMADataFrame$update() details.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$update_obs(values, row_index_name = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"values data.frame, arrow::Table, arrow::RecordBatch. row_index_name optional scalar character. provided, values argument data.frame row names, row names extracted added new column data.frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-update-var-","dir":"Reference","previous_headings":"","what":"Method update_var()","title":"SOMA Experiment — SOMAExperiment","text":"Update var SOMADataFrame add remove columns. See SOMADataFrame$update() details.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$update_var(values, measurement_name, row_index_name = NULL)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"values data.frame, arrow::Table, arrow::RecordBatch. measurement_name name SOMAMeasurement whose var updated. row_index_name optional scalar character. provided, values argument data.frame row names, row names extracted added new column data.frame prior performing update. name new column set value specified row_index_name.","code":""},{"path":"/reference/SOMAExperiment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Experiment — SOMAExperiment","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAExperiment.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Experiment — SOMAExperiment","text":"","code":"SOMAExperiment$clone(deep = FALSE)"},{"path":"/reference/SOMAExperiment.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Experiment — SOMAExperiment","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Perform axis-based query SOMAExperiment. SOMAExperimentAxisQuery allows easy selection extraction data single SOMAMeasurement SOMAExperiment, obs/var (axis) coordinates /value filter. primary use class slicing SOMAExperiment X layers obs var value /coordinates. (lifecycle: maturing)","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"x-layer-support","dir":"Reference","previous_headings":"","what":"X Layer Support","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Slicing SOMASparseNDArray X matrices supported; slicing SOMADenseNDArray supported time.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"result-size","dir":"Reference","previous_headings":"","what":"Result Size","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SOMAExperimentAxisQuery query class assumes can store full result axis dataframe queries memory, provides incremental access underlying X NDArray. Accessors n_obs n_vars codify class.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"experiment parent SOMAExperiment object. indexer SOMAAxisIndexer object. obs_query obs SOMAAxisQuery object. var_query var SOMAAxisQuery object. n_obs number obs axis query results. n_vars number var axis query results. obs_df obs SOMADataFrame object. var_df var SOMADataFrame object specified measurement_name. ms SOMAMeasurement object specified measurement_name.","code":""},{"path":[]},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SOMAExperimentAxisQuery$new() SOMAExperimentAxisQuery$obs() SOMAExperimentAxisQuery$var() SOMAExperimentAxisQuery$obs_joinids() SOMAExperimentAxisQuery$var_joinids() SOMAExperimentAxisQuery$X() SOMAExperimentAxisQuery$obsm() SOMAExperimentAxisQuery$varm() SOMAExperimentAxisQuery$obsp() SOMAExperimentAxisQuery$varp() SOMAExperimentAxisQuery$read() SOMAExperimentAxisQuery$to_sparse_matrix() SOMAExperimentAxisQuery$to_seurat() SOMAExperimentAxisQuery$to_seurat_assay() SOMAExperimentAxisQuery$to_seurat_reduction() SOMAExperimentAxisQuery$to_seurat_graph() SOMAExperimentAxisQuery$to_single_cell_experiment() SOMAExperimentAxisQuery$clone()","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Create new SOMAExperimentAxisQuery object.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$new(   experiment,   measurement_name,   obs_query = NULL,   var_query = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"experiment SOMAExperiment object. measurement_name name measurement query. obs_query, var_query SOMAAxisQuery object obs/var axis.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obs-","dir":"Reference","previous_headings":"","what":"Method obs()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve obs TableReadIter","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obs(column_names = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"column_names character vector column names retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-var-","dir":"Reference","previous_headings":"","what":"Method var()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve var arrow::Table","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$var(column_names = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"column_names character vector column names retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obs-joinids-","dir":"Reference","previous_headings":"","what":"Method obs_joinids()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve soma_joinids arrow::Array obs.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obs_joinids()"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-var-joinids-","dir":"Reference","previous_headings":"","what":"Method var_joinids()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve soma_joinids arrow::Array var.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$var_joinids()"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-x-","dir":"Reference","previous_headings":"","what":"Method X()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves X layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$X(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obsm-","dir":"Reference","previous_headings":"","what":"Method obsm()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves obsm layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obsm(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-varm-","dir":"Reference","previous_headings":"","what":"Method varm()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves varm layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$varm(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-obsp-","dir":"Reference","previous_headings":"","what":"Method obsp()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves obsp layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$obsp(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-varp-","dir":"Reference","previous_headings":"","what":"Method varp()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieves varp layer SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$varp(layer_name)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"layer_name name layer retrieve","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Reads entire query result list arrow::Tables. low-level routine intended used loaders -core formats, Seurat, can created resulting Tables.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$read(   X_layers = NULL,   obs_column_names = NULL,   var_column_names = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers name(s) X layer(s) read return. obs_column_names, var_column_names Specify column names var obs dataframes read return.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method to_sparse_matrix()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Retrieve collection layer sparse matrix named dimensions. Load layer X, obsm, varm, obsp, varp collections sparse matrix. default matrix dimensions named using soma_joinid values specified layer's dimensions (e.g., soma_dim_0). However, dimensions can named using values obs var column uniquely identifies record specifying obs_index var_index arguments. layers obsm varm, column axis (axis indexed “obs” “var”) set range values present “soma_dim_1”; ensures gaps axis preserved (eg. query “obs” results selecting entries zero given PC)","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_sparse_matrix(   collection,   layer_name,   obs_index = NULL,   var_index = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"collection SOMACollection containing layer interest, either: \"X\", \"obsm\", \"varm\", \"obsp\", \"varp\". layer_name Name layer retrieve collection. obs_index, var_index Name column obs var (var_index) containing values used dimension labels resulting matrix. Whether values used row column labels depends selected collection:","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Matrix::sparseMatrix","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-","dir":"Reference","previous_headings":"","what":"Method to_seurat()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat(   X_layers = c(counts = \"counts\", data = \"logcounts\"),   obs_index = NULL,   var_index = NULL,   obs_column_names = NULL,   var_column_names = NULL,   obsm_layers = NULL,   varm_layers = NULL,   obsp_layers = NULL,   drop_levels = FALSE,   version = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers named character X layers add Seurat assay names names Seurat slots values names layers within X; names one : “counts” add layer counts “data” add layer data “scale.data” add layer scale.data obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default obs_column_names Names columns obs add cell-level meta data; default, loads columns var_column_names Names columns var add feature-level meta data; default, loads columns obsm_layers Names arrays obsm add cell embeddings; pass FALSE suppress loading dimensional reductions; default, loads dimensional reduction information varm_layers Named vector arrays varm load feature loadings; names must names arrays obsm (eg. varm_layers = c(X_pca = \"PCs\")); pass FALSE suppress loading feature loadings; try determine varm_layers obsm_layers obsp_layers Names arrays obsp load Graphs; default, loads graphs drop_levels Drop unused levels obs var factor columns version Assay version read query ; default, try infer assay type measurement ","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Seurat object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-assay-","dir":"Reference","previous_headings":"","what":"Method to_seurat_assay()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat Assay","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_assay(   X_layers = c(counts = \"counts\", data = \"logcounts\"),   obs_index = NULL,   var_index = NULL,   var_column_names = NULL,   drop_levels = FALSE,   version = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers named character X layers add Seurat assay names names Seurat slots values names layers within X; names one : “counts” add layer counts “data” add layer data “scale.data” add layer scale.data obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default var_column_names Names columns var add feature-level meta data; default, loads columns drop_levels Drop unused levels var factor columns version Assay version read query ; default, try infer assay type measurement ","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Assay object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-reduction-","dir":"Reference","previous_headings":"","what":"Method to_seurat_reduction()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat dimensional reduction","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_reduction(   obsm_layer,   varm_layer = NULL,   obs_index = NULL,   var_index = NULL )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"obsm_layer Name array obsm load cell embeddings varm_layer Name array varm load feature loadings; default, try determine varm_layer obsm_layer obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"DimReduc object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-seurat-graph-","dir":"Reference","previous_headings":"","what":"Method to_seurat_graph()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query Seurat graph","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_seurat_graph(obsp_layer, obs_index = NULL)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"obsp_layer Name array obsp load graph obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Graph object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-to-single-cell-experiment-","dir":"Reference","previous_headings":"","what":"Method to_single_cell_experiment()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"Loads query SingleCellExperiment object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$to_single_cell_experiment(   X_layers = NULL,   obs_index = NULL,   var_index = NULL,   obs_column_names = NULL,   var_column_names = NULL,   obsm_layers = NULL,   obsp_layers = NULL,   varp_layers = NULL,   drop_levels = FALSE )"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"X_layers character vector X layers add assays main experiment; may optionally named set name resulting assay (eg. X_layers = c(counts = \"raw\") load X layer “raw” assay “counts”); default, loads X layers obs_index Name column obs add cell names; uses paste0(\"cell\", obs_joinids()) default var_index Name column var add feature names; uses paste0(\"feature\", var_joinids()) default obs_column_names Names columns obs add colData; default, loads columns var_column_names Names columns var add rowData; default, loads columns obsm_layers Names arrays obsm add reduced dimensions; pass FALSE suppress loading reduced dimensions; default, loads reduced dimensions obsp_layers Names arrays obsp load SelfHits; default, loads graphs varp_layers Names arrays varp load SelfHits; default, loads networks drop_levels Drop unused levels obs var factor columns","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"SingleCellExperiment object","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"","code":"SOMAExperimentAxisQuery$clone(deep = FALSE)"},{"path":"/reference/SOMAExperimentAxisQuery.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMAExperiment Axis Query — SOMAExperimentAxisQuery","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA Experiment — SOMAExperimentCreate","title":"Create SOMA Experiment — SOMAExperimentCreate","text":"Factory function create SOMADataFrame writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMAExperimentCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA Experiment — SOMAExperimentCreate","text":"","code":"SOMAExperimentCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAExperimentCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA Experiment — SOMAExperimentCreate","text":"uri URI TileDB object ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists “resume”: attempt create new TileDB object; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMAExperimentOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Experiment — SOMAExperimentOpen","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"Factory function open SOMAExperiment reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMAExperimentOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"","code":"SOMAExperimentOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAExperimentOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Experiment — SOMAExperimentOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMAMeasurement.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Measurement — SOMAMeasurement","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement sub-element SOMAExperiment, otherwise specialized SOMACollection pre-defined fields: X, var, obsm/varm, obsp/varp (see Active Bindings details). (lifecycle: maturing)","code":""},{"path":"/reference/SOMAMeasurement.html","id":"adding-new-objects-to-a-collection","dir":"Reference","previous_headings":"","what":"Adding new objects to a collection","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement class provides number type-specific methods adding new object collection, add_new_sparse_ndarray() add_new_dataframe(). methods create new object add member SOMAMeasurement. new object always inherit parent context (see SOMATileDBContext) , default, platform configuration (see PlatformConfig). However, user can override default platform configuration passing custom configuration platform_config argument.","code":""},{"path":"/reference/SOMAMeasurement.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA Measurement — SOMAMeasurement","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBGroup -> tiledbsoma::SOMACollectionBase -> SOMAMeasurement","code":""},{"path":"/reference/SOMAMeasurement.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Measurement — SOMAMeasurement","text":"var SOMADataFrame containing primary annotations variable axis, variables measurement (.e., annotates columns X). contents soma_joinid column define variable index domain, var_id. variables measurement must defined dataframe. X SOMACollection SOMASparseNDArrays, contains measured feature values indexed [obsid, varid]. obsm SOMACollection SOMADenseNDArrays containing annotations observation axis. array indexed obsid shape obs. obsp SOMACollection SOMASparseNDArrays containing pairwise annotations observation axis indexed [obsid_1, obsid_2]. varm SOMACollection SOMADenseNDArrays containing annotations variable axis. array indexed varid shape var. varp SOMACollection SOMASparseNDArrays containing pairwise annotations variable axis indexed [varid_1, varid_2].","code":""},{"path":"/reference/SOMAMeasurement.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Measurement — SOMAMeasurement","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBGroup$close() tiledbsoma::TileDBGroup$get_metadata() tiledbsoma::TileDBGroup$length() tiledbsoma::TileDBGroup$names() tiledbsoma::TileDBGroup$open() tiledbsoma::TileDBGroup$print() tiledbsoma::TileDBGroup$remove() tiledbsoma::TileDBGroup$set_metadata() tiledbsoma::TileDBGroup$to_data_frame() tiledbsoma::TileDBGroup$to_list() tiledbsoma::SOMACollectionBase$add_new_collection() tiledbsoma::SOMACollectionBase$add_new_dataframe() tiledbsoma::SOMACollectionBase$add_new_dense_ndarray() tiledbsoma::SOMACollectionBase$add_new_sparse_ndarray() tiledbsoma::SOMACollectionBase$create() tiledbsoma::SOMACollectionBase$get() tiledbsoma::SOMACollectionBase$initialize() tiledbsoma::SOMACollectionBase$set()","code":""},{"path":"/reference/SOMAMeasurement.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Measurement — SOMAMeasurement","text":"SOMAMeasurement$clone()","code":""},{"path":"/reference/SOMAMeasurement.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Measurement — SOMAMeasurement","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMAMeasurement.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Measurement — SOMAMeasurement","text":"","code":"SOMAMeasurement$clone(deep = FALSE)"},{"path":"/reference/SOMAMeasurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Measurement — SOMAMeasurement","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAMeasurementCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA Measurement — SOMAMeasurementCreate","title":"Create SOMA Measurement — SOMAMeasurementCreate","text":"Factory function create SOMAMeasurement writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMAMeasurementCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA Measurement — SOMAMeasurementCreate","text":"","code":"SOMAMeasurementCreate(   uri,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAMeasurementCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA Measurement — SOMAMeasurementCreate","text":"uri URI TileDB object ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists “resume”: attempt create new TileDB object; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMAMeasurementOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Measurement — SOMAMeasurementOpen","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"Factory function open SOMAMeasurement reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMAMeasurementOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"","code":"SOMAMeasurementOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAMeasurementOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Measurement — SOMAMeasurementOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA NDArray Base Class — SOMANDArrayBase","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Adds NDArray-specific functionality SOMAArrayBase class. (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBArray -> tiledbsoma::SOMAArrayBase -> SOMANDArrayBase","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBArray$attributes() tiledbsoma::TileDBArray$attrnames() tiledbsoma::TileDBArray$close() tiledbsoma::TileDBArray$colnames() tiledbsoma::TileDBArray$dimensions() tiledbsoma::TileDBArray$dimnames() tiledbsoma::TileDBArray$get_metadata() tiledbsoma::TileDBArray$index_column_names() tiledbsoma::TileDBArray$maxshape() tiledbsoma::TileDBArray$ndim() tiledbsoma::TileDBArray$non_empty_domain() tiledbsoma::TileDBArray$open() tiledbsoma::TileDBArray$print() tiledbsoma::TileDBArray$schema() tiledbsoma::TileDBArray$set_metadata() tiledbsoma::TileDBArray$shape() tiledbsoma::TileDBArray$tiledb_array() tiledbsoma::TileDBArray$tiledb_schema()","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"SOMANDArrayBase$create() SOMANDArrayBase$set_data_type() SOMANDArrayBase$tiledbsoma_has_upgraded_shape() SOMANDArrayBase$resize() SOMANDArrayBase$tiledbsoma_upgrade_shape() SOMANDArrayBase$clone()","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Create SOMA NDArray named URI. (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$create(   type,   shape,   platform_config = NULL,   internal_use_only = NULL )"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"type Arrow type defining type element array. shape vector integers defining shape array. platform_config platform configuration object internal_use_only Character value signal 'permitted' call, create() considered internal called directly.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-set-data-type-","dir":"Reference","previous_headings":"","what":"Method set_data_type()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Sets cache value datatype (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$set_data_type(type)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"type character value describing TileDB data type","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-tiledbsoma-has-upgraded-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_has_upgraded_shape()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Returns TRUE array upgraded resizeable shape feature TileDB-SOMA 1.15: array created support, upgrade_domain applied . (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$tiledbsoma_has_upgraded_shape()"},{"path":"/reference/SOMANDArrayBase.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Logical","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-resize-","dir":"Reference","previous_headings":"","what":"Method resize()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Increases shape array specified, hard limit maxshape. Raises error new shape less current shape dimension.  Raises error requested new shape exceeds maxshape dimension. Raises error array already shape: case please call tiledbsoma_upgrade_shape. (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$resize(new_shape, check_only = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"new_shape vector integerish, length array's ndim. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"return value check_only FALSE. check_only TRUE, returns empty string error detected, else description error.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-tiledbsoma-upgrade-shape-","dir":"Reference","previous_headings":"","what":"Method tiledbsoma_upgrade_shape()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"Allows array resizeable shape described TileDB-SOMA 1.15 release notes.  Raises error shape exceeds maxshape dimension. Raises error array already shape. methods tiledbsoma_upgrade_shape resize similar: former must call pre-1.15 array first time shape set ; latter must used subsequent resizes array already upgraded shape. (lifecycle: maturing)","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$tiledbsoma_upgrade_shape(shape, check_only = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"shape vector integerish, length array's ndim. check_only true, apply operation, reports whether succeeded.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"return value check_only FALSE. check_only TRUE, returns empty string error detected, else description error.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMANDArrayBase.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"","code":"SOMANDArrayBase$clone(deep = FALSE)"},{"path":"/reference/SOMANDArrayBase.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA NDArray Base Class — SOMANDArrayBase","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMAOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SOMA Object — SOMAOpen","title":"Open a SOMA Object — SOMAOpen","text":"Utility function open corresponding SOMA Object given URI, (lifecycle: maturing)","code":""},{"path":"/reference/SOMAOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SOMA Object — SOMAOpen","text":"","code":"SOMAOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMAOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SOMA Object — SOMAOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. SOMACollections, accessed members inherit collection opening timestamp, READ mode collection timestamp defaults time opening.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMASparseNDArray — SOMASparseNDArray","title":"SOMASparseNDArray — SOMASparseNDArray","text":"SOMASparseNDArray sparse, N-dimensional array offset (zero-based) integer indexing dimension. SOMASparseNDArray user-defined schema, includes: type: primitive type, expressed Arrow type (e.g., int64, float32, etc), indicating type data contained within array. shape: shape array, .e., number length dimension. soft limit can increased using resize, maxshape. maxshape: hard limit shape may increased using resize. dimensions must positive, non-zero length. Note - TileDB sparse array N int64 dimensions domain [0, maxInt64), single attribute.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"duplicate-writes","dir":"Reference","previous_headings":"","what":"Duplicate writes","title":"SOMASparseNDArray — SOMASparseNDArray","text":"duplicate index values allowed, index values already present object overwritten new index values added. (lifecycle: maturing)","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMASparseNDArray — SOMASparseNDArray","text":"tiledbsoma::TileDBObject -> tiledbsoma::TileDBArray -> tiledbsoma::SOMAArrayBase -> tiledbsoma::SOMANDArrayBase -> SOMASparseNDArray","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMASparseNDArray — SOMASparseNDArray","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen() tiledbsoma::TileDBArray$attributes() tiledbsoma::TileDBArray$attrnames() tiledbsoma::TileDBArray$close() tiledbsoma::TileDBArray$colnames() tiledbsoma::TileDBArray$dimensions() tiledbsoma::TileDBArray$dimnames() tiledbsoma::TileDBArray$get_metadata() tiledbsoma::TileDBArray$index_column_names() tiledbsoma::TileDBArray$maxshape() tiledbsoma::TileDBArray$ndim() tiledbsoma::TileDBArray$non_empty_domain() tiledbsoma::TileDBArray$open() tiledbsoma::TileDBArray$print() tiledbsoma::TileDBArray$schema() tiledbsoma::TileDBArray$set_metadata() tiledbsoma::TileDBArray$shape() tiledbsoma::TileDBArray$tiledb_array() tiledbsoma::TileDBArray$tiledb_schema() tiledbsoma::SOMANDArrayBase$create() tiledbsoma::SOMANDArrayBase$resize() tiledbsoma::SOMANDArrayBase$set_data_type() tiledbsoma::SOMANDArrayBase$tiledbsoma_has_upgraded_shape() tiledbsoma::SOMANDArrayBase$tiledbsoma_upgrade_shape()","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMASparseNDArray — SOMASparseNDArray","text":"SOMASparseNDArray$read() SOMASparseNDArray$write() SOMASparseNDArray$nnz() SOMASparseNDArray$.write_coordinates() SOMASparseNDArray$clone()","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Reads user-defined slice SOMASparseNDArray","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArray — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$read(   coords = NULL,   result_order = \"auto\",   log_level = \"auto\" )"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArray — SOMASparseNDArray","text":"coords Optional list integer vectors, one dimension, length equal number values read. NULL, values read. List elements can named specifying subset dimensions. result_order Optional order read results. can one either \"ROW_MAJOR, \"COL_MAJOR\", \"auto\"` (default). log_level Optional logging level default value \"warn\". iterated Option boolean indicated whether data read call (FALSE, default value) several iterated steps.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArray — SOMASparseNDArray","text":"SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Write matrix-like data array. (lifecycle: maturing)","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArray — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$write(values, bbox = NULL)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArray — SOMASparseNDArray","text":"values matrix-like object coercible TsparseMatrix. Character dimension names ignored SOMANDArray's use integer indexing. bbox vector integers describing upper bounds dimension values. Generally NULL.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Invisibly returns self","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-nnz-","dir":"Reference","previous_headings":"","what":"Method nnz()","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Retrieve number non-zero elements (lifecycle: maturing)","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArray — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$nnz()"},{"path":"/reference/SOMASparseNDArray.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArray — SOMASparseNDArray","text":"scalar number non-zero elements","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-write-coordinates-","dir":"Reference","previous_headings":"","what":"Method .write_coordinates()","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Write COO table array","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArray — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$.write_coordinates(values)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArray — SOMASparseNDArray","text":"values data.frame Arrow::Table data COO format; must named dimension attribute labels array","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArray — SOMASparseNDArray","text":"Invisibly returns self","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMASparseNDArray — SOMASparseNDArray","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMASparseNDArray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArray — SOMASparseNDArray","text":"","code":"SOMASparseNDArray$clone(deep = FALSE)"},{"path":"/reference/SOMASparseNDArray.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArray — SOMASparseNDArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":null,"dir":"Reference","previous_headings":"","what":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Blockwise reader SOMASparseNDArray","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"tiledbsoma::SOMASparseNDArrayReadBase -> SOMASparseNDArrayBlockwiseRead","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"axis axis iterate blockwise fashion","code":""},{"path":[]},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"SOMASparseNDArrayBlockwiseRead$new() SOMASparseNDArrayBlockwiseRead$tables() SOMASparseNDArrayBlockwiseRead$sparse_matrix()","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Create","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$new(   sr,   array,   coords,   axis,   ...,   size,   reindex_disable_on_axis = NA )"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Optional named list integer64 values; must named array$dimnames() axis Axis iterate blockwise manner ... Ignored size size blockwise chunk generate reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-tables-","dir":"Reference","previous_headings":"","what":"Method tables()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Read Arrow::Table","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$tables()"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"blockwise iterator yielding chunks Arrow::Tables","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"method-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method sparse_matrix()","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"Read sparse matrix","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"","code":"SOMASparseNDArrayBlockwiseRead$sparse_matrix(repr = \"T\")"},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"repr Representation sparse matrix return; choose : “T”: returns TsparseMatrix “R”: returns RsparseMatrix “C”: returns CsparseMatrix Note: passing repr “R” “C” available re-indexing enabled axes 0 1, respectively","code":""},{"path":"/reference/SOMASparseNDArrayBlockwiseRead.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Blockwise Sparse ND-Array Reader — SOMASparseNDArrayBlockwiseRead","text":"blockwise iterator yielding chunks sparse matrices","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SOMA Sparse Nd Array — SOMASparseNDArrayCreate","title":"Create SOMA Sparse Nd Array — SOMASparseNDArrayCreate","text":"Factory function create SOMASparseNDArray writing, (lifecycle: maturing)","code":""},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SOMA Sparse Nd Array — SOMASparseNDArrayCreate","text":"","code":"SOMASparseNDArrayCreate(   uri,   type,   shape,   ingest_mode = c(\"write\", \"resume\"),   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMASparseNDArrayCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SOMA Sparse Nd Array — SOMASparseNDArrayCreate","text":"uri URI TileDB object type Arrow type defining type element array. shape vector integers defining shape array. ingest_mode Ingestion mode creating TileDB object; choose : “write”: create new TileDB object error already exists “resume”: attempt create new TileDB object; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/SOMASparseNDArrayOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open SOMA Sparse Nd Array — SOMASparseNDArrayOpen","title":"Open SOMA Sparse Nd Array — SOMASparseNDArrayOpen","text":"Factory function open SOMASparseNDArray reading, (lifecycle: maturing)","code":""},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open SOMA Sparse Nd Array — SOMASparseNDArrayOpen","text":"","code":"SOMASparseNDArrayOpen(   uri,   mode = \"READ\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL )"},{"path":"/reference/SOMASparseNDArrayOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open SOMA Sparse Nd Array — SOMASparseNDArrayOpen","text":"uri URI TileDB object mode One \"READ\" \"WRITE\" platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp. READ mode, defaults current time. non-NULL, members accessed collection object inherit timestamp.","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Intermediate type choose result format reading sparse array","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"tiledbsoma::SOMASparseNDArrayReadBase -> SOMASparseNDArrayRead","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"tiledbsoma::SOMASparseNDArrayReadBase$initialize()","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SOMASparseNDArrayRead$sparse_matrix() SOMASparseNDArrayRead$tables() SOMASparseNDArrayRead$blockwise()","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-sparse-matrix-","dir":"Reference","previous_headings":"","what":"Method sparse_matrix()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read sparse matrix (lifecycle: maturing). Returns iterator Matrix::dgTMatrix-class matrixZeroBasedView .","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$sparse_matrix(zero_based = FALSE)"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"zero_based Logical, TRUE returns iterator matrixZeroBasedView FALSE returns iterator Matrix::dgTMatrix-class.","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SparseReadIter","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-tables-","dir":"Reference","previous_headings":"","what":"Method tables()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read arrow::Table (lifecycle: maturing). Returns iterator arrow::Table.","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$tables()"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"TableReadIter","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"method-blockwise-","dir":"Reference","previous_headings":"","what":"Method blockwise()","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"Read blockwise fashion","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"","code":"SOMASparseNDArrayRead$blockwise(   axis,   ...,   size = NULL,   reindex_disable_on_axis = NA )"},{"path":"/reference/SOMASparseNDArrayRead.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"axis Axis iterate blockwise manner ... Ignored size size blockwise chunk generate reindex_disable_on_axis Additional axes re-indexed; following values may used shorthands common settings: “TRUE”: disable re-indexing axes “NA”: re-index axis, disable re-indexing others “FALSE”: re-index axes, disable re-indexing","code":""},{"path":"/reference/SOMASparseNDArrayRead.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMASparseNDArrayRead — SOMASparseNDArrayRead","text":"SOMASparseNDArrayBlockwiseRead iterated reader","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"Base class SOMA sparse ND-array reads","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"sr SOMA read pointer array underlying SOMASparseNDArray coords iterated coordinates read shape shape underlying array","code":""},{"path":[]},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"SOMASparseNDArrayReadBase$new()","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"Create","code":""},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"","code":"SOMASparseNDArrayReadBase$new(sr, array, coords = NULL)"},{"path":"/reference/SOMASparseNDArrayReadBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Sparse ND-Array Reader Base — SOMASparseNDArrayReadBase","text":"sr SOMA read pointer array Underlying SOMASparseNDArray coords Optional named list integer64 values; must named array$dimnames()","code":""},{"path":"/reference/SOMATileDBContext.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA TileDB Context — SOMATileDBContext","title":"SOMA TileDB Context — SOMATileDBContext","text":"Context map TileDB-backed SOMA objects","code":""},{"path":"/reference/SOMATileDBContext.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledbsoma::MappingBase -> tiledbsoma::ScalarMap -> tiledbsoma::SOMAContextBase -> SOMATileDBContext","code":""},{"path":"/reference/SOMATileDBContext.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/SOMATileDBContext.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA TileDB Context — SOMATileDBContext","text":"SOMATileDBContext$new() SOMATileDBContext$keys() SOMATileDBContext$items() SOMATileDBContext$length() SOMATileDBContext$get() SOMATileDBContext$set() SOMATileDBContext$to_tiledb_context() SOMATileDBContext$context() SOMATileDBContext$clone()","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$new(config = NULL, cached = TRUE)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"config ... cached Force new creation","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"instantiated SOMATileDBContext object","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$keys()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"keys map","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$items()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"Return items map list","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$length()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"number items map","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$get(key, default = quote(expr = ))"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"key Key fetch default Default value fetch key found; defaults NULL","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"value key map, default key found","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$set(key, value)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/SOMATileDBContext.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"[chainable] Invisibly returns self value added key","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$to_tiledb_context()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledb_ctx object, dynamically constructed. useful constructor class.","code":""},{"path":[]},{"path":"/reference/SOMATileDBContext.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$context()"},{"path":"/reference/SOMATileDBContext.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA TileDB Context — SOMATileDBContext","text":"tiledb_ctx object, stored (long-lived) result to_tiledb_context.","code":""},{"path":"/reference/SOMATileDBContext.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA TileDB Context — SOMATileDBContext","text":"objects class cloneable method.","code":""},{"path":"/reference/SOMATileDBContext.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA TileDB Context — SOMATileDBContext","text":"","code":"SOMATileDBContext$clone(deep = FALSE)"},{"path":"/reference/SOMATileDBContext.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA TileDB Context — SOMATileDBContext","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ScalarMap.html","id":null,"dir":"Reference","previous_headings":"","what":"A Mapping Type for Scalars — ScalarMap","title":"A Mapping Type for Scalars — ScalarMap","text":"R6 mapping type limited scalar atomic vector types ; can optionally limited specific atomic vector type (eg. “logical”).","code":""},{"path":"/reference/ScalarMap.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A Mapping Type for Scalars — ScalarMap","text":"tiledbsoma::MappingBase -> ScalarMap","code":""},{"path":"/reference/ScalarMap.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"A Mapping Type for Scalars — ScalarMap","text":"type type ScalarMap limited ","code":""},{"path":"/reference/ScalarMap.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A Mapping Type for Scalars — ScalarMap","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$to_list() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/ScalarMap.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A Mapping Type for Scalars — ScalarMap","text":"ScalarMap$new() ScalarMap$set() ScalarMap$clone()","code":""},{"path":[]},{"path":"/reference/ScalarMap.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$new(type = \"any\")"},{"path":"/reference/ScalarMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"type Limit ScalarMap preset type; choose : “” “numeric” “integer” “character” “logical”","code":""},{"path":"/reference/ScalarMap.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A Mapping Type for Scalars — ScalarMap","text":"instantiated ScalarMap object type set type","code":""},{"path":[]},{"path":"/reference/ScalarMap.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$set(key, value)"},{"path":"/reference/ScalarMap.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"key Key set value Value add key, NULL remove entry key","code":""},{"path":"/reference/ScalarMap.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A Mapping Type for Scalars — ScalarMap","text":"[chainable] Invisibly returns self value added key","code":""},{"path":"/reference/ScalarMap.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A Mapping Type for Scalars — ScalarMap","text":"objects class cloneable method.","code":""},{"path":"/reference/ScalarMap.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A Mapping Type for Scalars — ScalarMap","text":"","code":"ScalarMap$clone(deep = FALSE)"},{"path":"/reference/ScalarMap.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Mapping Type for Scalars — ScalarMap","text":"deep Whether make deep clone.","code":""},{"path":"/reference/SparseReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SparseReadIter — SparseReadIter","title":"SparseReadIter — SparseReadIter","text":"SparseReadIter class allows iteration reads SOMASparseNDArray. Iteration chunks retrieved 0-based Views matrixZeroBasedView Matrix::sparseMatrix.","code":""},{"path":"/reference/SparseReadIter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SparseReadIter — SparseReadIter","text":"tiledbsoma::ReadIter -> SparseReadIter","code":""},{"path":"/reference/SparseReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SparseReadIter — SparseReadIter","text":"tiledbsoma::ReadIter$read_complete() tiledbsoma::ReadIter$read_next()","code":""},{"path":"/reference/SparseReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SparseReadIter — SparseReadIter","text":"SparseReadIter$new() SparseReadIter$concat() SparseReadIter$clone()","code":""},{"path":"/reference/SparseReadIter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"SparseReadIter — SparseReadIter","text":"Create (lifecycle: maturing)","code":""},{"path":"/reference/SparseReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseReadIter — SparseReadIter","text":"","code":"SparseReadIter$new(sr, shape, zero_based = FALSE)"},{"path":"/reference/SparseReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SparseReadIter — SparseReadIter","text":"sr Soma reader pointer shape Shape full matrix zero_based Logical, TRUE make iterator Matrix::dgTMatrix-class otherwise matrixZeroBasedView.","code":""},{"path":"/reference/SparseReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SparseReadIter — SparseReadIter","text":"Concatenate remainder iterator.","code":""},{"path":"/reference/SparseReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseReadIter — SparseReadIter","text":"","code":"SparseReadIter$concat()"},{"path":"/reference/SparseReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SparseReadIter — SparseReadIter","text":"matrixZeroBasedView Matrix::sparseMatrix","code":""},{"path":"/reference/SparseReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SparseReadIter — SparseReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/SparseReadIter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseReadIter — SparseReadIter","text":"","code":"SparseReadIter$clone(deep = FALSE)"},{"path":"/reference/SparseReadIter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SparseReadIter — SparseReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TableReadIter.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Read Iterator over Arrow Table — TableReadIter","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"TableReadIter class allows iteration reads SOMASparseNDArray SOMADataFrame. Iteration chunks retrieved arrow::Table","code":""},{"path":"/reference/TableReadIter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"tiledbsoma::ReadIter -> TableReadIter","code":""},{"path":"/reference/TableReadIter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"tiledbsoma::ReadIter$initialize() tiledbsoma::ReadIter$read_complete() tiledbsoma::ReadIter$read_next()","code":""},{"path":"/reference/TableReadIter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"TableReadIter$concat() TableReadIter$clone()","code":""},{"path":"/reference/TableReadIter.html","id":"method-concat-","dir":"Reference","previous_headings":"","what":"Method concat()","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"Concatenate remainder iterator.","code":""},{"path":"/reference/TableReadIter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"","code":"TableReadIter$concat()"},{"path":"/reference/TableReadIter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"arrow::Table","code":""},{"path":"/reference/TableReadIter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"objects class cloneable method.","code":""},{"path":"/reference/TableReadIter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"","code":"TableReadIter$clone(deep = FALSE)"},{"path":"/reference/TableReadIter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Read Iterator over Arrow Table — TableReadIter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TileDBArray.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDB Array Base Class — TileDBArray","title":"TileDB Array Base Class — TileDBArray","text":"Base class representing individual TileDB array. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TileDB Array Base Class — TileDBArray","text":"tiledbsoma::TileDBObject -> TileDBArray","code":""},{"path":"/reference/TileDBArray.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"TileDB Array Base Class — TileDBArray","text":"object Access underlying TileB object directly (either tiledb::tiledb_array tiledb::tiledb_group).","code":""},{"path":"/reference/TileDBArray.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TileDB Array Base Class — TileDBArray","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen()","code":""},{"path":"/reference/TileDBArray.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDB Array Base Class — TileDBArray","text":"TileDBArray$open() TileDBArray$close() TileDBArray$print() TileDBArray$tiledb_array() TileDBArray$get_metadata() TileDBArray$set_metadata() TileDBArray$schema() TileDBArray$tiledb_schema() TileDBArray$dimensions() TileDBArray$shape() TileDBArray$maxshape() TileDBArray$non_empty_domain() TileDBArray$ndim() TileDBArray$attributes() TileDBArray$dimnames() TileDBArray$attrnames() TileDBArray$colnames() TileDBArray$index_column_names() TileDBArray$clone()","code":""},{"path":"/reference/TileDBArray.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"TileDB Array Base Class — TileDBArray","text":"Open SOMA object read write.","code":""},{"path":"/reference/TileDBArray.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$open(mode = c(\"READ\", \"WRITE\"), internal_use_only = NULL)"},{"path":"/reference/TileDBArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"mode Mode open ; defaults READ. internal_use_only Character value signal 'permitted' call, open() considered internal called directly.","code":""},{"path":"/reference/TileDBArray.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"object, invisibly","code":""},{"path":"/reference/TileDBArray.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"TileDB Array Base Class — TileDBArray","text":"Close SOMA object.","code":""},{"path":"/reference/TileDBArray.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$close()"},{"path":"/reference/TileDBArray.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"object, invisibly","code":""},{"path":"/reference/TileDBArray.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"TileDB Array Base Class — TileDBArray","text":"Print summary array. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$print()"},{"path":"/reference/TileDBArray.html","id":"method-tiledb-array-","dir":"Reference","previous_headings":"","what":"Method tiledb_array()","title":"TileDB Array Base Class — TileDBArray","text":"Return TileDBArray object (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$tiledb_array(...)"},{"path":"/reference/TileDBArray.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"... Optional arguments pass tiledb::tiledb_array()","code":""},{"path":"/reference/TileDBArray.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"tiledb::tiledb_array object.","code":""},{"path":"/reference/TileDBArray.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve metadata TileDB array. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$get_metadata(key = NULL)"},{"path":"/reference/TileDBArray.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"key name metadata attribute retrieve.","code":""},{"path":"/reference/TileDBArray.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"list metadata values.","code":""},{"path":"/reference/TileDBArray.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"TileDB Array Base Class — TileDBArray","text":"Add list metadata specified TileDB array. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$set_metadata(metadata)"},{"path":"/reference/TileDBArray.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"metadata Named list metadata add.","code":""},{"path":"/reference/TileDBArray.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"NULL","code":""},{"path":"/reference/TileDBArray.html","id":"method-schema-","dir":"Reference","previous_headings":"","what":"Method schema()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve array schema Arrow schema (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$schema()"},{"path":"/reference/TileDBArray.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"arrow::schema object","code":""},{"path":"/reference/TileDBArray.html","id":"method-tiledb-schema-","dir":"Reference","previous_headings":"","what":"Method tiledb_schema()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve array schema TileDB schema (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$tiledb_schema()"},{"path":"/reference/TileDBArray.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"tiledb::tiledb_array_schema object","code":""},{"path":"/reference/TileDBArray.html","id":"method-dimensions-","dir":"Reference","previous_headings":"","what":"Method dimensions()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve array dimensions (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$dimensions()"},{"path":"/reference/TileDBArray.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"named list tiledb::tiledb_dim objects","code":""},{"path":"/reference/TileDBArray.html","id":"method-shape-","dir":"Reference","previous_headings":"","what":"Method shape()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve shape, .e. capacity dimension. Attempted reads writes outside shape result runtime error: purpose shape.  necessarily match bounds occupied cells within array. Using resize, may increased hard limit maxshape reports. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$shape()"},{"path":"/reference/TileDBArray.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"named vector dimension length (type dimension)","code":""},{"path":"/reference/TileDBArray.html","id":"method-maxshape-","dir":"Reference","previous_headings":"","what":"Method maxshape()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve hard limit array may resized using resize method. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$maxshape()"},{"path":"/reference/TileDBArray.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"named vector dimension length (type dimension)","code":""},{"path":"/reference/TileDBArray.html","id":"method-non-empty-domain-","dir":"Reference","previous_headings":"","what":"Method non_empty_domain()","title":"TileDB Array Base Class — TileDBArray","text":"Returns named list minimum/maximum pairs, one per index column, smallest largest values written index column.","code":""},{"path":"/reference/TileDBArray.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$non_empty_domain(index1 = FALSE, max_only = FALSE)"},{"path":"/reference/TileDBArray.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"index1 Return non-empty domain 1-based indices. max_only Return max value per dimension, return vector. Names dropped. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"Named list minimum/maximum values, integer vector maximum values.","code":""},{"path":"/reference/TileDBArray.html","id":"method-ndim-","dir":"Reference","previous_headings":"","what":"Method ndim()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve number dimensions (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$ndim()"},{"path":"/reference/TileDBArray.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"scalar number dimensions","code":""},{"path":"/reference/TileDBArray.html","id":"method-attributes-","dir":"Reference","previous_headings":"","what":"Method attributes()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve array attributes (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$attributes()"},{"path":"/reference/TileDBArray.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"list tiledb::tiledb_attr objects","code":""},{"path":"/reference/TileDBArray.html","id":"method-dimnames-","dir":"Reference","previous_headings":"","what":"Method dimnames()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve dimension names (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$dimnames()"},{"path":"/reference/TileDBArray.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"character vector array's dimension names","code":""},{"path":"/reference/TileDBArray.html","id":"method-attrnames-","dir":"Reference","previous_headings":"","what":"Method attrnames()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve attribute names (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$attrnames()"},{"path":"/reference/TileDBArray.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"character vector array's attribute names","code":""},{"path":"/reference/TileDBArray.html","id":"method-colnames-","dir":"Reference","previous_headings":"","what":"Method colnames()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve names columns, including dimensions attributes (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$colnames()"},{"path":"/reference/TileDBArray.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"character vector array's column names","code":""},{"path":"/reference/TileDBArray.html","id":"method-index-column-names-","dir":"Reference","previous_headings":"","what":"Method index_column_names()","title":"TileDB Array Base Class — TileDBArray","text":"Retrieve names index (dimension) columns (lifecycle: maturing)","code":""},{"path":"/reference/TileDBArray.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$index_column_names()"},{"path":"/reference/TileDBArray.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Array Base Class — TileDBArray","text":"character vector array index (dimension) names","code":""},{"path":"/reference/TileDBArray.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDB Array Base Class — TileDBArray","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBArray.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Array Base Class — TileDBArray","text":"","code":"TileDBArray$clone(deep = FALSE)"},{"path":"/reference/TileDBArray.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Array Base Class — TileDBArray","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDBCreateOptions — TileDBCreateOptions","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Provides strongly-typed access default values platform_config options stored “tiledb” \\(\\rightarrow\\) “create” mapping keys. Intended internal use .","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TileDBCreateOptions — TileDBCreateOptions","text":"tiledbsoma::MappingBase -> TileDBCreateOptions","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TileDBCreateOptions — TileDBCreateOptions","text":"tiledbsoma::MappingBase$get() tiledbsoma::MappingBase$items() tiledbsoma::MappingBase$keys() tiledbsoma::MappingBase$length() tiledbsoma::MappingBase$print() tiledbsoma::MappingBase$remove() tiledbsoma::MappingBase$set() tiledbsoma::MappingBase$setv() tiledbsoma::MappingBase$update() tiledbsoma::MappingBase$values()","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDBCreateOptions — TileDBCreateOptions","text":"TileDBCreateOptions$new() TileDBCreateOptions$cell_tile_orders() TileDBCreateOptions$dim_tile() TileDBCreateOptions$capacity() TileDBCreateOptions$allows_duplicates() TileDBCreateOptions$dataframe_dim_zstd_level() TileDBCreateOptions$sparse_nd_array_dim_zstd_level() TileDBCreateOptions$dense_nd_array_dim_zstd_level() TileDBCreateOptions$offsets_filters() TileDBCreateOptions$validity_filters() TileDBCreateOptions$dim_filters() TileDBCreateOptions$attr_filters() TileDBCreateOptions$write_X_chunked() TileDBCreateOptions$goal_chunk_nnz() TileDBCreateOptions$to_list() TileDBCreateOptions$clone()","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Create TileDBCreateOptions object","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$new(platform_config = NULL)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"platform_config platform configuration object","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-cell-tile-orders-","dir":"Reference","previous_headings":"","what":"Method cell_tile_orders()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"Returns cell tile orders used. neither cell_order tile_order present, case use default values provided.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$cell_tile_orders()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"two-length character vector names “cell_order” “tile_order”","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dim_tile(dim_name, default = 2048)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"dim_name Name dimension get tiling default Default tiling dim_name set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"cfg <- PlatformConfig$new() cfg$set(   platform = 'tiledb',   param = 'create',   key = 'dims',   value = list(soma_dim_0 = list(tile = 999)) ) (tdco <- TileDBCreateOptions$new(cfg)) tdco$dim_tile(\"soma_dim_0\") tdco$dim_tile(\"soma_dim_1\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$capacity()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$allows_duplicates()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"bool","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dataframe_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$sparse_nd_array_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dense_nd_array_dim_zstd_level()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$offsets_filters(default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"default Default offset filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$validity_filters(default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"default Default validity filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$dim_filters(dim_name, default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"dim_name Name dimension get filters default Default filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"filters <- list(   soma_dim_0 = list(tile = 100, filters = list(\"RLE\")),   soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) tdco$dim_filters(\"soma_dim_0\") tdco$dim_filters(\"non-existant\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$attr_filters(attr_name, default = list())"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"attr_name Name attribute default Default filters use currently set","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"list tiledb_filter objects","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"filters <- list(   soma_data_a = list(filters = list(\"RLE\")),   soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) tdco$attr_filters(\"soma_data_b\") tdco$attr_filters(\"non-existant\")"},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$write_X_chunked()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"bool","code":""},{"path":[]},{"path":"/reference/TileDBCreateOptions.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$goal_chunk_nnz()"},{"path":"/reference/TileDBCreateOptions.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"int","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-to-list-","dir":"Reference","previous_headings":"","what":"Method to_list()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"...","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$to_list(build_filters = TRUE)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"build_filters Build filters tiledb_filter objects. set FALSE, JSON strings created instead filter objects.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDBCreateOptions — TileDBCreateOptions","text":"'create options' list","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDBCreateOptions — TileDBCreateOptions","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"TileDBCreateOptions$clone(deep = FALSE)"},{"path":"/reference/TileDBCreateOptions.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDBCreateOptions — TileDBCreateOptions","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TileDBCreateOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TileDBCreateOptions — TileDBCreateOptions","text":"","code":"## ------------------------------------------------ ## Method `TileDBCreateOptions$dim_tile` ## ------------------------------------------------  cfg <- PlatformConfig$new() cfg$set(   platform = 'tiledb',   param = 'create',   key = 'dims',   value = list(soma_dim_0 = list(tile = 999)) ) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   dims: list(soma_dim_0 = list(tile = 999)) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$dim_tile(\"soma_dim_0\") #> [1] 999 tdco$dim_tile(\"soma_dim_1\") #> [1] 2048   ## ------------------------------------------------ ## Method `TileDBCreateOptions$dim_filters` ## ------------------------------------------------  filters <- list(   soma_dim_0 = list(tile = 100, filters = list(\"RLE\")),   soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'dims', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   dims: list(soma_dim_0 = list(tile = 100, filters = list(\"RLE\")), soma_dim_1 = list(tile = 200, filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9)))) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$dim_filters(\"soma_dim_0\") #> [[1]] #> tiledb_filter_set_option(tiledb_filter(\"RLE\"),\"COMPRESSION_LEVEL\",-1)  #>  tdco$dim_filters(\"non-existant\") #> list()   ## ------------------------------------------------ ## Method `TileDBCreateOptions$attr_filters` ## ------------------------------------------------  filters <- list(   soma_data_a = list(filters = list(\"RLE\")),   soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9))) ) cfg <- PlatformConfig$new() cfg$set(platform = 'tiledb', param = 'create', key = 'attrs', value = filters) (tdco <- TileDBCreateOptions$new(cfg)) #> <TileDBCreateOptions> #>   attrs: list(soma_data_a = list(filters = list(\"RLE\")), soma_data_b = list(filters = list(\"RLE\", list(name = \"ZSTD\", COMPRESSION_LEVEL = 9)))) #>   tile_order: ROW_MAJOR #>   cell_order: ROW_MAJOR #>   capacity: 1e+05 #>   allows_duplicates: FALSE #>   dataframe_dim_zstd_level: 3 #>   sparse_nd_array_dim_zstd_level: 3 #>   dense_nd_array_dim_zstd_level: 3 #>   offsets_filters: list(\"DOUBLE_DELTA\", \"BIT_WIDTH_REDUCTION\", \"ZSTD\") #>   write_X_chunked: TRUE #>   goal_chunk_nnz: 2e+08 tdco$attr_filters(\"soma_data_b\") #> [[1]] #> tiledb_filter_set_option(tiledb_filter(\"RLE\"),\"COMPRESSION_LEVEL\",-1)  #>  #> [[2]] #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",9)  #>  tdco$attr_filters(\"non-existant\") #> list()"},{"path":"/reference/TileDBGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDB Group Base Class — TileDBGroup","title":"TileDB Group Base Class — TileDBGroup","text":"Base class interacting TileDB groups (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TileDB Group Base Class — TileDBGroup","text":"TileDBArray TileDBGroup.","code":""},{"path":"/reference/TileDBGroup.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TileDB Group Base Class — TileDBGroup","text":"tiledbsoma::TileDBObject -> TileDBGroup","code":""},{"path":"/reference/TileDBGroup.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TileDB Group Base Class — TileDBGroup","text":"tiledbsoma::TileDBObject$class() tiledbsoma::TileDBObject$exists() tiledbsoma::TileDBObject$initialize() tiledbsoma::TileDBObject$is_open() tiledbsoma::TileDBObject$mode() tiledbsoma::TileDBObject$reopen()","code":""},{"path":"/reference/TileDBGroup.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDB Group Base Class — TileDBGroup","text":"TileDBGroup$print() TileDBGroup$create() TileDBGroup$open() TileDBGroup$close() TileDBGroup$set() TileDBGroup$get() TileDBGroup$remove() TileDBGroup$length() TileDBGroup$names() TileDBGroup$to_list() TileDBGroup$to_data_frame() TileDBGroup$get_metadata() TileDBGroup$set_metadata() TileDBGroup$clone()","code":""},{"path":"/reference/TileDBGroup.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"TileDB Group Base Class — TileDBGroup","text":"Print summary group. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$print()"},{"path":"/reference/TileDBGroup.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"TileDB Group Base Class — TileDBGroup","text":"Creates data structure disk/S3/cloud. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$create(internal_use_only = NULL)"},{"path":"/reference/TileDBGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"internal_use_only Character value signal 'permitted' call, create() considered internal called directly.","code":""},{"path":"/reference/TileDBGroup.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"TileDB Group Base Class — TileDBGroup","text":"Open SOMA object read write.","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$open(mode = c(\"READ\", \"WRITE\"), internal_use_only = NULL)"},{"path":"/reference/TileDBGroup.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"mode Mode open ; defaults READ. internal_use_only Character value signal 'permitted' call, open() considered internal called directly.","code":""},{"path":"/reference/TileDBGroup.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"object, invisibly","code":""},{"path":"/reference/TileDBGroup.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"TileDB Group Base Class — TileDBGroup","text":"Close SOMA object.","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$close()"},{"path":"/reference/TileDBGroup.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"object, invisibly","code":""},{"path":"/reference/TileDBGroup.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"TileDB Group Base Class — TileDBGroup","text":"Add new member group. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$set(object, name = NULL, relative = NULL)"},{"path":"/reference/TileDBGroup.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"object TileDBArray TileDBGroup object add. name Name use member. default base name object's URI used. relative optional logical value indicating whether new object's URI relative group's URI. NULL (default), object's URI assumed relative unless tiledb:// URI.","code":""},{"path":"/reference/TileDBGroup.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"TileDB Group Base Class — TileDBGroup","text":"Retrieve group member name. member already open, opened mode parent. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$get(name)"},{"path":"/reference/TileDBGroup.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"name name member. mode Mode open ","code":""},{"path":"/reference/TileDBGroup.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"TileDB Group Base Class — TileDBGroup","text":"Remove member. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$remove(name)"},{"path":"/reference/TileDBGroup.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"name Name member remove.","code":""},{"path":"/reference/TileDBGroup.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"TileDB Group Base Class — TileDBGroup","text":"Length number members. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$length()"},{"path":"/reference/TileDBGroup.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"Scalar integer","code":""},{"path":"/reference/TileDBGroup.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"TileDB Group Base Class — TileDBGroup","text":"Retrieve names members. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$names()"},{"path":"/reference/TileDBGroup.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"character vector member names.","code":""},{"path":"/reference/TileDBGroup.html","id":"method-to-list-","dir":"Reference","previous_headings":"","what":"Method to_list()","title":"TileDB Group Base Class — TileDBGroup","text":"Retrieve list members. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$to_list()"},{"path":"/reference/TileDBGroup.html","id":"method-to-data-frame-","dir":"Reference","previous_headings":"","what":"Method to_data_frame()","title":"TileDB Group Base Class — TileDBGroup","text":"Retrieve data.frame members. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$to_data_frame()"},{"path":"/reference/TileDBGroup.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"TileDB Group Base Class — TileDBGroup","text":"Retrieve metadata. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$get_metadata(key = NULL)"},{"path":"/reference/TileDBGroup.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"key name metadata attribute retrieve. NULL.","code":""},{"path":"/reference/TileDBGroup.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"list metadata values.","code":""},{"path":"/reference/TileDBGroup.html","id":"method-set-metadata-","dir":"Reference","previous_headings":"","what":"Method set_metadata()","title":"TileDB Group Base Class — TileDBGroup","text":"Add list metadata. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$set_metadata(metadata)"},{"path":"/reference/TileDBGroup.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"metadata Named list metadata add.","code":""},{"path":"/reference/TileDBGroup.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Group Base Class — TileDBGroup","text":"NULL","code":""},{"path":"/reference/TileDBGroup.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDB Group Base Class — TileDBGroup","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBGroup.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Group Base Class — TileDBGroup","text":"","code":"TileDBGroup$clone(deep = FALSE)"},{"path":"/reference/TileDBGroup.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Group Base Class — TileDBGroup","text":"deep Whether make deep clone.","code":""},{"path":"/reference/TileDBObject.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDB Object Base Class — TileDBObject","title":"TileDB Object Base Class — TileDBObject","text":"Base class implement shared functionality across TileDBArray TileDBGroup classes. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBObject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"TileDB Object Base Class — TileDBObject","text":"platform_config Platform configuration tiledbsoma_ctx SOMATileDBContext tiledb_timestamp Time object opened uri URI TileDB object. .tiledb_timestamp_range Time range libtiledbsoma","code":""},{"path":[]},{"path":"/reference/TileDBObject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TileDB Object Base Class — TileDBObject","text":"TileDBObject$new() TileDBObject$class() TileDBObject$is_open() TileDBObject$mode() TileDBObject$reopen() TileDBObject$print() TileDBObject$exists() TileDBObject$clone()","code":""},{"path":"/reference/TileDBObject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TileDB Object Base Class — TileDBObject","text":"Create new TileDB object. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBObject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$new(   uri,   platform_config = NULL,   tiledbsoma_ctx = NULL,   tiledb_timestamp = NULL,   internal_use_only = NULL,   soma_context = NULL )"},{"path":"/reference/TileDBObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Object Base Class — TileDBObject","text":"uri URI TileDB object platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp internal_use_only Character value signal 'permitted' call, new() considered internal called directly.","code":""},{"path":"/reference/TileDBObject.html","id":"method-class-","dir":"Reference","previous_headings":"","what":"Method class()","title":"TileDB Object Base Class — TileDBObject","text":"Print name R6 class.","code":""},{"path":"/reference/TileDBObject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$class()"},{"path":"/reference/TileDBObject.html","id":"method-is-open-","dir":"Reference","previous_headings":"","what":"Method is_open()","title":"TileDB Object Base Class — TileDBObject","text":"Determine object open reading writing","code":""},{"path":"/reference/TileDBObject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$is_open()"},{"path":"/reference/TileDBObject.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Object Base Class — TileDBObject","text":"TRUE object open, otherwise FALSE","code":""},{"path":"/reference/TileDBObject.html","id":"method-mode-","dir":"Reference","previous_headings":"","what":"Method mode()","title":"TileDB Object Base Class — TileDBObject","text":"Get mode object","code":""},{"path":"/reference/TileDBObject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$mode()"},{"path":"/reference/TileDBObject.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Object Base Class — TileDBObject","text":"object closed, returns “CLOSED”; otherwise returns mode (eg. “READ”) object","code":""},{"path":"/reference/TileDBObject.html","id":"method-reopen-","dir":"Reference","previous_headings":"","what":"Method reopen()","title":"TileDB Object Base Class — TileDBObject","text":"Close reopen TileDB object new mode","code":""},{"path":"/reference/TileDBObject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$reopen(mode, tiledb_timestamp = NULL)"},{"path":"/reference/TileDBObject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Object Base Class — TileDBObject","text":"mode New mode open object ; choose : “READ” “WRITE” tiledb_timestamp Optional Datetime (POSIXct) TileDB timestamp","code":""},{"path":"/reference/TileDBObject.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Object Base Class — TileDBObject","text":"Invisibly returns self opened mode","code":""},{"path":"/reference/TileDBObject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"TileDB Object Base Class — TileDBObject","text":"Print-friendly representation object.","code":""},{"path":"/reference/TileDBObject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$print()"},{"path":"/reference/TileDBObject.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"TileDB Object Base Class — TileDBObject","text":"Check object exists. (lifecycle: maturing)","code":""},{"path":"/reference/TileDBObject.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$exists()"},{"path":"/reference/TileDBObject.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TileDB Object Base Class — TileDBObject","text":"TRUE`` object exists, FALSE` otherwise.","code":""},{"path":"/reference/TileDBObject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TileDB Object Base Class — TileDBObject","text":"objects class cloneable method.","code":""},{"path":"/reference/TileDBObject.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB Object Base Class — TileDBObject","text":"","code":"TileDBObject$clone(deep = FALSE)"},{"path":"/reference/TileDBObject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TileDB Object Base Class — TileDBObject","text":"deep Whether make deep clone.","code":""},{"path":"/reference/delete_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete metadata for given key — delete_metadata","title":"Delete metadata for given key — delete_metadata","text":"Delete metadata given key","code":""},{"path":"/reference/delete_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete metadata for given key — delete_metadata","text":"","code":"delete_metadata(uri, key, is_array, ctxxp)"},{"path":"/reference/delete_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete metadata for given key — delete_metadata","text":"uri array URI key array metadata key is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper","code":""},{"path":"/reference/example-datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"SOMA Example Datasets — example-datasets","title":"SOMA Example Datasets — example-datasets","text":"Access example SOMA objects bundled tiledbsoma package. Use list_datasets() list available datasets load_dataset() load dataset memory using appropriate SOMA class. extract_dataset() method returns path extracted dataset without loading memory.","code":""},{"path":"/reference/example-datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOMA Example Datasets — example-datasets","text":"","code":"list_datasets()  extract_dataset(name, dir = tempdir())  load_dataset(name, dir = tempdir(), tiledbsoma_ctx = NULL)"},{"path":"/reference/example-datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOMA Example Datasets — example-datasets","text":"name name dataset. dir directory dataset extracted (default: tempdir()). tiledbsoma_ctx Optional TileDB ‘Context’ object, defaults NULL","code":""},{"path":"/reference/example-datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SOMA Example Datasets — example-datasets","text":"list_datasets() returns character vector available datasets. extract_dataset() returns path extracted dataset. load_dataset() returns SOMA object.","code":""},{"path":"/reference/example-datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOMA Example Datasets — example-datasets","text":"SOMA objects stored tar.gz files package's extdata directory. Calling load_dataset() extracts tar.gz file specified dir, inspects metadata determine appropriate SOMA class instantiate, returns SOMA object.","code":""},{"path":"/reference/example-datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOMA Example Datasets — example-datasets","text":"","code":"soma_pbmc_small <- load_dataset(\"soma-exp-pbmc-small\")"},{"path":"/reference/get_all_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata (as named list) — get_all_metadata","title":"Read all metadata (as named list) — get_all_metadata","text":"function currently supports metadata either string 'int64' ('int32'). error different datatype encountered.","code":""},{"path":"/reference/get_all_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata (as named list) — get_all_metadata","text":"","code":"get_all_metadata(uri, is_array, ctxxp)"},{"path":"/reference/get_all_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata (as named list) — get_all_metadata","text":"uri array URI is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper","code":""},{"path":"/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata (as a string) — get_metadata","title":"Read metadata (as a string) — get_metadata","text":"Read metadata (string)","code":""},{"path":"/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata (as a string) — get_metadata","text":"","code":"get_metadata(uri, key, is_array, ctxxp)"},{"path":"/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata (as a string) — get_metadata","text":"uri array URI key array metadata key is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper","code":""},{"path":"/reference/get_metadata_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nnumber of metadata items — get_metadata_num","title":"Get nnumber of metadata items — get_metadata_num","text":"Get nnumber metadata items","code":""},{"path":"/reference/get_metadata_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nnumber of metadata items — get_metadata_num","text":"","code":"get_metadata_num(uri, is_array, ctxxp)"},{"path":"/reference/get_metadata_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nnumber of metadata items — get_metadata_num","text":"uri array URI is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper","code":""},{"path":"/reference/has_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for metadata given key — has_metadata","title":"Check for metadata given key — has_metadata","text":"Check metadata given key","code":""},{"path":"/reference/has_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for metadata given key — has_metadata","text":"","code":"has_metadata(uri, key, is_array, ctxxp)"},{"path":"/reference/has_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for metadata given key — has_metadata","text":"uri array URI key array metadata key is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper","code":""},{"path":"/reference/matrixZeroBasedView.html","id":null,"dir":"Reference","previous_headings":"","what":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"matrixZeroBasedView class allows elemental matrix access using zero-based indeces.","code":""},{"path":[]},{"path":"/reference/matrixZeroBasedView.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"matrixZeroBasedView$new() matrixZeroBasedView$take() matrixZeroBasedView$dim() matrixZeroBasedView$nrow() matrixZeroBasedView$ncol() matrixZeroBasedView$get_one_based_matrix() matrixZeroBasedView$sum() matrixZeroBasedView$print() matrixZeroBasedView$clone()","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Initialize (lifecycle: maturing)","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$new(x)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"x matrix Matrix::sparseMatrix Matrix::Matrix","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-take-","dir":"Reference","previous_headings":"","what":"Method take()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Zero-based matrix element access","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$take(i = NULL, j = NULL)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Row index (zero-based). j Column index (zero-based).","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"specified matrix slice another matrixZeroBasedView","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-dim-","dir":"Reference","previous_headings":"","what":"Method dim()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"dim","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$dim()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"dimensions matrix.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-nrow-","dir":"Reference","previous_headings":"","what":"Method nrow()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"nrow","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$nrow()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Matrix row count.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-ncol-","dir":"Reference","previous_headings":"","what":"Method ncol()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"ncol","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$ncol()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Matrix column count.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-get-one-based-matrix-","dir":"Reference","previous_headings":"","what":"Method get_one_based_matrix()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Get one-based R matrix original class","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$get_one_based_matrix()"},{"path":"/reference/matrixZeroBasedView.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"One-based matrix","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-sum-","dir":"Reference","previous_headings":"","what":"Method sum()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"Perform arithmetic sum matrixZeroBasedView another matrixZeroBasedView.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$sum(x)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"x matrixZeroBasedView sum.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"result sum matrixZeroBasedView.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"print","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$print()"},{"path":"/reference/matrixZeroBasedView.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"objects class cloneable method.","code":""},{"path":"/reference/matrixZeroBasedView.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"","code":"matrixZeroBasedView$clone(deep = FALSE)"},{"path":"/reference/matrixZeroBasedView.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"matrixZeroBasedView is a wrapper shim for a matrix or Matrix::sparseMatrix providing — matrixZeroBasedView","text":"deep Whether make deep clone.","code":""},{"path":"/reference/r_type_from_arrow_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the R Type from an Arrow Type — r_type_from_arrow_type","title":"Get the R Type from an Arrow Type — r_type_from_arrow_type","text":"Get R type Arrow type. function equivalent typeof() rather mode() class(), returns equivalent type. example, equivalent R type Arrow dictionary “integer”, “factor”; likewise, equivalent R type Arrow 64-bit integer “double”","code":""},{"path":"/reference/r_type_from_arrow_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the R Type from an Arrow Type — r_type_from_arrow_type","text":"","code":"r_type_from_arrow_type(x)  # S3 method for class 'Schema' r_type_from_arrow_type(x)  # S3 method for class 'Field' r_type_from_arrow_type(x)  # S3 method for class 'DataType' r_type_from_arrow_type(x)"},{"path":"/reference/r_type_from_arrow_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the R Type from an Arrow Type — r_type_from_arrow_type","text":"x Arrow schema, field, data type","code":""},{"path":"/reference/r_type_from_arrow_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the R Type from an Arrow Type — r_type_from_arrow_type","text":"x data type, single character value giving R type x; corresponding R type, returns Arrow type name x field, single named character vector name field name value R type x schema, named vector names field names values R types field","code":""},{"path":[]},{"path":"/reference/set_log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the logging level for the R package and underlying C++ library — set_log_level","title":"Set the logging level for the R package and underlying C++ library — set_log_level","text":"Set logging level R package underlying C++ library","code":""},{"path":"/reference/set_log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the logging level for the R package and underlying C++ library — set_log_level","text":"","code":"set_log_level(level)"},{"path":"/reference/set_log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the logging level for the R package and underlying C++ library — set_log_level","text":"level character value logging level understood ‘spdlog’ “trace”, “debug”, “info”, “warn”.","code":""},{"path":"/reference/set_log_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the logging level for the R package and underlying C++ library — set_log_level","text":"Nothing returned function invoked side-effect.","code":""},{"path":"/reference/set_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Set metadata (as a string) — set_metadata","title":"Set metadata (as a string) — set_metadata","text":"Set metadata (string)","code":""},{"path":"/reference/set_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set metadata (as a string) — set_metadata","text":"","code":"set_metadata(uri, key, valuesxp, type, is_array, ctxxp, tsvec = NULL)"},{"path":"/reference/set_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set metadata (as a string) — set_metadata","text":"uri array URI key array metadata key valuesxp metadata value type datatype is_array boolean indicate array group ctxxp external pointer SOMAContext wrapper tsvec optional two-element datetime vector","code":""},{"path":"/reference/show_package_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Display package versions — show_package_versions","title":"Display package versions — show_package_versions","text":"Print version information tiledb (R package), libtiledbsoma, TileDB embedded, suitable assisting bug reports.","code":""},{"path":"/reference/show_package_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display package versions — show_package_versions","text":"","code":"show_package_versions()"},{"path":"/reference/soma_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and cache a SOMA Context Object — soma_context","title":"Create and cache a SOMA Context Object — soma_context","text":"Create cache SOMA Context Object","code":""},{"path":"/reference/soma_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and cache a SOMA Context Object — soma_context","text":"","code":"soma_context(config)"},{"path":"/reference/soma_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and cache a SOMA Context Object — soma_context","text":"config named character vector ‘key’ ‘value’ pairs defining configuration setting","code":""},{"path":"/reference/soma_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and cache a SOMA Context Object — soma_context","text":"external pointer object containing shared pointer instance SOMAContext","code":""},{"path":"/reference/soma_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and cache a SOMA Context Object — soma_context","text":"","code":"cfgvec <- as.vector(tiledb::tiledb_config()) # TileDB Config in vector form sctx <- soma_context(cfgvec)"},{"path":"/reference/tiledbsoma_empty_query_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 'tiledbsoma_query_condition' object — tiledbsoma_empty_query_condition","title":"Creates a 'tiledbsoma_query_condition' object — tiledbsoma_empty_query_condition","text":"Creates 'tiledbsoma_query_condition' object","code":""},{"path":"/reference/tiledbsoma_empty_query_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 'tiledbsoma_query_condition' object — tiledbsoma_empty_query_condition","text":"","code":"tiledbsoma_empty_query_condition(somactx)"},{"path":"/reference/tiledbsoma_empty_query_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 'tiledbsoma_query_condition' object — tiledbsoma_empty_query_condition","text":"somactx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"/reference/tiledbsoma_empty_query_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 'tiledbsoma_query_condition' object — tiledbsoma_empty_query_condition","text":"'tiledbsoma_query_condition' object","code":""},{"path":"/reference/tiledbsoma_query_condition-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB QueryCondition object — tiledbsoma_query_condition-class","title":"An S4 class for a TileDB QueryCondition object — tiledbsoma_query_condition-class","text":"S4 class TileDB QueryCondition object","code":""},{"path":"/reference/tiledbsoma_query_condition-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB QueryCondition object — tiledbsoma_query_condition-class","text":"ptr external pointer underlying implementation init logical variable tracking query condition object initialized","code":""},{"path":"/reference/tiledbsoma_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"TileDB SOMA statistics — tiledbsoma_stats","title":"TileDB SOMA statistics — tiledbsoma_stats","text":"functions expose TileDB Core functionality performance measurements statistics.","code":""},{"path":"/reference/tiledbsoma_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TileDB SOMA statistics — tiledbsoma_stats","text":"","code":"tiledbsoma_stats_enable()  tiledbsoma_stats_disable()  tiledbsoma_stats_reset()  tiledbsoma_stats_dump()  tiledbsoma_stats_show()"},{"path":"/reference/tiledbsoma_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TileDB SOMA statistics — tiledbsoma_stats","text":"tiledbsoma_stats_enable()/tiledbsoma_stats_disable(): Enable disable TileDB's internal statistics. tiledbsoma_stats_reset(): Reset statistics 0. tiledbsoma_stats_dump(): Dump statistics JSON string. tiledbsoma_stats_show(): Print statistics console.","code":""},{"path":"/reference/write_soma.Seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Seurat object to a SOMA — write_soma.Seurat","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Write Seurat object SOMA","code":""},{"path":"/reference/write_soma.Seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"","code":"# S3 method for class 'Seurat' write_soma(   x,   uri,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.Seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"x Seurat object uri URI resulting SOMA object ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists “resume”: attempt create new SOMA; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext","code":""},{"path":"/reference/write_soma.Seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"URI resulting SOMAExperiment generated data contained x","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-cell-level-metadata","dir":"Reference","previous_headings":"","what":"Writing Cell-Level Metadata","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Cell-level metadata written data frame called “obs” experiment level","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-v-assays","dir":"Reference","previous_headings":"","what":"Writing v3 Assays","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat Assay objects written individual measurements: “data” matrix written sparse array called “data” within “X” group “counts” matrix, empty, written sparse array called “counts” within “X” group “scale.data” matrix, empty, written sparse array called “scale_data” within “X” group feature-level metadata written data frame called “var” Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-v-assays-1","dir":"Reference","previous_headings":"","what":"Writing v5 Assays","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat v5 Assayss written individualmeasurements: layer matrices written sparse arrays within “X” group feature-level metadata written data frame called “var” Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost following bits metadata written various parts measurement “soma_ecosystem_seurat_assay_version”: written measurement level; indicates Seurat assay version. Set “v5” “soma_ecosystem_seurat_v5_default_layers”: written “X” group level; indicates default layers “soma_ecosystem_seurat_v5_ragged”: written “X/<layer>” array level; value “ragged”, indicates whether layer ragged “soma_r_type_hint”: written “X/<layer>” array level; indicates R class defining package (S4 classes) original layer","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-dimreducs","dir":"Reference","previous_headings":"","what":"Writing DimReducs","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat DimReduc objects written “obsm” “varm” groups measurement: cell embeddings written sparse matrix “obsm” group feature loadings, empty, written sparse matrix “varm” groups; loadings padded NAs include features Dimensional reduction names translated AnnData-style names (eg. “pca” becomes X_pca embeddings “PCs” loadings). slots, including projected feature loadings jackstraw information, lost","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-graphs","dir":"Reference","previous_headings":"","what":"Writing Graphs","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat Graph objects written sparse matrices “obsp” group measurement","code":""},{"path":"/reference/write_soma.Seurat.html","id":"writing-seuratcommands","dir":"Reference","previous_headings":"","what":"Writing SeuratCommands","title":"Write a Seurat object to a SOMA — write_soma.Seurat","text":"Seurat command logs written data frames “seurat_commands” group collection","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Write SingleCellExperiment object SOMA","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"","code":"# S3 method for class 'SingleCellExperiment' write_soma(   x,   uri,   ms_name = NULL,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"x object uri URI resulting SOMA object ms_name Name resulting measurement; defaults mainExpName(x) ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists “resume”: attempt create new SOMA; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"URI resulting SOMAExperiment generated data contained x","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-reduced-dimensions","dir":"Reference","previous_headings":"","what":"Writing Reduced Dimensions","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Reduced dimensions written sparse matrices within obsm group measurement names ms_name","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-column-pairs","dir":"Reference","previous_headings":"","what":"Writing Column Pairs","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Column-wise relationship matrices written sparse matrices within obsp group measurement names ms_name","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-row-pairs","dir":"Reference","previous_headings":"","what":"Writing Row Pairs","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"Row-wise relationship matrices written sparse matrices within varp group measurement names ms_name","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-coldata","dir":"Reference","previous_headings":"","what":"Writing colData","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"colData written data frame called “obs” experiment level","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-assay-matrices","dir":"Reference","previous_headings":"","what":"Writing Assay Matrices","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"assay matrix written sparse matrix within X group measurement names ms_name. Names assay matrices within X taken assay names. Assay matrices transposed (samples rows) prior writing","code":""},{"path":"/reference/write_soma.SingleCellExperiment.html","id":"writing-rowdata","dir":"Reference","previous_headings":"","what":"Writing rowData","title":"Write a SingleCellExperiment object to a SOMA — write_soma.SingleCellExperiment","text":"rowData written data frame called “var” measurement level","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"Write SummarizedExperiment object SOMA","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' write_soma(   x,   uri,   ms_name,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL )"},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"x object uri URI resulting SOMA object ms_name Name resulting measurement ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists “resume”: attempt create new SOMA; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"URI resulting SOMAExperiment generated data contained x","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-coldata","dir":"Reference","previous_headings":"","what":"Writing colData","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"colData written data frame called “obs” experiment level","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-assay-matrices","dir":"Reference","previous_headings":"","what":"Writing Assay Matrices","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"assay matrix written sparse matrix within X group measurement names ms_name. Names assay matrices within X taken assay names. Assay matrices transposed (samples rows) prior writing","code":""},{"path":"/reference/write_soma.SummarizedExperiment.html","id":"writing-rowdata","dir":"Reference","previous_headings":"","what":"Writing rowData","title":"Write a SummarizedExperiment object to a SOMA — write_soma.SummarizedExperiment","text":"rowData written data frame called “var” measurement level","code":""},{"path":"/reference/write_soma.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SOMA Object from an R Object — write_soma","title":"Write a SOMA Object from an R Object — write_soma","text":"Convert R objects appropriate SOMA counterpart function methods can written provide high-level R \\(\\rightarrow\\) SOMA interface","code":""},{"path":"/reference/write_soma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SOMA Object from an R Object — write_soma","text":"","code":"write_soma(x, uri, ..., platform_config = NULL, tiledbsoma_ctx = NULL)"},{"path":"/reference/write_soma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SOMA Object from an R Object — write_soma","text":"x object uri URI resulting SOMA object ... Arguments passed methods platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext","code":""},{"path":"/reference/write_soma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SOMA Object from an R Object — write_soma","text":"URI resulting SOMAExperiment generated data contained x","code":""},{"path":"/reference/write_soma.html","id":"known-methods","dir":"Reference","previous_headings":"","what":"Known methods","title":"Write a SOMA Object from an R Object — write_soma","text":"Writing Seurat objects Writing SummarizedExperiment objects Writing SingleCellExperiment objects","code":""},{"path":"/reference/write_soma_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Write R Objects to SOMA — write_soma.DataFrame","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"Various helpers write R objects SOMA","code":""},{"path":"/reference/write_soma_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"","code":"# S3 method for class 'DataFrame' write_soma(   x,   uri,   soma_parent,   df_index = NULL,   index_column_names = \"soma_joinid\",   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Hits' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'character' write_soma(   x,   uri,   soma_parent,   ...,   key = NULL,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'data.frame' write_soma(   x,   uri,   soma_parent,   df_index = NULL,   index_column_names = \"soma_joinid\",   ...,   key = NULL,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'matrix' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Matrix' write_soma(   x,   uri,   soma_parent,   sparse = TRUE,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'TsparseMatrix' write_soma(   x,   uri,   soma_parent,   type = NULL,   transpose = FALSE,   ...,   key = NULL,   ingest_mode = \"write\",   shape = NULL,   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )"},{"path":"/reference/write_soma_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"x object uri URI resulting SOMA object soma_parent parent collection (eg. SOMACollection, SOMAExperiment, SOMAMeasurement) df_index name column x index (row names); default, automatically add row names x attribute named “index” resulting SOMADataFrame index_column_names Names columns x index resulting SOMA object ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists “resume”: attempt create new SOMA; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext relative [Internal use ] uri relative aboslute sparse Create sparse dense array x type Arrow type encoding x (eg. arrow::int32()); default, attempts determine arrow type arrow::infer_type() transpose Transpose x writing key Optionally register resulting SOMADataFrame soma_parent key; pass NULL prevent registration handle manually shape vector two positive integers giving -disk shape array; defaults dim(x)","code":""},{"path":"/reference/write_soma_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"resulting SOMA array data frame, returned opened write","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-character-arrays","dir":"Reference","previous_headings":"","what":"Writing Character Arrays","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"Characters written SOMADataFrames one attribute: “values”; additionally one bit array-level metadata added: “soma_uns_outgest_hint ” value “array_1d ”","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-data-frames","dir":"Reference","previous_headings":"","what":"Writing Data Frames","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"Data frames written SOMADataFrames. following transformations applied x: row names added column x entitled “index”, “_index”, random name either option already present x column “soma_joinid” automatically added going [0, nrow(x) - 1] encoded 64-bit integers array type column determined arrow::infer_type(); column contains non-atomic type (excluding factors, complexes,raws), code error ","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-dense-matrices","dir":"Reference","previous_headings":"","what":"Writing Dense Matrices","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"Dense matrices written two-dimensional dense arrays. overall shape array determined dim(x) type array determined type arrow::infer_type(x)","code":""},{"path":"/reference/write_soma_objects.html","id":"writing-sparse-matrices","dir":"Reference","previous_headings":"","what":"Writing Sparse Matrices","title":"Write R Objects to SOMA — write_soma.DataFrame","text":"Sparse matrices written two-dimensional TileDB sparse arrays COO format: row indices (“”) written “soma_dim_0” column indices (“j”) written “soma_dim_1” non-zero values (“x”) written “soma_data” array type determined type, arrow::infer_type(slot(x, \"x\"))","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Various helpers write Seurat sub-objects SOMA objects.","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"","code":"# S3 method for class 'Assay' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Assay5' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'DimReduc' write_soma(   x,   uri = NULL,   soma_parent,   fidx = NULL,   nfeatures = NULL,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'Graph' write_soma(   x,   uri,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )  # S3 method for class 'SeuratCommand' write_soma(   x,   uri = NULL,   soma_parent,   ...,   ingest_mode = \"write\",   platform_config = NULL,   tiledbsoma_ctx = NULL,   relative = TRUE )"},{"path":"/reference/write_soma_seurat_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"x Seurat sub-object (eg. Assay, DimReduc, Graph) uri URI resulting SOMA object soma_parent parent collection; DimReduc Graph methods, must measurement assay x generated ... Arguments passed methods ingest_mode Ingestion mode creating SOMA; choose : “write”: create new SOMA error already exists “resume”: attempt create new SOMA; already exists, simply open writing platform_config Optional platform configuration tiledbsoma_ctx Optional SOMATileDBContext relative [Internal use ] uri relative aboslute fidx integer vector describing location features SeuratObject::Loadings(x) relation soma_parent (eg. match(rownames(Loadings(x)), rownames(assay))) nfeatures number features present soma_parent (eg. nrow(assay))","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Assay Assay5 methods: SOMAMeasurement data x, returned opened write DimReduc Graph methods: invisibly returns soma_parent, opened write, values x added ","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-v-assays","dir":"Reference","previous_headings":"","what":"Writing v3 Assays","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat Assay objects written individual measurements: “data” matrix written sparse array called “data” within “X” group “counts” matrix, empty, written sparse array called “counts” within “X” group “scale.data” matrix, empty, written sparse array called “scale_data” within “X” group feature-level metadata written data frame called “var” Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-v-assays-1","dir":"Reference","previous_headings":"","what":"Writing v5 Assays","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat v5 Assayss written individualmeasurements: layer matrices written sparse arrays within “X” group feature-level metadata written data frame called “var” Expression matrices transposed (cells rows) prior writing. slots, including results extended assays (eg. SCTAssay, ChromatinAssay) lost following bits metadata written various parts measurement “soma_ecosystem_seurat_assay_version”: written measurement level; indicates Seurat assay version. Set “v5” “soma_ecosystem_seurat_v5_default_layers”: written “X” group level; indicates default layers “soma_ecosystem_seurat_v5_ragged”: written “X/<layer>” array level; value “ragged”, indicates whether layer ragged “soma_r_type_hint”: written “X/<layer>” array level; indicates R class defining package (S4 classes) original layer","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-dimreducs","dir":"Reference","previous_headings":"","what":"Writing DimReducs","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat DimReduc objects written “obsm” “varm” groups measurement: cell embeddings written sparse matrix “obsm” group feature loadings, empty, written sparse matrix “varm” groups; loadings padded NAs include features Dimensional reduction names translated AnnData-style names (eg. “pca” becomes X_pca embeddings “PCs” loadings). slots, including projected feature loadings jackstraw information, lost","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-graphs","dir":"Reference","previous_headings":"","what":"Writing Graphs","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat Graph objects written sparse matrices “obsp” group measurement","code":""},{"path":"/reference/write_soma_seurat_sub.html","id":"writing-seuratcommands","dir":"Reference","previous_headings":"","what":"Writing SeuratCommands","title":"Convert a Seurat Sub-Object to a SOMA Object, returned opened for write — write_soma_seurat_sub_objects","text":"Seurat command logs written data frames “seurat_commands” group collection","code":""},{"path":"/news/index.html","id":"tiledbsoma-1161","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.16.1","title":"tiledbsoma 1.16.1","text":"release contains Python-bugfix","code":""},{"path":"/news/index.html","id":"tiledbsoma-1160","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.16.0","title":"tiledbsoma 1.16.0","text":"Encode string metadata TILEDB_STRING_UTF8 instead TILEDB_STRING_ASCII Use S3 method dispatch integer64 instead directly calling S3 methods [c++] Replace SOMAArray read write calls ManagedQuery #3678 Remove used_shape, deprecated 1.15 scheduled removal 1.16 #3723","code":""},{"path":"/news/index.html","id":"tiledbsoma-1157","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.7","title":"tiledbsoma 1.15.7","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1156","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.6","title":"tiledbsoma 1.15.6","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1155","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.5","title":"tiledbsoma 1.15.5","text":"release contains Python-bugfix","code":""},{"path":"/news/index.html","id":"tiledbsoma-1154","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.4","title":"tiledbsoma 1.15.4","text":"release contains Python-updates spatial transcriptomics","code":""},{"path":"/news/index.html","id":"tiledbsoma-1153","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.3","title":"tiledbsoma 1.15.3","text":"release contains Python-bugfixes","code":""},{"path":"/news/index.html","id":"tiledbsoma-1152","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.2","title":"tiledbsoma 1.15.2","text":"release contains Python-bugfix","code":""},{"path":"/news/index.html","id":"tiledbsoma-1151","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.15.1","title":"tiledbsoma 1.15.1","text":"Encode string metadata TILEDB_STRING_UTF8 instead TILEDB_STRING_ASCII #3469","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-15-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.15.0","text":"Remove unused fragment_count accessor #3054 Implement missing domain argument SOMADataFrame create #3032 Use libtiledbsoma R schema evolution #3100 Push attrnames C++ #3121 Push schema accessor libtiledbsoma #3079 Handle numeric coords properly reading arrays Remove two tiledb::schema callsites #3160 Add new Arrow--R type mapper Add transitional/non-exported parse_query_condition_new #3162 Apply new parse_query_condition #3174 Apply new non_empty_domain #3176 Support dense current domain core 2.27 #3180 Fix is_named_list bug half-named lists #3183 Expose block/random writer sparse arrays #3204 Min-sizing dataframes/arrays new shape feature #3208 Proper prefixing shape-related methods #3237 Bindings upgrade_domain #3238 Apply styler::style_pkg() #3239 Plumb old-style SOMATileDBContext new-style soma_context() #3252 Fixes dense arrays yet---released core 2.27 #3270 fixes unit-test cases dense + core 2.27 #3280 Add initial support ragged array writing Seurat v5 @mojaveazure #2523 Remove 2.27-related feature flag @johnkerl #3368 Revert #3300 @johnkerl #3358 Enforce dataframe domain lower bound == 0 @johnkerl #3300 Data refresh new shapes @johnkerl #3303 Move beyond new-shape feature flag @johnkerl #3301 Note dev installs spdlog failures @johnkerl #3324 Remove tiledb-r specific install @mojaveazure #3319 Try unbreak r-valgrind CI @johnkerl #3318 Avoid log truncation “Last 13 lines output” @johnkerl #3313 Run tests closer internal-dependency order @johnkerl #3311 Use standard name zzz.R init code @johnkerl #3332 Address two compiler warnings @johnkerl #3320 Add support writing Seurat v5 ragged arrays Update docstrings domain argument create #3396 Vignette new-shape feature #3302 Fix blockwise iterator + re-indexer return re-indexed shape instead full domain Docstring audit new shape #3399 Add check_only support domain/shape updates #3400 Adjust blockwise + re-indexer return condensed matrix, full domain #3395 [c++] Use core 2.27.0.rc5 #3410 [c++] Use core 2.27.0 #3422","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.5","text":"Fixes Python-bug #3225","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.4","text":"Add new Arrow--R type mapper #3161 Expose block/random writer sparse arrays #3204","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.3","text":"Handle numeric coords properly reading arrays 3145","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.2","text":"Fixes Python-bug #3074","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.1","text":"Fixes Python-bug #3013","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-14-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.14.0","text":"New resize tiledbsoma_upgrade_shape accessors part new-shape project Make use timestamp ranges libtiledbsoma Simplify timestamp ranges; strengthen assumptions tiledb_timestamp Use cached timestamps $write() $create() Fix bug blockwise iteration Lay groundwork cached SOMA contexts within objects rather re-creating contexts SOMA context objects used throughout SOMA object creation Add value-checking axis parameter initializing blockwise reads","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-13-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.1","text":"Includes fix appended enumerations #2903","code":""},{"path":"/news/index.html","id":"changes-1-13-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.1","text":"New resize tiledbsoma_upgrade_shape accessors part new-shape project Make use timestamp ranges libtiledbsoma Simplify timestamp ranges; strengthen assumptions tiledb_timestamp Use cached timestamps $write() $create() Fix bug blockwise iteration Lay groundwork cached SOMA contexts within objects rather re-creating contexts SOMA context objects used throughout SOMA object creation Add value-checking axis parameter initializing blockwise reads","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-13-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.13.0","text":"Updates TileDB Core dependency 2.25.0 used_shape function deprecated; shape mods upcoming scheduled TileDB-SOMA 1.15 Change $reopen(mode = ) default flip modes; require explicit mode parameter passed Add drop_levels SOMAExperimentAxisQuery -> ecosystem outgestors drop unused factor levels","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.3","text":"Updates TileDB Core dependency 2.24.2","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.2","text":"R changes; update Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.1","text":"Updates TileDB Core 2.24.1","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-12-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.12.0","text":"Updates TileDB Core 2.24 TileDB-R 0.28 Connect re-indexer blockwise iterator return re-indexed tables matrices","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.4","text":"Fixes couple bugs observed Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.3","text":"Fixes intermittent segfault observed Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.2","text":"New reopen method available R","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.1","text":"R changes; update Python","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-11-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.11.0","text":"Add support ingestion SeuratCommand logs Add support outgestion SeuratCommand logs Add support reading *m *p layers SOMAExperimentAxisQuery Add support blockwise iteration Make reopen() public method TileDBObjects Add support resume-mode write_soma() Push default-setting TileDBCreateOptions $initialize() instead accessors Muffle warnings missing command logs outgesting SOMA Seurat SOMADataFrame$shape() throw -yet-implemented error Disable running SeuratObject::.CalcN() outgesting SOMA Seurat Clear timestamp using $reopen() reopen current time Add support re-indexer","code":""},{"path":[]},{"path":"/news/index.html","id":"fixes-1-6-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"tiledbsoma 1.6.0","text":"SOMADataFrame, SOMASparseNDArray, SOMADenseNDArray’s write() method now correctly leaves array open write mode","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.5.0","text":"Add support /O R factors enumerated types SOMADataFrame Add support writing SummarizedExperiment SingleCellExperiment object SOMAs Add support bounding boxes sparse arrays Add support creating SOMADataFrames ordered() columns Add support /O SOMA SingleCellExperiment Add support updating obs var Write string attrs UTF-8 (Python compatibility) Optimize export obsm/varm arrays Seurat Add axis_query() method SOMAExperiment Add to_sparse_matrix() method SOMAExperimentAxisQuery Force exporting v3 assays SeuratObject v5 installed","code":""},{"path":"/news/index.html","id":"tiledbsoma-140","dir":"Changelog","previous_headings":"","what":"tiledbsoma 1.4.0","title":"tiledbsoma 1.4.0","text":"initial release tiledbsoma R package.","code":""},{"path":"/news/index.html","id":"changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledbsoma 1.4.0","text":"Added NEWS.md file track changes package TileDBGroup gains names method retrieve names group members Added SOMAMeasurement SOMAExperiment classes spdl now used logging TileDB performance statistics can now collected analysis Added support performing axis-based queries SOMAExperiment via SOMAExperimentAxisQuery class TileDBArray class gained colnames() method returns names dimensions attributes Added internal helpers centrally validate coords value_filter arguments R6 classes’ create() method now return self rather nothing Fixed calculating relative paths 1 URIs contains file:// prefix Added PlatformConfig SOMATileDBContext classes handle SOMA TileDB configuration Add Seurat outgestors SOMAExperimentAxisQuery objects Numeric coordinates passed SOMADataFrame$read() now automatically upcast int64 necessary Add ingestors read data Seurat objects Add methods listing accessing bundled datasets, now includes SOMAExperiment containing pbmc_small dataset SeuratObject package New vignettes describing SOMA objects, reading data , querying SOMA experiments Objects added SOMACollection-based classes using add_new_*() methods now pass parent context platform config SOMAExperimentAxisQuery gained to_sparse_matrix() method retrieving data named sparse matrix SOMAExperiment gained axis_query() construct SOMAExperimentAxisQuery object Add SingleCellExperiment outgestor SOMAExperimentAxisQuery objects","code":""}]
