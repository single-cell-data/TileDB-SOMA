# Reusable workflow that runs C++ tests.
# About reusable workflows: https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow

name: TileDB-SOMA C++ CI

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      run_asan:
        required: true
        type: boolean
      report_codecov:
        required: true
        type: boolean

jobs:

  catch2:
    runs-on: ${{ inputs.os }}
    steps:

      - name: Checkout TileDB-SOMA
        uses: actions/checkout@v4

      - name: Checkout vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: vcpkg  

      - name: Bootstrap vcpkg
        run: |
          ./vcpkg/bootstrap-vcpkg.sh
          echo "CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV

      - name: Verify vcpkg toolchain exists
        run: ls -la ${{ github.workspace }}/vcpkg/scripts/buildsystems/

      - name: Build
        run: TILEDBSOMA_COVERAGE="--coverage" ./scripts/bld --no-tiledb-deprecated=true --werror=true --preset vcpkg

      - name: Run C++ tests
        run: ctest --test-dir build/libtiledbsoma -C Release --verbose --rerun-failed --output-on-failure

      - name: Upload coverage to Codecov
        if: ${{ inputs.report_codecov }}
        uses: codecov/codecov-action@v5
        with:
          flags: libtiledbsoma
          gcov_include: $(find libtiledbsoma -name "*.h" -or -name "*.cc")
          token: ${{ secrets.CODECOV_TOKEN }}


  asan:
    if: ${{ inputs.run_asan }}
    runs-on: ${{ inputs.os }}
    steps:

      - name: Checkout TileDB-SOMA
        uses: actions/checkout@v4

      - name: Checkout vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: vcpkg  

      - name: Bootstrap vcpkg
        run: |
          ./vcpkg/bootstrap-vcpkg.sh
          echo "CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV

      - name: Verify vcpkg toolchain exists
        run: ls -la ${{ github.workspace }}/vcpkg/scripts/buildsystems/

      - name: Set ASAN Triplet for OS
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            echo "VCPKG_ASAN_TRIPLET=x64-linux-asan" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "VCPKG_ASAN_TRIPLET=x64-osx-asan" >> $GITHUB_ENV
          fi
      
      - name: Install pre-built libtiledb
        run: |
          mkdir -p external
            # Please do not edit manually -- let scripts/update-tiledb-version.py update this
          wget --quiet https://github.com/TileDB-Inc/TileDB/releases/download/2.29.1/tiledb-linux-x86_64-2.29.1-9a6284d.tar.gz
          tar -C external -xzf tiledb-*.tar.gz
          ls external/lib/

      - name: Build and install libtiledbsoma
        run: |
          ./scripts/bld --preset vcpkg-asan --no-tiledb-deprecated=true --werror=true
          cmake --build build -j 2
          ls external/lib/

      - name: Run C++ unittests
        run: ASAN_OPTIONS=detect_leaks=0 ctest --test-dir build/libtiledbsoma -C ASAN --verbose --rerun-failed --output-on-failure