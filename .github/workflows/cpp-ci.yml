name: TileDB-SOMA C++ CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12]
        python-version: ['3.8']
        include:
          - runs-on: ubuntu-22.04
            cc: gcc-11
            cxx: g++-11
          - runs-on: macos-12
            cc: gcc-11
            cxx: g++-11

    steps:
    - name: 'Print env'
      run: |
        echo "'uname -s' is:"
        echo "uname: " $(uname)
        echo "uname -m: " $(uname -m)
        echo "uname -r:" $(uname -r)
        echo "uname -s: " $(uname -s)
        echo "uname -v: " $(uname -v)
        printenv
      shell: bash
      if: ${{ runner.os != 'Windows' }}

    - name: Checkout TileDB-SOMA
      uses: actions/checkout@v2

    # TODO: add clang-format check

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python packages
      shell: bash
      run: |
        echo "PWD"
        pwd
        echo "LS"
        ls -l
        python -m pip install -v pytest pybind11 apis/python
        echo "SOI"
        echo "SOI"
        echo "SOI"
        for x in /Users/runner/work/TileDB-SOMA/TileDB-SOMA/build/externals/src/ep_spdlog-stamp/ep_spdlog-download-*.log; do
            cat $x
        done
        echo "EOI"
        echo "EOI"
        echo "EOI"
        find /Users/runner/work/TileDB-SOMA/TileDB-SOMA/build -follow -name spdlog.h
        find /Users/runner/work/TileDB-SOMA/TileDB-SOMA/build -follow -name fmt.h
        find /Users/runner/work/TileDB-SOMA/TileDB-SOMA/build -follow -name version.h
        cat /dev/null $(find /Users/runner/work/TileDB-SOMA/TileDB-SOMA/build -follow -name version.h)
        echo "XXX"
        cd libtiledbsoma; grep -rli spdlog | grep -v cc.o; cd ..
        echo "XXX"
        cd libtiledbsoma; grep -C10 -i spdlog $(grep -rli spdlog | grep -v cc.o); cd ..
        echo "XXX"
        echo "YYY"
        echo "YYY"
        echo "YYY"
        cat -n build/libtiledbsoma/_deps/catch2-build/src/CMakeFiles/Catch2WithMain.dir/build.make
        echo "ZZZ"
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    - name: Generate test data
      shell: bash
      run: |
        mkdir -p test/soco
        ./apis/python/tools/ingestor --soco -o test/soco -n data/pbmc3k_processed.h5ad data/10x-pbmc-multiome-v1.0/subset_100_100.h5ad

    - name: Run libtiledbsoma unit tests
      shell: bash
      run: |
        source ./scripts/test

    - name: Run libtiledbsoma pytests
      shell: bash
      run: |
        pytest -v --durations=0 libtiledbsoma

