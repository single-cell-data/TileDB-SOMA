name: TileDB-SingleCell C++ CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-20.04, macos-11, windows-2019]
        os: [ubuntu-20.04, macos-11]
        python-version: ['3.8']
        include:
          - runs-on: ubuntu-latest
            cc: gcc-10
            cxx: g++-10

    steps:
    - name: 'Print env'
      run: |
        echo "'uname -s' is:"
        echo "uname: " $(uname)
        echo "uname -m: " $(uname -m)
        echo "uname -r:" $(uname -r)
        echo "uname -s: " $(uname -s)
        echo "uname -v: " $(uname -v)
        printenv
      shell: bash
      if: ${{ runner.os != 'Windows' }}

    - name: Checkout TileDB-SingleCell
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python packages
      shell: bash
      run: |
        python -m pip install pytest pybind11 apis/python

    - name: Build libtiledbsc
      shell: bash
      run: |
        export pybind11_DIR=$(python -m pybind11 --cmakedir)
        echo "pybind11_DIR is: ${pybind11_DIR}"
        mkdir build
        cmake -B ${GITHUB_WORKSPACE}/build -S ${GITHUB_WORKSPACE}/libtiledbsc -Dpybind11_DIR=${pybind11_DIR}
        if [ "$RUNNER_OS" == "Linux" ]; then
          cmake --build ${GITHUB_WORKSPACE}/build --target check-format
        fi
        cmake --build ${GITHUB_WORKSPACE}/build --config Release -j ${NUMBER_OF_PROCESSORS} 2>&1
        cmake --build ${GITHUB_WORKSPACE}/build --config Release -j ${NUMBER_OF_PROCESSORS} -t install-libtiledbsc 2>&1
        cmake --build ${GITHUB_WORKSPACE}/build/libtiledbsc --config Release -j ${NUMBER_OF_PROCESSORS} -t build_tests 2>&1
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    - name: Generate test data
      shell: bash
      run: |
        mkdir -p test/soco
        ./apis/python/tools/ingestor --soco -o test/soco -n data/pbmc3k_processed.h5ad data/10x-pbmc-multiome-v1.0/subset_100_100.h5ad

    - name: Run libtiledbsc tests
      shell: bash
      run: |
        export PATH=${PATH}:${GITHUB_WORKSPACE}/build/externals/install/bin
        pushd ${GITHUB_WORKSPACE}/build/libtiledbsc
        ctest -C Release --verbose
        cd -
        export PYTHONPATH=$PWD/dist/lib
        export LD_LIBRARY_PATH=$PWD/dist/lib
        pytest -sv --durations=0 libtiledbsc
