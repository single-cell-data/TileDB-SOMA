name: Build python sdist & wheels

on:
  push:
  #workflow_dispatch:
  #push:
  #  branches: [main]
  #release:
  #  types: [published]

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout TileDB-SOMA
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build sdist
      run: python setup.py sdist
      working-directory: ./apis/python
    - name: Upload sdist artifact
      uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: apis/python/dist/

  wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: sdist
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-20.04
          cibw_build: '*-manylinux_x86_64'
          platform: manylinux2014
        - os: macos-11
          cibw_build: '*-macosx_x86_64'
          platform: macosx
    steps:
    - name: Download sdist artifact
      uses: actions/download-artifact@v3
      with:
        name: sdist
    - name: rename sdist
      run: cp tiledbsoma-*.tar.gz tiledbsoma.tar.gz && ls -lh
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.11.3
      with:
        package-dir: tiledbsoma.tar.gz
      env:
        CIBW_BUILD: ${{ matrix.cibw_build }}
    - name: Upload wheels-${{ matrix.platform }}
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.platform }}
        path: ./wheelhouse/*.whl

  smoke-test:
    name: Smoke test
    needs: wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-20.04
          platform: manylinux2014
          arch: x86_64
        - os: macos-11
          platform: macosx
          arch: x86_64
    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Install wheel
      run: |
        set -x
        ls -lR
        whl=$(find . -name 'tiledbsoma-*-cp38-cp38-*${{ matrix.platform }}*_${{ matrix.arch }}.whl')
        unzip -l $whl
        pip install wheel $whl
    - name: Smoke test ${{ matrix.os }}
      run: python -c 'import tiledbsoma; print(tiledbsoma.libtiledbsoma.__file__)'
