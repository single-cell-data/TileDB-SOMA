name: TileDB-SOMA Python CI (remote storage)

on:
  push:
    branches:
      - main
      - 'release-*'
  pull_request:
    paths:
      - "libtiledbsoma/**"
      - "apis/python/**"
      - "!**.md"
      - '.github/workflows/python-remote-storage.yml'
  workflow_dispatch:

env:
  # Don't name this "TILEDB_REST_TOKEN" since that will map into a core env/config override. This
  # test should verify all config options are being properly passed with just config/context.
  TILEDB_REST_UNITTEST_TOKEN: ${{ secrets.TILEDB_REST_UNITTEST_TOKEN}}

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux
            os: ubuntu-24.04
            python_version: 3.9 # Should match TileDB-Cloud version
            cc: gcc-13
            cxx: g++-13

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Show matrix OS
        run: echo "matrix.os:" ${{ matrix.os }}

      - name: Linux CPU info
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: cat /proc/cpuinfo

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: pip
          cache-dependency-path: ./apis/python/setup.py

      - name: Check out TileDB-SOMA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure we get all tags to inform package version determination

      - name: Checkout vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: vcpkg

      - name: Bootstrap vcpkg
        run: |
          ./vcpkg/bootstrap-vcpkg.sh
          echo "CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV

      - name: Build C++ core
        run: ./scripts/bld --preset vcpkg --no-tiledb-deprecated=true --werror=true
      
      - name: Log pip dependencies
        run: pip list

      - name: Install tiledbsoma
        # If you'reiterating on the testing framework itself, install from PyPI to avoid the
        # time-consuming build. If you're trying to evaluate the code modified by a PR,
        # install from source.
        #
        # From PyPI:
        # run: pip install tiledbsoma==1.15.7
        #
        # From source:
        run: pip -v install -e apis/python[all] -C "--build-option=--no-tiledb-deprecated"
        #
        env:
          CC: ${{ matrix.cc }}

          CXX: ${{ matrix.cxx }}

      - name: Install dependencies
        run: pip install --prefer-binary pytest typeguard tiledb tiledb.cloud

      - name: Show package versions
        run: python scripts/show-versions.py

      - name: Show tiledb.cloud version
        run: python -c 'import tiledb.cloud; print(tiledb.cloud.version.version)'

      - name: Run pytests for Python
        shell: bash
        run: python -m pytest apis/python/remote_tests -v --durations=20 --maxfail=50
