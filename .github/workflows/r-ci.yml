name: TileDB-SOMA R CI

on:
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/workflows/r-ci.yml'
      - '!.pre-commit-config.yaml'
      - '!apis/python/**'
      - '!docker/**'
      - '!docs/**'
      - '!LICENSE'
  push:
    branches:
      - main
      - 'release-*'
  workflow_dispatch:

env:
  COVERAGE_FLAGS: "r"
  COVERAGE_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  R_KEEP_PKG_SOURCE: yes
  _R_CHECK_TESTS_NLINES_: 0
  CATCHSEGV: "TRUE"
  R_REMOTES_UPGRADE: "never"
  TILEDB_SOMA_INIT_BUFFER_BYTES: 33554432 # accommodate tiny runners

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux
            os: ubuntu-24.04
            covr: 'no'
          - name: macos
            os: macOS-latest
            covr: 'no'
          - name: coverage
            os: ubuntu-24.04
            covr: 'yes'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Show matrix OS
        run: echo "matrix.os:" ${{ matrix.os }}

      - name: Linux CPU info
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: cat /proc/cpuinfo

      - name: MacOS CPU info
        if: ${{ matrix.os == 'macOS-latest' }}
        run: sysctl -a | grep cpu

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          extra-repositories: https://tiledb-inc.r-universe.dev

      - name: P3M Bioconductor
        run: |
          cat(
            'options(BioC_mirror = "https://packagemanager.posit.co/bioconductor/latest")\n',
            'options(BIOCONDUCTOR_CONFIG_FILE = "https://packagemanager.posit.co/bioconductor/latest/config.yaml")\n',
            sep = '',
            file = '~/.Rprofile',
            append = TRUE
          )
        shell: Rscript {0}

      - name: R Package Type (macOS)
        if: ${{ matrix.os == 'macOS-latest' }}
        run: echo 'options(pkgType = "binary")' | tee -a "$(R RHOME)/etc/Rprofile.site"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: 'apis/r/'
          cache-version: 2

      # - name: CMake
      #   uses: lukka/get-cmake@latest

      #- name: MkVars
      #  run: mkdir ~/.R && echo "CXX20FLAGS=-Wno-deprecated-declarations -Wno-deprecated" > ~/.R/Makevars

      #- name: Build and install libtiledbsoma
      #  run: sudo scripts/bld --prefix=/usr/local

      #- name: Call ldconfig
      #  if: ${{ matrix.os == 'ubuntu-24.04' }}
      #  run: sudo ldconfig
      #
      # - name: Update Packages
      #   run: Rscript -e 'update.packages(ask=FALSE)'

      - name: Build Package
        run: cd apis/r && R CMD build --no-build-vignettes --no-manual .

      - name: Install Package
        run: cd apis/r && R CMD INSTALL $(ls -1tr *.tar.gz | tail -1)

      # - name: Diagnostics
      #   run: Rscript -e 'print(Sys.info())'

      # - name: Downgrade TileDB-R if needed
      #   run: cd apis/r && Rscript tools/controlled_downgrade.R

      #- name: Test
      #  if: ${{ matrix.covr == 'no' }}
      #  run: |
      #    cd apis/r
      #    Rscript -e "install.packages('devtools')" \
      #      -e "devtools::install(upgrade = FALSE)" \
      #      -e "testthat::test_local('tests/testthat', load_package = 'installed')"

      - name: Test
        if: ${{ matrix.covr == 'no' }}
        run: cd apis/r/tests && Rscript testthat.R

      - name: Coverage
        if: ${{ matrix.os == 'ubuntu-24.04' && matrix.covr == 'yes' && github.event_name == 'workflow_dispatch' }}
        run: apis/r/tools/r-ci.sh coverage

      - name: View Logs
        run: apis/r/tools/r-ci.sh dump_logs
        if: failure()
